"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1392],{9660:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>_,toc:()=>a});var d=r(5893),t=r(1151);const i={},c="HiFi5 \u8bed\u97f3\u7b97\u6cd5\u90e8\u7f72",_={id:"developer-guide/part3/chapter3",title:"HiFi5 \u8bed\u97f3\u7b97\u6cd5\u90e8\u7f72",description:"\u90e8\u7f72\u7b97\u6cd5\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u56db\u4e2a\u65b9\u9762\u7684\u529f\u80fd\uff1a",source:"@site/docs/developer-guide/part3/chapter3.md",sourceDirName:"developer-guide/part3",slug:"/developer-guide/part3/chapter3",permalink:"/developer-guide/part3/chapter3",draft:!1,unlisted:!1,editUrl:"https://github.com/100askTeam/R128-Docs/tree/main/docs/developer-guide/part3/chapter3.md",tags:[],version:"current",frontMatter:{},sidebar:"classpartoneSidebar",previous:{title:"DSP \u5f00\u53d1\u5de5\u5177\u5b89\u88c5",permalink:"/developer-guide/part3/chapter2"},next:{title:"\u8c03\u8bd5\u6307\u5357",permalink:"/category/\u8c03\u8bd5\u6307\u5357"}},s={},a=[{value:"\u521b\u5efaDSP\u7b97\u6cd5\u7ec4\u4ef6\u76ee\u5f55",id:"\u521b\u5efadsp\u7b97\u6cd5\u7ec4\u4ef6\u76ee\u5f55",level:2},{value:"\u7f16\u5199\u57fa\u7840\u4ee3\u7801",id:"\u7f16\u5199\u57fa\u7840\u4ee3\u7801",level:2},{value:"\u5728DSP\u4e0a\u5f55\u97f3",id:"\u5728dsp\u4e0a\u5f55\u97f3",level:2},{value:"\u4f7f\u7528\u7b97\u6cd5\u52a0\u901f\u5e93",id:"\u4f7f\u7528\u7b97\u6cd5\u52a0\u901f\u5e93",level:2},{value:"\u6838\u95f4\u901a\u8baf",id:"\u6838\u95f4\u901a\u8baf",level:2},{value:"DUMP \u6570\u636e\u5230PC",id:"dump-\u6570\u636e\u5230pc",level:2}];function l(n){const e={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...n.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(e.h1,{id:"hifi5-\u8bed\u97f3\u7b97\u6cd5\u90e8\u7f72",children:"HiFi5 \u8bed\u97f3\u7b97\u6cd5\u90e8\u7f72"}),"\n",(0,d.jsx)(e.p,{children:"\u90e8\u7f72\u7b97\u6cd5\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u56db\u4e2a\u65b9\u9762\u7684\u529f\u80fd\uff1a"}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsx)(e.li,{children:"\u521b\u5efaDSP\u7b97\u6cd5\u7ec4\u4ef6\u76ee\u5f55\u53ca\u7f16\u5199\u4ee3\u7801"}),"\n",(0,d.jsx)(e.li,{children:"\u5728DSP\u4e0a\u5f55\u97f3"}),"\n",(0,d.jsx)(e.li,{children:"\u4f7f\u7528\u7b97\u6cd5\u52a0\u901f\u5e93\u52a0\u901f\u7b97\u6cd5"}),"\n",(0,d.jsx)(e.li,{children:"\u6838\u95f4\u901a\u8baf"}),"\n",(0,d.jsx)(e.li,{children:"DUMP \u6570\u636e\u5230PC"}),"\n"]}),"\n",(0,d.jsx)(e.h2,{id:"\u521b\u5efadsp\u7b97\u6cd5\u7ec4\u4ef6\u76ee\u5f55",children:"\u521b\u5efaDSP\u7b97\u6cd5\u7ec4\u4ef6\u76ee\u5f55"}),"\n",(0,d.jsx)(e.p,{children:"\u521b\u5efa\u5e76\u8fdb\u5165\u76ee\u5f55\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"mkdir -p lichee/rtos-components/thirdparty/my_dsp_asr/src\nmkdir -p lichee/rtos-components/thirdparty/my_dsp_asr/inc\ncd lichee/rtos-components/thirdparty/my_dsp_asr/\n"})}),"\n",(0,d.jsxs)(e.p,{children:["\u7f16\u5199 ",(0,d.jsx)(e.code,{children:"Kconfig"})," \u6587\u4ef6\uff1a"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-kconfig",children:'menu "my dsp asr"\n\nconfig COMPONENTS_MY_DSP_ASR\n    bool "my dsp asr"\n    depends on ARCH_DSP\n    default n\n    help\n        to do\n\nendmenu\n'})}),"\n",(0,d.jsxs)(e.p,{children:["\u4fee\u6539 ",(0,d.jsx)(e.code,{children:"Kconfig"}),"\u540e\u5efa\u8bae\u91cd\u65b0 ",(0,d.jsx)(e.code,{children:"menuconfig"})]}),"\n",(0,d.jsxs)(e.p,{children:["\u5728 ",(0,d.jsx)(e.code,{children:"lichee/rtos-components/thirdparty/Kconfig"})," \u4e2d\u8ffd\u52a0\uff1a"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-kconfig",children:'source "components/common/thirdparty/my_dsp_asr/Kconfig"\n'})}),"\n",(0,d.jsxs)(e.p,{children:["\u7f16\u5199 ",(0,d.jsx)(e.code,{children:"Makefile"}),"\uff1a"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"obj-y += src/my_dsp_asr.o\n#self\nCFLAGS += -Icomponents/common/aw/asr_demo/inc/\n"})}),"\n",(0,d.jsxs)(e.p,{children:["\u5728 ",(0,d.jsx)(e.code,{children:"lichee/rtos-components/thirdparty/Makefile"})," \u4e2d\u8ffd\u52a0\uff1a"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"obj-$(CONFIG_COMPONENTS_MY_DSP_ASR) += my_dsp_asr/\n"})}),"\n",(0,d.jsx)(e.h2,{id:"\u7f16\u5199\u57fa\u7840\u4ee3\u7801",children:"\u7f16\u5199\u57fa\u7840\u4ee3\u7801"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include <stdint.h>\n#include <stddef.h>\n#include <string.h>\n#include <console.h>\n#include <FreeRTOS.h>\n#include <task.h>\n\nstatic void my_dsp_asr_thread(void *arg)\n{\n    size_t loop = (size_t)arg;\n    printf("%s enter\\n", __func__);\n    while (loop--) {\n        printf("%s %u\\n", __func__, loop);\n        vTaskDelay(500 / portTICK_PERIOD_MS);\n    }\n    printf("%s exit\\n", __func__);\n\n    vTaskDelete(NULL);\n}\n\nconst char *thread_name = "my_dsp_asr_thread";\nsize_t stack_size = 0x4000;\nsize_t thread_priority = 1;\nint cmd_my_dsp_asr(int argc, char *argv[])\n{\n    size_t loop = 10;\n    TaskHandle_t handle = NULL;\n\n    printf("%s enter\\n", __func__);\n    if(xTaskCreate(my_dsp_asr_thread, thread_name, stack_size, (void *)loop, thread_priority, &handle) != pdPASS) {\n        printf("xTaskCreate %s failed!\\n", thread_name);\n    }\n    printf("%s exit\\n", __func__);\n\n    return 0;\n}\nFINSH_FUNCTION_EXPORT_CMD(cmd_my_dsp_asr, my_dsp_asr, my dsp asr);\n'})}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"./build.sh menuconfig"}),"\uff0c\u9009\u62e9\u4ee5\u4e0b\u914d\u7f6e\uff1a"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"CONFIG_COMPONENTS_MY_DSP_ASR\n"})}),"\n",(0,d.jsxs)(e.p,{children:["\uff08\u4f1a\u6839\u636e ",(0,d.jsx)(e.code,{children:"Kconfig"})," \u7684 ",(0,d.jsx)(e.code,{children:"select"})," \u5b57\u6bb5\u81ea\u52a8\u9009\u4e0a\u4f9d\u8d56\u7684\u7ec4\u4ef6\uff09"]}),"\n",(0,d.jsx)(e.p,{children:"\u68c0\u67e5\u662f\u5426\u7f16\u8bd1\u8fdb\u56fa\u4ef6\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"grep -r cmd_my_dsp_asr ./out/ --include=*.bin\n"})}),"\n",(0,d.jsx)(e.p,{children:"\u53ef\u4ee5\u770b\u5230\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"lichee/dsp$ grep -r cmd_my_dsp_asr ./out/ --include=*.bin\nBinary file ./out/r128s3/evb1/r128s2_dsp0_evb1.bin matches\nBinary file ./out/r128s3/evb1/r128s2_dsp0_evb1_raw.bin matches\nBinary file ./out/r128s3/evb1/r128s2_dsp0_evb1_xcc.bin matches\n"})}),"\n",(0,d.jsx)(e.p,{children:"\u70e7\u5f55\u56fa\u4ef6\u5373\u53ef\u5728\u4e32\u53e3\u7ec8\u7aef\u8f93\u5165\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"rpccli dsp my_dsp_asr\n"})}),"\n",(0,d.jsx)(e.p,{children:"\u540e\u671f\u53ef\u4ee5\u6dfb\u52a0\u5f00\u673a\u81ea\u542f\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-diff",children:"diff --git a/arch/sun20iw2/init-sun20iw2.c b/arch/sun20iw2/init-sun20iw2.c\nindex cfb2d45d..9b5c2a5d 100644\n--- a/arch/sun20iw2/init-sun20iw2.c\n+++ b/arch/sun20iw2/init-sun20iw2.c\n@@ -160,5 +160,10 @@ void app_init(void)\n        rpdata_ctrl_init();\n #endif\n\n+#ifdef CONFIG_COMPONENTS_MY_DSP_ASR\n+       int cmd_my_dsp_asr(int argc, char *argv[]);\n+       cmd_my_dsp_asr(0, NULL);\n+#endif\n+\n }\n"})}),"\n",(0,d.jsx)(e.h2,{id:"\u5728dsp\u4e0a\u5f55\u97f3",children:"\u5728DSP\u4e0a\u5f55\u97f3"}),"\n",(0,d.jsx)(e.p,{children:"\u5728Kconfig\u4e2d\u6dfb\u52a0\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-patch",children:'     bool "my dsp asr"\n     depends on ARCH_DSP\n+    select COMPONENTS_AW_AUDIO_SYSTEM\n     default n\n     help\n'})}),"\n",(0,d.jsx)(e.p,{children:"\u5728Makefile\u4e2d\u6dfb\u52a0"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"#audio system\nCFLAGS += -Icomponents/common/aw/AudioSystem/include/\n"})}),"\n",(0,d.jsx)(e.p,{children:"\u53c2\u8003\u4ee3\u7801\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-c",children:'#include "AudioRecord.h"\n#define MS_PER_FRAME    (10)\n#define RECORD_RATE     (16000)\n#define RECORD_NAME "capture"\nstatic const size_t record_time_ms = 10 * 1000;\nstatic const uint32_t rate = RECORD_RATE;\nstatic const uint8_t channels = 3;\nstatic const uint8_t bitwidth = 16;\nstatic int16_t record_buffer[RECORD_RATE * MS_PER_FRAME * 3 / 1000];\nstatic void my_record_thread(void *arg)\n{\n    tAudioRecord *pAudioRecord = NULL;\n    int ret;\n    size_t time_ms = 0;\n\n    printf("%s enter\\n", __func__);\n    pAudioRecord = AudioRecordCreate(RECORD_NAME);\n    if (!pAudioRecord) {\n        printf("%s:%u error!\\n", __func__, __LINE__);\n        // TODO\n    }\n\n    ret = AudioRecordSetup(pAudioRecord, rate, channels, bitwidth);\n    if (ret) {\n        printf("%s:%u error!\\n", __func__, __LINE__);\n        // TODO\n    }\n\n    while (time_ms < record_time_ms) {\n        ret = AudioRecordRead(pAudioRecord, record_buffer, sizeof(record_buffer));\n        if (ret < 0) {\n            printf("%s:%u error!\\n", __func__, __LINE__);\n            // TODO\n        }\n        time_ms += MS_PER_FRAME;\n        printf("%ums: read %d\\n", time_ms, ret);\n    }\n\n    AudioRecordStop(pAudioRecord);\n    AudioRecordDestroy(pAudioRecord);\n    printf("%s exit\\n", __func__);\n\n    vTaskDelete(NULL);\n}\n'})}),"\n",(0,d.jsx)(e.h2,{id:"\u4f7f\u7528\u7b97\u6cd5\u52a0\u901f\u5e93",children:"\u4f7f\u7528\u7b97\u6cd5\u52a0\u901f\u5e93"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"\u672c\u8282\u53ea\u662f\u4ee3\u7801\u6f14\u793a\uff0c\u5bf9\u4e8e\u6709HIFI5\u6388\u6743\u7684\u5ba2\u6237\u53ef\u4ee5\u5411 Candence \u83b7\u53d6 NatureDSP_Signal \u548c xa_nnlib_api \u7684\u6e90\u7801\u5305\uff0c\u5176\u4e2d\u5305\u542bapi\u7684\u8bf4\u660e\u6587\u6863\uff1a"})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:(0,d.jsx)(e.code,{children:"libxa_nnlib/doc/HiFi5-NNLib-ProgrammersGuide-API.pdf"})}),"\n",(0,d.jsx)(e.li,{children:(0,d.jsx)(e.code,{children:"hifi5_library/doc/NatureDSP_Signal_Library_Reference_HiFi5.pdf"})}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"\u5728Kconfig\u4e2d\u6dfb\u52a0\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:'     bool "my dsp asr"\n     depends on ARCH_DSP\n     select COMPONENTS_AW_AUDIO_SYSTEM\n+    select COMPONENTS_XTENSA_HIFI5_NNLIB_LIBRARY\n+    select COMPONENTS_XTENSA_HIFI5_VFPU_LIBRARY\n     default n\n     help\n'})}),"\n",(0,d.jsx)(e.p,{children:"\u5728Makefile\u4e2d\u6dfb\u52a0"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"CFLAGS +=  -I components/thirdparty/xtensa/hifi5_nn_v170_library/include\nCFLAGS +=  -I components/thirdparty/xtensa/hifi5_vfpu_v200_library/include\n"})}),"\n",(0,d.jsxs)(e.p,{children:["\uff08\u94fe\u63a5\u52a0\u901f\u5e93\u7684\u52a8\u4f5c\u5df2\u7ecf\u5728 ",(0,d.jsx)(e.code,{children:"lichee/dsp/Makefile"})," \u4e2d\u6dfb\u52a0\uff0c\u65e0\u9700\u91cd\u590d\u6dfb\u52a0\uff09"]}),"\n",(0,d.jsx)(e.p,{children:"FFT \u53c2\u8003\u4ee3\u7801\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-c",children:'#include <math.h>\n#include "NatureDSP_Signal.h"\n#include "xa_nnlib_api.h"\n\n#ifndef PI\n#define PI             (3.141592653f)\n#endif\n\nstruct cplxf_t {\n    float r;\n    float i;\n};\n\nstatic inline void make_src_cplxf_from_record_buffer(struct cplxf_t *output, int16_t *input, int N, uint8_t chs, uint8_t ch_index)\n{\n    int i = 0;\n    for (i = 0; i < N; i++) {\n        output[i].r = input[i * chs + ch_index];\n        output[i].i = 0.0f;\n    }\n}\n\n// N*3/4 *twdstep\nstatic inline void make_twd_cplxf(struct cplxf_t *output, const int N, const int twdstep)\n{\n    int n, m;\n    for (n = 0; n < (twdstep * N) / 4; n++) {\n        for (m = 0; m < 3; m++) {\n            float phi = 2 * PI * (m + 1) * n / (twdstep * N);\n            output[n * 3 + m].r = cosf(phi);\n            output[n * 3 + m].i = sinf(phi);\n        }\n    }\n}\n\nint get_max(const struct cplxf_t *input_cplxf, int N)\n{\n    float max = 0.0f;\n    float index = 0;\n    int i = 0;\n    for (i = 0; i < N; i++) {\n        float cur = input_cplxf[i].r * input_cplxf[i].r + input_cplxf[i].i * input_cplxf[i].i;\n        if (cur > max) {\n            max = cur;\n            index = i;\n        }\n    }\n\n    return index;\n}\n\n#define FFT_SIZE    (1024)\nstatic struct cplxf_t g_tmp_cplxf[FFT_SIZE];\nstatic int record_data_handler(struct cplxf_t *output_cplxf, const struct cplxf_t *input_cplxf, const struct cplxf_t *twd_cplxf, int N)\n{\n    if (N != FFT_SIZE) {\n        printf("%s incorrect data length: %d\\n", __func__, N);\n        return -1;\n    }\n\n    memcpy(g_tmp_cplxf, input_cplxf, sizeof(g_tmp_cplxf));\n    fft_cplxf_ie(\n        (complex_float *)output_cplxf,\n        (complex_float *)g_tmp_cplxf,\n        (const complex_float *)twd_cplxf,\n        1,\n        FFT_SIZE);\n\n    return 0;\n}\n'})}),"\n",(0,d.jsx)(e.p,{children:"\u5728\u5f55\u97f3\u4ee3\u7801\u4e2d\u6dfb\u52a0\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-c",children:'     ret = AudioRecordSetup(pAudioRecord, rate, channels, bitwidth);\n     if (ret) {\n         printf("%s:%u error!\\n", __func__, __LINE__);\n         // TODO\n     }\n\n+    static struct cplxf_t g_input_cplxf[FFT_SIZE];\n+    static struct cplxf_t g_output_cplxf[FFT_SIZE];\n+    static struct cplxf_t g_twd_cplxf[FFT_SIZE];\n+    int N = rate * MS_PER_FRAME / 1000;\n+    int twdstep = 1;\n+    int max_index = -1;\n+    make_twd_cplxf(g_twd_cplxf, N, twdstep);\n\n     while (time_ms < record_time_ms) {\n         ret = AudioRecordRead(pAudioRecord, record_buffer, sizeof(record_buffer));\n         if (ret < 0) {\n             printf("%s:%u error!\\n", __func__, __LINE__);\n             // TODO\n         }\n         time_ms += MS_PER_FRAME;\n+        max_index = -1;\n+        make_src_cplxf_from_record_buffer(g_input_cplxf, record_buffer, N, channels, 0);\n+        if( !record_data_handler(g_output_cplxf, g_input_cplxf, g_twd_cplxf, N)) {\n+            max_index = get_max(g_output_cplxf, N);\n+        }\n         printf("%ums: read %d, max: %d\\n", time_ms, ret, max_index);\n     }\n'})}),"\n",(0,d.jsx)(e.h2,{id:"\u6838\u95f4\u901a\u8baf",children:"\u6838\u95f4\u901a\u8baf"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u5305\u542b\u5b9e\u9645\u4e1a\u52a1\u4ee3\u7801"})}),"\n",(0,d.jsx)(e.p,{children:"\u5728Kconfig\u4e2d\u6dfb\u52a0\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:'     bool "my dsp asr"\n     depends on ARCH_DSP\n     select COMPONENTS_AW_AUDIO_SYSTEM\n+    select COMPONENTS_RPDATA\n     select COMPONENTS_XTENSA_HIFI5_NNLIB_LIBRARY\n     select COMPONENTS_XTENSA_HIFI5_VFPU_LIBRARY\n     default n\n     help\n'})}),"\n",(0,d.jsx)(e.p,{children:"\u5728Makefile\u4e2d\u6dfb\u52a0"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"#rpdata\nCFLAGS += -Icomponents/common/aw/rpdata/include/\n"})}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.strong,{children:"\u7531\u4e8e\u6838\u95f4\u901a\u8baf\u9700\u8981RV\u6838\u914d\u5408\uff0c\u6545\u8fd8\u9700\u7f16\u5199RV\u7aef\u63a7\u5236\u53ca\u63a5\u6536\u6570\u636e\u7684\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u53c2\u7167\u7f16\u5199DSP\u7b97\u6cd5\u7ec4\u4ef6\u7684\u65b9\u6cd5\u7f16\u5199\uff1a"})," Kconfig\uff1a"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-kconfig",children:'menu "my rv asr"\n\nconfig COMPONENTS_MY_RV_ASR\n    bool "my RV asr"\n    depends on !ARCH_DSP\n    select COMPONENTS_RPDATA\n    default n\n    help\n        to do\n\nendmenu\n'})}),"\n",(0,d.jsxs)(e.p,{children:["(\u6ce8\u610f\u662f ",(0,d.jsx)(e.code,{children:"!ARCH_DSP"}),")"]}),"\n",(0,d.jsxs)(e.p,{children:["\u5176\u5b83\u4fee\u6539\u7c7b\u4f3c\u7b2c\u4e00\u8282\u5185\u5bb9\uff0c\u4e0d\u518d\u91cd\u590d\u8bf4\u660e\uff1b rv \u7aef menuconfig\u547d\u4ee4\u4e3a ",(0,d.jsx)(e.code,{children:"mrtos_menuconfig"}),' rv\u7aef\u6267\u884c\u4ee3\u7801\u4e0d\u9700\u8981"rpccli dsp"\uff1b']}),"\n",(0,d.jsx)(e.p,{children:"\u901a\u7528\u4ee3\u7801\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-c",children:'#include <rpdata.h>\n\nstruct my_rpd_t {\n    rpdata_t *rpd; // both\n    void *addr; // both\n    size_t buf_len; // send\n    void (*cb)(void *priv, void *data, unsigned int data_len); // recv\n    void *priv; // recv\n};\n\nstruct my_rpd_cfg_t {\n    int dir; // both\n    const char *type; // both\n    const char *name; // both\n    size_t buf_len; // send\n    void (*cb)(void *priv, void *data, unsigned int data_len); // recv\n    void *priv; // recv\n};\n\nstatic void rpd_ch_deinit(struct my_rpd_t *hdl)\n{\n    if (hdl->rpd) {\n        rpdata_t *rpd = hdl->rpd;\n        hdl->cb = NULL;\n        hdl->priv = NULL;\n        hdl->buf_len = 0;\n        hdl->addr = NULL;\n        hdl->rpd = NULL;\n        rpdata_destroy(rpd);\n    }\n}\n\nstatic int rpd_recv_ch_callback(rpdata_t *rpd, void *data, unsigned int data_len)\n{\n    struct my_rpd_t *hdl = (struct my_rpd_t *)rpdata_get_private_data(rpd);\n\n    if (hdl->cb)\n        hdl->cb(hdl->priv, data, data_len);\n\n    return 0;\n}\n\nstatic struct rpdata_cbs rpd_recv_cb = {\n    .recv_cb = rpd_recv_ch_callback,\n};\n\nstatic int rpd_recv_ch_init(struct my_rpd_t *hdl, struct my_rpd_cfg_t *cfg)\n{\n    printf("recv rpd dir:%d, type:%s, name:%s\\n", cfg->dir, cfg->type, cfg->name);\n\n    hdl->rpd = rpdata_connect(cfg->dir, cfg->type, cfg->name);\n    if (!hdl->rpd) {\n        printf("rpdata_connect failed!\\n");\n        return -1;\n    }\n\n    hdl->addr = rpdata_buffer_addr(hdl->rpd);\n    if (!hdl->addr) {\n        printf("rpdata_buffer_addr failed!\\n");\n        rpd_ch_deinit(hdl);\n        return -1;\n    }\n\n    hdl->cb = cfg->cb;\n    hdl->priv = cfg->priv;\n\n    rpdata_set_private_data(hdl->rpd, hdl);\n    rpdata_set_recv_cb(hdl->rpd, &rpd_recv_cb);\n    return 0;\n}\n\nstatic int rpd_send_ch_init(struct my_rpd_t *hdl, struct my_rpd_cfg_t *cfg)\n{\n    printf("send rpd dir:%d, type:%s, name:%s, buf_len:%u\\n", cfg->dir, cfg->type, cfg->name, cfg->buf_len);\n\n    hdl->rpd = rpdata_create(cfg->dir, cfg->type, cfg->name, cfg->buf_len);\n    if (!hdl->rpd) {\n        printf("rpdata_create failed!\\n");\n        goto err;\n    }\n\n    hdl->addr = rpdata_buffer_addr(hdl->rpd);\n    if (!hdl->addr) {\n        printf("rpdata_buffer_addr failed!\\n");\n        goto err;\n    }\n\n    hdl->buf_len = cfg->buf_len;\n\n    return 0;\nerr:\n    rpd_ch_deinit(hdl);\n    return -1;\n}\n\nstatic int rpd_send(struct my_rpd_t *hdl, void *data)\n{\n    memcpy(hdl->addr, data, hdl->buf_len);\n\n    rpdata_wait_connect(hdl->rpd);\n\n    return rpdata_send(hdl->rpd, 0, hdl->buf_len);\n}\n\n// RV to DSP \u63a7\u5236\u901a\u9053\n#define RPD_CTL_TYPE                ("RVtoDSPCtl")\n#define RPD_CTL_NAME                ("RVtoDSPCtlCh")\n#define RPD_CTL_SIZE                (4)\n\n// DSP to RV \u6570\u636e\u901a\u9053\n#define RPD_DATA_TYPE               ("DSPtoRVData")\n#define RPD_DATA_NAME               ("DSPtoRVDataCh")\n#define RPD_DATA_SIZE               (64)\n'})}),"\n",(0,d.jsx)(e.p,{children:"DSP\u7aef\u4ee3\u7801\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-c",children:'static int g_run = 0;\nstatic void my_rpd_dsp_recv_cb(void *priv, void *data, unsigned int data_len)\n{\n    printf("%s recv:%d\\n", __func__, data_len);\n\n    memcpy(&g_run, data, sizeof(g_run));\n}\n\nstatic void my_rpd_thread(void *arg)\n{\n    struct my_rpd_t send_ch;\n    struct my_rpd_cfg_t send_cfg = {\n        .dir = 2,\n        .type = RPD_DATA_TYPE,\n        .name = RPD_DATA_NAME,\n        .buf_len = RPD_DATA_SIZE,\n    };\n    struct my_rpd_t recv_ch;\n    struct my_rpd_cfg_t recv_cfg = {\n        .dir = 2,\n        .type = RPD_CTL_TYPE,\n        .name = RPD_CTL_NAME,\n        .cb = my_rpd_dsp_recv_cb,\n        .priv = NULL,\n    };\n    unsigned char data[RPD_DATA_SIZE];\n    int i = 0;\n    for (i = 0; i < RPD_DATA_SIZE; i++) {\n        data[i] = \'0\' + 1;\n    }\n\n    g_run  = 1;\n\n    printf("%s start\\n", __func__);\n\n    if (rpd_send_ch_init(&send_ch, &send_cfg)) {\n        printf("%s:%u error!\\n", __func__, __LINE__);\n        // TODO\n    }\n\n    if (rpd_recv_ch_init(&recv_ch, &recv_cfg)) {\n        printf("%s:%u error!\\n", __func__, __LINE__);\n        // TODO\n    }\n\n    while(g_run) {\n        rpd_send(&send_ch, data);\n        vTaskDelay(500 / portTICK_PERIOD_MS);\n    }\n\n    rpd_ch_deinit(&recv_ch);\n    rpd_ch_deinit(&send_ch);\n    printf("%s exit\\n", __func__);\n\n    vTaskDelete(NULL);\n}\n'})}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"RV\u7aef\u4ee3\u7801\uff1a"})}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-c",children:'static int g_run = 0;\n\nstatic void my_rpd_rv_recv_cb(void *priv, void *data, unsigned int data_len)\n{\n    printf("%s recv:%d\\n", __func__, data_len);\n}\n\nstatic void my_rpd_thread(void *arg)\n{\n    struct my_rpd_t send_ch;\n    struct my_rpd_cfg_t send_cfg = {\n        .dir = 3,\n        .type = RPD_CTL_TYPE,\n        .name = RPD_CTL_NAME,\n        .buf_len = RPD_CTL_SIZE,\n    };\n    struct my_rpd_t recv_ch;\n    struct my_rpd_cfg_t recv_cfg = {\n        .dir = 3,\n        .type = RPD_DATA_TYPE,\n        .name = RPD_DATA_NAME,\n        .cb = my_rpd_rv_recv_cb,\n        .priv = NULL,\n    };\n    g_run = 1;\n\n    printf("%s start\\n", __func__);\n    if (rpd_send_ch_init(&send_ch, &send_cfg)) {\n        printf("%s:%u error!\\n", __func__, __LINE__);\n        // TODO\n    }\n\n    if (rpd_recv_ch_init(&recv_ch, &recv_cfg)) {\n        printf("%s:%u error!\\n", __func__, __LINE__);\n        // TODO\n    }\n\n    while(1) {\n        int run = g_run;\n        rpd_send(&send_ch, &run);\n        if (!run)\n            break;\n        vTaskDelay(500 / portTICK_PERIOD_MS);\n    }\n\n    rpd_ch_deinit(&recv_ch);\n    rpd_ch_deinit(&send_ch);\n    printf("%s exit\\n", __func__);\n\n    vTaskDelete(NULL);\n}\n'})}),"\n",(0,d.jsx)(e.p,{children:"RV \u7aef\u548c DSP \u7aef\u5404\u81ea\u521b\u5efa\u5904\u7406\u7ebf\u7a0b\uff1b"}),"\n",(0,d.jsx)(e.p,{children:"DSP \u5b9a\u65f6\u5c06\u6570\u636e\u53d1\u7ed9 RV\uff0cRV \u5b9a\u65f6\u5c06\u8fd0\u884c\u6807\u5fd7\u53d1\u7ed9 DSP\uff1b"}),"\n",(0,d.jsx)(e.p,{children:"RV \u7aef\u4fee\u6539 g_run \u7684\u503c\u4e3a 0\uff0cRV \u5c06 g_run \u7684\u503c\u53d1\u9001\u7ed9 DSP \u540e\u9000\u51fa\uff0cDSP \u6536\u5230 g_run \u4e5f\u5c06\u9000\u51fa\uff1b"}),"\n",(0,d.jsx)(e.h2,{id:"dump-\u6570\u636e\u5230pc",children:"DUMP \u6570\u636e\u5230PC"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"DSP \u7aef\u6ca1\u6709\u6587\u4ef6\u7cfb\u7edf\uff0c\u6240\u4ee5\u6570\u636e\u9700\u8981\u5148\u901a\u8fc7\u6838\u95f4\u901a\u8baf\u53d1\u9001\u7ed9 RV \u6838\uff0c\u518d\u7531 RV \u6838\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u4fdd\u5b58\u6216\u53d1\u9001\uff1b"})}),"\n",(0,d.jsxs)(e.p,{children:["\u5728 ",(0,d.jsx)(e.strong,{children:"RV\u6838\u4e0a"})," \u53ef\u4ee5\u4f7f\u7528 ",(0,d.jsx)(e.code,{children:"adb forward"})," \u5b9e\u65f6\u5c06\u6570\u636e\u4f20\u8f93\u5230 ",(0,d.jsx)(e.code,{children:"PC"}),"\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u4fdd\u5b58\u6570\u636e\u5230 ",(0,d.jsx)(e.code,{children:"flash"}),"\uff0c\u7136\u540e\u4f7f\u7528 ",(0,d.jsx)(e.code,{children:"adb pull"})," \u5230 PC\uff1b"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.strong,{children:"\u672c\u8282\u7684\u4ee3\u7801\u90fd\u662f\u8dd1\u5728RV\u6838\u4e0a\u7684"}),"\uff1b"]}),"\n",(0,d.jsx)(e.p,{children:"\u53ef\u4ee5\u4f7f\u7528\u73b0\u6709\u5c01\u88c5\u63a5\u53e3\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-c",children:"// file_path\u548cport\u53ea\u9700\u6307\u5b9a\u4e00\u4e2a\u5373\u53ef\uff0c\u53e6\u4e00\u4e2a\u586bNULL\u62160\n// \u6307\u5b9afile_path\u8868\u793a\u4fdd\u5b58\u6570\u636e\u5230flash\uff0c\u6307\u5b9aport\u8868\u793a\u63d0\u4f9badb\u4f20\u8f93\u6570\u636e\u5230PC\nvoid *data_save_create(const char *name, const char *file_path, int port);\nvoid data_save_destroy(void *_hdl);\nint data_save_request(void *_hdl, void *data, int size, int timeout_ms);\n// \u9700\u8981\u4fdd\u5b58\u540e\u7eed\u6570\u636e\u5230\u53e6\u4e00\u6587\u4ef6\u65f6\u8c03\u7528\uff0c\u7528\u4e8e\u5206\u5272\u97f3\u9891\u6570\u636e\nint data_save_flush(void *_hdl, int timeout_ms);\n"})}),"\n",(0,d.jsxs)(e.p,{children:["\u53ef\u4ee5\u590d\u5236 ",(0,d.jsx)(e.code,{children:"lichee/rtos-components/aw/asr_demo/inc/data_save.h"})," \u548c ",(0,d.jsx)(e.code,{children:"lichee/rtos-components/aw/asr_demo/src/data_save.c"})," \u5230\u81ea\u5df1\u7684\u7ec4\u4ef6\u4e2d\u4f7f\u7528\uff0c\u6216\u8005\u9009\u4e0a ",(0,d.jsx)(e.code,{children:"CONFIG_COMPONENTS_ASR_DEMO"})," \u65f6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff1b"]}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsxs)(e.li,{children:["\u901a\u8fc7\u6807\u51c6\u6587\u4ef6\u64cd\u4f5c\u63a5\u53e3\u4fdd\u5b58\u5230",(0,d.jsx)(e.code,{children:"flash"}),"\u6216",(0,d.jsx)(e.code,{children:"data_save"}),"\u7ec4\u4ef6\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\u4fdd\u5b58\u5230 ",(0,d.jsx)(e.code,{children:"flash"})]}),"\n",(0,d.jsxs)(e.li,{children:["\u6309\u4ee5\u4e0b\u6b65\u9aa4\u901a\u8fc7 ",(0,d.jsx)(e.code,{children:"adb forward"})," \u4f20\u8f93\u6570\u636e\u5230 ",(0,d.jsx)(e.code,{children:"PC"}),"\uff1a"]}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"\u2460 \u8bbe\u5907\u7aef\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"reboot(\u91cd\u542f\u8bbe\u5907)\n\uff08\u7b49\u5f85\u8bbe\u5907\u91cd\u542f\u5b8c\u6210\uff09\nadb shell af -p [\u4ee3\u7801\u4e2d\u586b\u5199\u7684port] -r\n"})}),"\n",(0,d.jsx)(e.p,{children:"\u2461 PC\u7aef\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"adb forward tcp:11112 tcp:[\u4ee3\u7801\u4e2d\u586b\u5199\u7684port]\nadb_record.py\uff08\u6216adb_record_3.py\uff0c2\u4e2a\u6587\u4ef6\u90fd\u5728lichee/rtos-components/aw/asr_demo/tools/\uff0c\u63a5\u6536\u5230\u7684\u6570\u636e\u4f1a\u4fdd\u5b58\u5728\u811a\u672c\u6267\u884c\u76ee\u5f55\u4e0b\uff09\n"})}),"\n",(0,d.jsxs)(e.p,{children:["\u2462 \u8bbe\u5907\u7aef\u5f00\u59cb\u8c03\u7528",(0,d.jsx)(e.code,{children:"data_save"}),"\u63a5\u53e3\u521b\u5efa\u901a\u9053\u5e76\u53d1\u9001\u6570\u636e\uff08\u53ef\u4ee5\u53c2\u7167\u7b2c\u4e00\u8282\u6dfb\u52a0start\u548cstop\u4f20\u8f93\u7684\u547d\u4ee4\uff09"]})]})}function p(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,d.jsx)(e,{...n,children:(0,d.jsx)(l,{...n})}):l(n)}},1151:(n,e,r)=>{r.d(e,{Z:()=>_,a:()=>c});var d=r(7294);const t={},i=d.createContext(t);function c(n){const e=d.useContext(i);return d.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function _(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:c(n.components),d.createElement(i.Provider,{value:e},n.children)}}}]);