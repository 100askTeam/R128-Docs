"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[613],{8002:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});var l=i(5893),r=i(1151);const t={},c="PWM",s={id:"developer-guide/part2/chapter20",title:"PWM",description:"\u6a21\u5757\u4ecb\u7ecd",source:"@site/docs/developer-guide/part2/chapter20.md",sourceDirName:"developer-guide/part2",slug:"/developer-guide/part2/chapter20",permalink:"/developer-guide/part2/chapter20",draft:!1,unlisted:!1,editUrl:"https://github.com/100askTeam/R128-Docs/tree/main/docs/developer-guide/part2/chapter20.md",tags:[],version:"current",frontMatter:{},sidebar:"classpartoneSidebar",previous:{title:"CSI",permalink:"/developer-guide/part2/chapter2"},next:{title:"RTC",permalink:"/developer-guide/part2/chapter21"}},a={},d=[{value:"\u6a21\u5757\u4ecb\u7ecd",id:"\u6a21\u5757\u4ecb\u7ecd",level:2},{value:"\u6a21\u5757\u914d\u7f6e",id:"\u6a21\u5757\u914d\u7f6e",level:2},{value:"\u6e90\u7801\u7ed3\u6784",id:"\u6e90\u7801\u7ed3\u6784",level:2},{value:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",id:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",level:2},{value:"\u8fd4\u56de\u503c\u679a\u4e3e",id:"\u8fd4\u56de\u503c\u679a\u4e3e",level:3},{value:"PWM \u521d\u59cb\u5316\u63a5\u53e3",id:"pwm-\u521d\u59cb\u5316\u63a5\u53e3",level:3},{value:"PWM \u901a\u9053\u914d\u7f6e\u63a5\u53e3",id:"pwm-\u901a\u9053\u914d\u7f6e\u63a5\u53e3",level:3},{value:"PWM \u901a\u9053\u4f7f\u80fd\u63a5\u53e3",id:"pwm-\u901a\u9053\u4f7f\u80fd\u63a5\u53e3",level:3},{value:"PWM \u53bb\u521d\u59cb\u5316\u63a5\u53e3",id:"pwm-\u53bb\u521d\u59cb\u5316\u63a5\u53e3",level:3},{value:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",id:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",level:2}];function p(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h1,{id:"pwm",children:"PWM"}),"\n",(0,l.jsx)(e.h2,{id:"\u6a21\u5757\u4ecb\u7ecd",children:"\u6a21\u5757\u4ecb\u7ecd"}),"\n",(0,l.jsx)(e.p,{children:"\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\uff08PWM\uff09\u662f\u4e00\u79cd\u5bf9\u6a21\u62df\u4fe1\u53f7\u7535\u5e73\u8fdb\u884c\u6570\u5b57\u7f16\u7801\u7684\u65b9\u6cd5\u3002\u901a\u8fc7\u9ad8\u5206\u8fa8\u7387\u8ba1\u6570\u5668\u7684\u4f7f\u7528\uff0c\u65b9\u6ce2\u7684\u5360\u7a7a\u6bd4\u88ab\u8c03\u5236\u7528\u6765\u5bf9\u4e00\u4e2a\u5177\u4f53\u6a21\u62df\u4fe1\u53f7\u7684\u7535\u5e73\u8fdb\u884c\u7f16\u7801\u3002PWM \u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u652f\u6301\u8109\u51b2\uff08\u8109\u51b2\u4e2a\u6570\u53ef\u914d\uff09\u3001\u5468\u671f\u548c\u4e92\u8865\u5bf9\u8f93\u51fa\uff1b"}),"\n",(0,l.jsx)(e.li,{children:"\u652f\u6301\u6355\u6349\u8f93\u5165\uff1b"}),"\n",(0,l.jsx)(e.li,{children:"\u5e26\u53ef\u7f16\u7a0b\u6b7b\u533a\u53d1\u751f\u5668\uff0c\u6b7b\u533a\u65f6\u95f4\u53ef\u63a7\uff1b"}),"\n",(0,l.jsx)(e.li,{children:"0-24M/100M \u8f93\u51fa\u9891\u7387\u8303\u56f4\u30010%-100% \u5360\u7a7a\u6bd4\u53ef\u8c03\u3001\u6700\u5c0f\u5206\u8fa8\u7387 1/65536\uff1b"}),"\n",(0,l.jsx)(e.li,{children:"\u652f\u6301 PWM \u8f93\u51fa\u548c\u6355\u6349\u8f93\u5165\u4ea7\u751f\u4e2d\u65ad\uff1b"}),"\n",(0,l.jsx)(e.li,{children:"\u652f\u6301 PWM \u7ec4\u6a21\u5f0f\uff0c\u540c\u7ec4\u5185\u5404\u4e2a\u901a\u9053\u8d77\u59cb\u76f8\u4f4d\u53ef\u914d\u7f6e\u3002"}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"\u6a21\u5757\u914d\u7f6e",children:"\u6a21\u5757\u914d\u7f6e"}),"\n",(0,l.jsx)(e.p,{children:"\u914d\u7f6e\u8def\u5f84\u5982\u4e0b:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"Kernel Setup ---\x3e\n    Drivers Setup ---\x3e\n        SoC HAL Drivers ---\x3e\n            pwm devices ---\x3e\n                [*] enable pwm driver\n"})}),"\n",(0,l.jsx)(e.h2,{id:"\u6e90\u7801\u7ed3\u6784",children:"\u6e90\u7801\u7ed3\u6784"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"rtos-hal/\n|--hal/source/pwm/hal_pwm.c    // hal\u5c42\u63a5\u53e3\u4ee3\u7801\n|--include/hal/sunxi_hal_pwm.h // \u5934\u6587\u4ef6\n"})}),"\n",(0,l.jsx)(e.h2,{id:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",children:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e"}),"\n",(0,l.jsx)(e.p,{children:"\u5934\u6587\u4ef6"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"#include <sunxi_hal_pwm.h>\n"})}),"\n",(0,l.jsx)(e.h3,{id:"\u8fd4\u56de\u503c\u679a\u4e3e",children:"\u8fd4\u56de\u503c\u679a\u4e3e"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"typedef enum {\n    HAL_PWM_STATUS_ERROR_PARAMETER = -3,\n    HAL_PWM_STATUS_ERROR_CHANNEL = -2,\n    HAL_PWM_STATUS_ERROR = -1,\n    HAL_PWM_STATUS_OK = 0\n} hal_pwm_status_t;\n"})}),"\n",(0,l.jsx)(e.h3,{id:"pwm-\u521d\u59cb\u5316\u63a5\u53e3",children:"PWM \u521d\u59cb\u5316\u63a5\u53e3"}),"\n",(0,l.jsx)(e.p,{children:"PWM \u6a21\u5757\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u5b8c\u6210 clk \u521d\u59cb\u5316"}),"\n",(0,l.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"pwm_status_t hal_pwm_init(void)\n"})}),"\n",(0,l.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,l.jsx)(e.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"pwm-\u901a\u9053\u914d\u7f6e\u63a5\u53e3",children:"PWM \u901a\u9053\u914d\u7f6e\u63a5\u53e3"}),"\n",(0,l.jsx)(e.p,{children:"\u914d\u7f6e PWM \u6a21\u5757\u67d0\u4e2a\u901a\u9053\uff0c\u5305\u62ec\u5468\u671f\u3001\u5360\u7a7a\u6bd4\u548c\u6781\u6027"}),"\n",(0,l.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"pwm_status_t hal_pwm_control(int channel, struct pwm_config *config_pwm)\n"})}),"\n",(0,l.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"channel \u4ee3\u8868\u901a\u9053\u53f7"}),"\n",(0,l.jsx)(e.li,{children:"config_pwm \u4ee3\u8868\u8be5\u901a\u9053\u7684\u914d\u7f6e\u53c2\u6570"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,l.jsx)(e.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"pwm-\u901a\u9053\u4f7f\u80fd\u63a5\u53e3",children:"PWM \u901a\u9053\u4f7f\u80fd\u63a5\u53e3"}),"\n",(0,l.jsx)(e.p,{children:"\u4f7f\u80fd PWM \u6a21\u5757\u67d0\u4e2a\u901a\u9053"}),"\n",(0,l.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"void hal_pwm_enable_controller(uint32_t channel_in)\n"})}),"\n",(0,l.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"channel_in \u4ee3\u8868\u901a\u9053\u53f7"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"pwm-\u53bb\u521d\u59cb\u5316\u63a5\u53e3",children:"PWM \u53bb\u521d\u59cb\u5316\u63a5\u53e3"}),"\n",(0,l.jsx)(e.p,{children:"PWM \u6a21\u5757\u53bb\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u5173\u95ed clk"}),"\n",(0,l.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"pwm_status_t hal_pwm_deinit(void)\n"})}),"\n",(0,l.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,l.jsx)(e.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",children:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h>\n#include <string.h>\n#include <unistd.h>\n\n#include <hal_log.h>\n#include <hal_cmd.h>\n#include <sunxi_hal_pwm.h>\n\n#if defined(CONFIG_ARCH_DSP)\n#include <delay.h>\n#define sleep(sec) msleep(sec * 1000)\n#endif\n\n#ifndef printfFromISR\n#define printfFromISR printf\n#endif\n\nstatic int cmd_test_pwm(int argc, char **argv)\n{\n\n    struct pwm_config *config;\n    uint8_t port;\n    //uint8_t ns;\n    int period, duty;\n\n    if (argc < 4)\n    {\n        hal_log_info("Usage: pwm port | duty | period\\n");\n        return -1;\n    }\n\n    hal_log_info("Run pwm hal layer test case\\n");\n\n    port = strtol(argv[1], NULL, 0);\n    hal_log_info("port = %d", port);\n    duty = strtoul(argv[2], NULL, 0);\n    period = strtoul(argv[3], NULL, 0);\n\n    config = (struct pwm_config *)malloc(sizeof(struct pwm_config));\n\n    config->duty_ns   = duty;\n    config->period_ns = period;\n    config->polarity  = PWM_POLARITY_NORMAL;\n    hal_log_info("duty_ns = %d \\n", config->duty_ns);\n    hal_log_info("period_ns = %d \\n", config->period_ns);\n    hal_log_info("polarity = %d \\n", config->polarity);\n\n    hal_pwm_init();\n\n    hal_pwm_control(port, config);\n\n    hal_log_info("control pwm test finish\\n");\n\n    return 0;\n}\n\nFINSH_FUNCTION_EXPORT_CMD(cmd_test_pwm, hal_pwm, pwm hal APIs tests)\n\nstatic int cmd_release_pwm_channel(int argc, char **argv)\n{\n\n    struct pwm_config *config;\n    uint8_t port;\n    uint8_t ns;\n    ulong period, duty;\n\n    if (argc < 2)\n    {\n        hal_log_info("Usage: pwm port\\n");\n        return -1;\n    }\n\n    hal_log_info("Run close pwm channel test case\\n");\n\n    port = strtol(argv[1], NULL, 0);\n    hal_log_info("port = %d", port);\n\n    hal_pwm_release(port);\n\n    hal_log_info("release pwm channel finish\\n");\n\n    return 0;\n}\n\nFINSH_FUNCTION_EXPORT_CMD(cmd_release_pwm_channel, hal_pwm_close, release pwm channel hal APIs tests)\n\nstatic void pwm_cap_callback(void* param)\n{\n    hal_pwm_cap_info *info = (hal_pwm_cap_info *)param;\n\n    printfFromISR("pwm%d capture callback, cnt is %d, period is %d, duty is %d\\n", info->channel, info->cnt, info->period, info->duty);\n}\n\nhal_pwm_status_t pwm_capture_init(uint32_t channel)\n{\n\n    hal_pwm_cap_enable(channel, pwm_cap_callback);\n\n    return HAL_PWM_STATUS_OK;\n}\n\nhal_pwm_status_t pwm_capture_deinit(uint32_t channel)\n{\n    hal_pwm_cap_disable(channel);\n\n    return HAL_PWM_STATUS_OK;\n}\n\nvoid cmd_pwm_capture_help(void)\n{\n    printf("pwm capture test, stop capture after 10s\\n");\n    printf("usage: pwm_capture_test<channel>\\n");\n    printf("\\t<channel>: 0 ~ 15\\n");\n    printf("eg: pwm_capture_test 0, pwm0 capture function\\n");\n}\n\nint cmd_pwm_capture(int argc, char *argv[])\n{\n    int count = 0;\n\n    if (argc != 2 || atoi(argv[1]) > 15) {\n        cmd_pwm_capture_help();\n        return -1;\n    }\n\n    /* capture setting */\n    pwm_capture_init(atoi(argv[1]));\n\n    for(count = 0; count < 10; count++) {\n        sleep(1);\n    }\n\n    /* disable */\n    pwm_capture_deinit(atoi(argv[1]));\n\n    printf("[%s]: pwm stop capture ssd\\n", __func__);\n\n    return 0;\n}\n\nFINSH_FUNCTION_EXPORT_CMD(cmd_pwm_capture, pwm_capture_test, pwm capture test)\n``\n'})})]})}function h(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(p,{...n})}):p(n)}},1151:(n,e,i)=>{i.d(e,{Z:()=>s,a:()=>c});var l=i(7294);const r={},t=l.createContext(r);function c(n){const e=l.useContext(t);return l.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),l.createElement(t.Provider,{value:e},n.children)}}}]);