"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5512],{138:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var l=r(5893),t=r(1151);const i={},s="PMU",d={id:"developer-guide/part2/chapter11",title:"PMU",description:"PMU - \u7535\u6e90\u7ba1\u7406\u5355\u5143\uff0c\u8d1f\u8d23\u7cfb\u7edf\u5404\u6a21\u5757\u4f9b\u7535\u53ca\u7535\u6c60\u5145\u653e\u7535\u7ba1\u7406\u3002",source:"@site/docs/developer-guide/part2/chapter11.md",sourceDirName:"developer-guide/part2",slug:"/developer-guide/part2/chapter11",permalink:"/developer-guide/part2/chapter11",draft:!1,unlisted:!1,editUrl:"https://github.com/100askTeam/R128-Docs/tree/main/docs/developer-guide/part2/chapter11.md",tags:[],version:"current",frontMatter:{},sidebar:"classpartoneSidebar",previous:{title:"IR",permalink:"/developer-guide/part2/chapter10"},next:{title:"LEDC",permalink:"/developer-guide/part2/chapter12"}},c={},a=[{value:"\u6a21\u5757\u914d\u7f6e",id:"\u6a21\u5757\u914d\u7f6e",level:2},{value:"\u6e90\u7801\u7ed3\u6784\u4ecb\u7ecd",id:"\u6e90\u7801\u7ed3\u6784\u4ecb\u7ecd",level:2},{value:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",id:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",level:2},{value:"regulator \u76f8\u5173\u7ed3\u6784\u4f53",id:"regulator-\u76f8\u5173\u7ed3\u6784\u4f53",level:3},{value:"power \u76f8\u5173\u7ed3\u6784\u4f53",id:"power-\u76f8\u5173\u7ed3\u6784\u4f53",level:3},{value:"regulator \u83b7\u53d6\u7535\u8def\u63a5\u53e3",id:"regulator-\u83b7\u53d6\u7535\u8def\u63a5\u53e3",level:3},{value:"regulator \u7535\u8def\u4f7f\u80fd\u63a5\u53e3",id:"regulator-\u7535\u8def\u4f7f\u80fd\u63a5\u53e3",level:3},{value:"regulator \u83b7\u53d6\u7535\u538b\u63a5\u53e3",id:"regulator-\u83b7\u53d6\u7535\u538b\u63a5\u53e3",level:3},{value:"regulator \u8c03\u8282\u7535\u538b\u63a5\u53e3",id:"regulator-\u8c03\u8282\u7535\u538b\u63a5\u53e3",level:3},{value:"power \u521d\u59cb\u5316",id:"power-\u521d\u59cb\u5316",level:3},{value:"\u83b7\u53d6\u5f53\u524d power \u9a71\u52a8",id:"\u83b7\u53d6\u5f53\u524d-power-\u9a71\u52a8",level:3},{value:"\u83b7\u53d6\u7535\u6c60\u7535\u91cf\u4fe1\u606f",id:"\u83b7\u53d6\u7535\u6c60\u7535\u91cf\u4fe1\u606f",level:3},{value:"\u83b7\u53d6\u5e93\u4ed1\u8ba1\u4fe1\u606f",id:"\u83b7\u53d6\u5e93\u4ed1\u8ba1\u4fe1\u606f",level:3},{value:"\u67e5\u770b\u7535\u6c60\u5f53\u524d\u72b6\u6001",id:"\u67e5\u770b\u7535\u6c60\u5f53\u524d\u72b6\u6001",level:3},{value:"\u67e5\u770b\u7535\u6c60\u662f\u5426\u8fde\u63a5",id:"\u67e5\u770b\u7535\u6c60\u662f\u5426\u8fde\u63a5",level:3},{value:"\u83b7\u53d6\u7535\u6c60\u5145\u7535\u72b6\u6001",id:"\u83b7\u53d6\u7535\u6c60\u5145\u7535\u72b6\u6001",level:3},{value:"\u83b7\u53d6\u7535\u6c60\u5f53\u524d\u7684\u5065\u5eb7\u72b6\u6001",id:"\u83b7\u53d6\u7535\u6c60\u5f53\u524d\u7684\u5065\u5eb7\u72b6\u6001",level:3},{value:"\u83b7\u53d6\u7535\u6c60\u7535\u538b",id:"\u83b7\u53d6\u7535\u6c60\u7535\u538b",level:3},{value:"\u83b7\u53d6\u5145\u7535\u7535\u6d41",id:"\u83b7\u53d6\u5145\u7535\u7535\u6d41",level:3},{value:"\u83b7\u53d6\u653e\u7535\u7535\u6d41",id:"\u83b7\u53d6\u653e\u7535\u7535\u6d41",level:3},{value:"\u83b7\u53d6 AXP IC \u6e29\u5ea6",id:"\u83b7\u53d6-axp-ic-\u6e29\u5ea6",level:3},{value:"\u83b7\u53d6\u7535\u6c60\u6e29\u5ea6",id:"\u83b7\u53d6\u7535\u6c60\u6e29\u5ea6",level:3},{value:"\u8bbe\u7f6e\u5145\u7535\u7535\u6d41",id:"\u8bbe\u7f6e\u5145\u7535\u7535\u6d41",level:3},{value:"\u8bbe\u7f6e\u5145\u7535\u622a\u6b62\u7535\u538b",id:"\u8bbe\u7f6e\u5145\u7535\u622a\u6b62\u7535\u538b",level:3},{value:"\u8bbe\u7f6e\u7535\u6c60\u5f00\u5173",id:"\u8bbe\u7f6e\u7535\u6c60\u5f00\u5173",level:3},{value:"\u83b7\u53d6\u5f53\u524dUSB \u72b6\u6001",id:"\u83b7\u53d6\u5f53\u524dusb-\u72b6\u6001",level:3},{value:"\u83b7\u53d6USB \u53e3\u8f93\u5165\u9650\u6d41\u503c",id:"\u83b7\u53d6usb-\u53e3\u8f93\u5165\u9650\u6d41\u503c",level:3},{value:"\u83b7\u53d6USB \u53e3\u8f93\u5165\u9650\u538b\u503c",id:"\u83b7\u53d6usb-\u53e3\u8f93\u5165\u9650\u538b\u503c",level:3},{value:"\u8bbe\u7f6eUSB \u53e3\u8f93\u5165\u9650\u6d41\u503c",id:"\u8bbe\u7f6eusb-\u53e3\u8f93\u5165\u9650\u6d41\u503c",level:3},{value:"\u8bbe\u7f6eUSB \u53e3\u8f93\u5165\u9650\u538b\u503c",id:"\u8bbe\u7f6eusb-\u53e3\u8f93\u5165\u9650\u538b\u503c",level:3},{value:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",id:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",level:2},{value:"regulator \u6a21\u5757\u4f7f\u7528\u8303\u4f8b",id:"regulator-\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",level:3},{value:"power \u6a21\u5757\u4f7f\u7528\u8303\u4f8b",id:"power-\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",level:3}];function _(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"pmu",children:"PMU"}),"\n",(0,l.jsx)(n.p,{children:"PMU - \u7535\u6e90\u7ba1\u7406\u5355\u5143\uff0c\u8d1f\u8d23\u7cfb\u7edf\u5404\u6a21\u5757\u4f9b\u7535\u53ca\u7535\u6c60\u5145\u653e\u7535\u7ba1\u7406\u3002"}),"\n",(0,l.jsx)(n.h2,{id:"\u6a21\u5757\u914d\u7f6e",children:"\u6a21\u5757\u914d\u7f6e"}),"\n",(0,l.jsx)(n.p,{children:"regulator \u76f8\u5173\u914d\u7f6e\u9879\uff1a"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"Drivers Options ---\x3e\n    soc related device drivers ---\x3e\n        REGULATOR Devices ---\x3e\n            [*] enable regulator driver\n            [*] regulator test\n"})}),"\n",(0,l.jsx)(n.p,{children:"power \u76f8\u5173\u914d\u7f6e\u9879\uff1a"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"Drivers Options ---\x3e\n    soc related device drivers ---\x3e\n        POWER Devices ---\x3e\n            [*] enable power driver\n                [*] use axp2585\n                [*] regulator test\n"})}),"\n",(0,l.jsx)(n.h2,{id:"\u6e90\u7801\u7ed3\u6784\u4ecb\u7ecd",children:"\u6e90\u7801\u7ed3\u6784\u4ecb\u7ecd"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"lichee/rtos-hal/hal/source/power/\n\u251c\u2500\u2500 axp2585.c\n\u251c\u2500\u2500 axp2585.h\n\u251c\u2500\u2500 axp.c\n\u251c\u2500\u2500 axp_twi.c\n\u251c\u2500\u2500 ffs.h\n\u251c\u2500\u2500 Kconfig\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 sun20iw2p1\n\u2502 \u2514\u2500\u2500 core.c\n\u2514\u2500\u2500 type.h\n\nlichee/rtos-hal/hal/source/regulator/\n\u251c\u2500\u2500 Kconfig\n\u251c\u2500\u2500 Makefile\n\u2514\u2500\u2500 sun20iw2p1\n  \u2514\u2500\u2500 core.c\n"})}),"\n",(0,l.jsx)(n.h2,{id:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",children:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e"}),"\n",(0,l.jsx)(n.p,{children:"\u5934\u6587\u4ef6\uff1a"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"#include <sunxi_hal_power.h>\n#include <sunxi_hal_regulator.h>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"regulator-\u76f8\u5173\u7ed3\u6784\u4f53",children:"regulator \u76f8\u5173\u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"struct regulator_ops{\n    int (*enable) (struct regulator_dev *);\n    int (*disable) (struct regulator_dev *);\n    int (*set_voltage) (struct regulator_dev *, int target_uV);\n    int (*get_voltage) (struct regulator_dev *, int *vol_uV);\n    int (*set_en) (struct regulator_dev *, unsigned int flags);\n    int (*set_voltage_ext) (struct regulator_dev *, int target_uV, unsigned int status);\n    int (*get_voltage_ext) (struct regulator_dev *, int *vol_uV,  unsigned int status);\n};\n\nstruct regulator_dev{\n    unsigned int flag;\n    struct regulator_ops *ops;\n    void *private;\n};\n"})}),"\n",(0,l.jsx)(n.h3,{id:"power-\u76f8\u5173\u7ed3\u6784\u4f53",children:"power \u76f8\u5173\u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"struct power_dev{\n    unsigned int flag;\n    struct bat_power_ops *bat_ops;\n    struct usb_power_ops *usb_ops;\n    struct power_supply  *config;\n    hal_sem_t irq_schd;\n};\n"})}),"\n",(0,l.jsx)(n.h3,{id:"regulator-\u83b7\u53d6\u7535\u8def\u63a5\u53e3",children:"regulator \u83b7\u53d6\u7535\u8def\u63a5\u53e3"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_regulator_get(unsigned int request_flag, struct regulator_dev *rdev)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev: \u6307\u5b9aregulator\u7684\u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.li,{children:"request_flag: \u6307\u5b9aregulator\u7684\u7535\u8def\u53c2\u6570"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"regulator-\u7535\u8def\u4f7f\u80fd\u63a5\u53e3",children:"regulator \u7535\u8def\u4f7f\u80fd\u63a5\u53e3"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_regulator_set_able(struct regulator_dev *rdev, unsigned int flags)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev: \u6307\u5b9aregulator\u7684\u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.li,{children:"flags: \u7535\u8def\u5f00\u5173\u72b6\u6001"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"regulator-\u83b7\u53d6\u7535\u538b\u63a5\u53e3",children:"regulator \u83b7\u53d6\u7535\u538b\u63a5\u53e3"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_regulator_get_voltage_ext(struct regulator_dev *rdev, int *vol_uV, unsigned int status)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev: \u6307\u5b9aregulator\u7684\u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.li,{children:"vol_uV: \u83b7\u53d6\u7684\u7535\u538b\u4fe1\u606f"}),"\n",(0,l.jsx)(n.li,{children:"status: \u8fd0\u884c/\u4f11\u7720\u65f6\u7684\u7535\u538b"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"regulator-\u8c03\u8282\u7535\u538b\u63a5\u53e3",children:"regulator \u8c03\u8282\u7535\u538b\u63a5\u53e3"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_regulator_set_voltage_ext(struct regulator_dev *rdev, int target_uV, unsigned int status)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev: \u6307\u5b9aregulator\u7684\u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.li,{children:"target_uV: \u6307\u5b9a\u8c03\u538b\u4fe1\u606f"}),"\n",(0,l.jsx)(n.li,{children:"status: \u8fd0\u884c/\u4f11\u7720\u65f6\u7684\u7535\u538b"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"power-\u521d\u59cb\u5316",children:"power \u521d\u59cb\u5316"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_init(void);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u65e0"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6\u5f53\u524d-power-\u9a71\u52a8",children:"\u83b7\u53d6\u5f53\u524d power \u9a71\u52a8"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u524d\u7684 power_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"0"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6\u7535\u6c60\u7535\u91cf\u4fe1\u606f",children:"\u83b7\u53d6\u7535\u6c60\u7535\u91cf\u4fe1\u606f"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_bat_cap(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u7535\u6c60\u7535\u91cf\uff0c[0\u2011100]"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6\u5e93\u4ed1\u8ba1\u4fe1\u606f",children:"\u83b7\u53d6\u5e93\u4ed1\u8ba1\u4fe1\u606f"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_coulumb_counter(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a\u8fd4\u56de\u7535\u6d41\u5927\u5c0f\uff0c\u5355\u4f4dmA"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u67e5\u770b\u7535\u6c60\u5f53\u524d\u72b6\u6001",children:"\u67e5\u770b\u7535\u6c60\u5f53\u524d\u72b6\u6001"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_bat_present(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a\u7535\u6c60\u6709\u6548\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u67e5\u770b\u7535\u6c60\u662f\u5426\u8fde\u63a5",children:"\u67e5\u770b\u7535\u6c60\u662f\u5426\u8fde\u63a5"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_bat_online(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a\u7535\u6c60\u5b58\u5728\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6\u7535\u6c60\u5145\u7535\u72b6\u6001",children:"\u83b7\u53d6\u7535\u6c60\u5145\u7535\u72b6\u6001"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_bat_status(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a\u8fd4\u56de\u7535\u6c60\u7684\u591a\u79cd\u72b6\u6001\uff0c[0] \u672a\u77e5\u72b6\u6001\uff1b[1] \u5145\u7535\u72b6\u6001\uff1b[3] \u8fde\u63a5\u5355\u4e0d\u5145\u7535\uff1b[4] \u5145\u6ee1\u7535\u3002"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6\u7535\u6c60\u5f53\u524d\u7684\u5065\u5eb7\u72b6\u6001",children:"\u83b7\u53d6\u7535\u6c60\u5f53\u524d\u7684\u5065\u5eb7\u72b6\u6001"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_bat_health(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a\u8fd4\u56de1\uff0c\u7535\u6c60\u5065\u5eb7"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6\u7535\u6c60\u7535\u538b",children:"\u83b7\u53d6\u7535\u6c60\u7535\u538b"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_vbat(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a\u8fd4\u56de\u5f53\u524d\u7535\u538b\uff0c\u5355\u4f4dmV"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6\u5145\u7535\u7535\u6d41",children:"\u83b7\u53d6\u5145\u7535\u7535\u6d41"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_ibat(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a\u8fd4\u56de\u5f53\u524d\u5145\u7535\u7535\u6d41\uff0c\u5355\u4f4dmA"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6\u653e\u7535\u7535\u6d41",children:"\u83b7\u53d6\u653e\u7535\u7535\u6d41"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_disibat(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a\u8fd4\u56de\u5f53\u524d\u653e\u7535\u7535\u6d41\uff0c\u5355\u4f4dmA"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6-axp-ic-\u6e29\u5ea6",children:"\u83b7\u53d6 AXP IC \u6e29\u5ea6"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_temp(struct power_dev *rdev);\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a\u5f53\u524dAXP IC \u6e29\u5ea6\uff0c\u5355\u4f4d\u4e3a\u6e29\u5ea6\u6570\u503c*10"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6\u7535\u6c60\u6e29\u5ea6",children:"\u83b7\u53d6\u7535\u6c60\u6e29\u5ea6"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_temp_ambient(struct power_dev *rdev)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a\u5f53\u524d\u7535\u6c60\u6e29\u5ea6\uff0c\u5355\u4f4d\u4e3a\u6e29\u5ea6\u6570\u503c*10"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u8bbe\u7f6e\u5145\u7535\u7535\u6d41",children:"\u8bbe\u7f6e\u5145\u7535\u7535\u6d41"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_set_chg_cur(struct power_dev *rdev, int cur)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.li,{children:"cur\uff1a\u5145\u7535\u7535\u6d41\u5927\u5c0f\uff0c\u5355\u4f4dmA"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u8bbe\u7f6e\u5145\u7535\u622a\u6b62\u7535\u538b",children:"\u8bbe\u7f6e\u5145\u7535\u622a\u6b62\u7535\u538b"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_set_chg_vol(struct power_dev *rdev, int vol)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.li,{children:"vol\uff1a\u5145\u7535\u622a\u6b62\u7535\u538b\uff0c\u5355\u4f4dmV"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u8bbe\u7f6e\u7535\u6c60\u5f00\u5173",children:"\u8bbe\u7f6e\u7535\u6c60\u5f00\u5173"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_set_batfet(struct power_dev *rdev, int onoff)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.li,{children:"onoff\uff1a\u7535\u6c60\u5f00\u5173\uff0c0 \u5173\u95ed\u7535\u6c60\u4e0e\u7535\u8def\u8fde\u63a5\uff0c1 \u6253\u5f00\u8fde\u63a5"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6\u5f53\u524dusb-\u72b6\u6001",children:"\u83b7\u53d6\u5f53\u524dUSB \u72b6\u6001"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_usb_status(struct power_dev *rdev)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a[1]USB \u8fde\u63a5\uff0c\u6709VBUS\uff1b[0] \u65e0USB \u8fde\u63a5\uff0c\u65e0VBUS"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6usb-\u53e3\u8f93\u5165\u9650\u6d41\u503c",children:"\u83b7\u53d6USB \u53e3\u8f93\u5165\u9650\u6d41\u503c"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_usb_ihold(struct power_dev *rdev)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1aUSB \u53e3\u9650\u6d41\u7684\u7535\u6d41\u503c\uff0c\u5355\u4f4dmA"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u83b7\u53d6usb-\u53e3\u8f93\u5165\u9650\u538b\u503c",children:"\u83b7\u53d6USB \u53e3\u8f93\u5165\u9650\u538b\u503c"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_get_usb_vhold(struct power_dev *rdev)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1aUSB \u53e3\u9650\u538b\u7535\u6d41\u503c\uff0c\u5355\u4f4dmV"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u8bbe\u7f6eusb-\u53e3\u8f93\u5165\u9650\u6d41\u503c",children:"\u8bbe\u7f6eUSB \u53e3\u8f93\u5165\u9650\u6d41\u503c"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_set_usb_ihold(struct power_dev *rdev, int cur)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.li,{children:"cur\uff1aUSB \u53e3\u9650\u6d41\u7684\u7535\u6d41\u503c\uff0c\u5355\u4f4dmA\uff0c\u8303\u56f4[0\u20113100]"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\u8bbe\u7f6eusb-\u53e3\u8f93\u5165\u9650\u538b\u503c",children:"\u8bbe\u7f6eUSB \u53e3\u8f93\u5165\u9650\u538b\u503c"}),"\n",(0,l.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:"int hal_power_set_usb_vhold(struct power_dev *rdev, int vol)\n"})}),"\n",(0,l.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"rdev\uff1a\u521d\u59cb\u5316\u540epower_dev \u7ed3\u6784\u4f53"}),"\n",(0,l.jsx)(n.li,{children:"vol\uff1aUSB \u53e3\u8f93\u5165\u9650\u538b\u503c\uff0c\u5355\u4f4dmV\uff0c\u8303\u56f4[3880mV~5080mV]"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u6210\u529f\uff1a0"}),"\n",(0,l.jsx)(n.li,{children:"\u5931\u8d25\uff1a\u20111"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",children:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b"}),"\n",(0,l.jsx)(n.h3,{id:"regulator-\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",children:"regulator \u6a21\u5757\u4f7f\u7528\u8303\u4f8b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:'#include <stdio.h>\n#include <stdint.h>\n#include <stdlib.h>\n#include <string.h>\n#include <stddef.h>\n\n#include <unistd.h>\n\n#include <sunxi_hal_regulator.h>\n#include <sunxi_hal_common.h>\n#include <hal_cmd.h>\n#include <hal_log.h>\n\n#define SOC_PRCM_BASE             (0x40050000)\n#define SOC_PRCM_DCDC_CTRL0       (SOC_PRCM_BASE+0x0004)\n#define SOC_PRCM_DCDC_CTRL1       (SOC_PRCM_BASE+0x0008)\n#define SOC_PRCM_DCDC_LDO_MODE    (SOC_PRCM_BASE+0x000c)\n#define SOC_PRCM_RTC_LDO_CTRL     (SOC_PRCM_BASE+0x0020)\n#define SOC_PRCM_EXT_LDO_CTRL     (SOC_PRCM_BASE+0x0024)\n#define SOC_PRCM_TOP_LDO_CTRL     (SOC_PRCM_BASE+0x0028)\n#define SOC_PRCM_AON_LDO_CTRL     (SOC_PRCM_BASE+0x0040)\n#define SOC_PRCM_APP_LDO_CTRL     (SOC_PRCM_BASE+0x0044)\n#define SOC_PRCM_DSP_LDO_CTRL     (SOC_PRCM_BASE+0x004c)\n\n//test : rpccli arm hal_regulator_set_current_able\n\nstatic int hal_regulator_regs_check(void)\n{\n    printf("[regulator] %x:%x\\n", SOC_PRCM_DCDC_CTRL0, readl(SOC_PRCM_DCDC_CTRL0));\n    printf("[regulator] %x:%x\\n", SOC_PRCM_DCDC_CTRL1, readl(SOC_PRCM_DCDC_CTRL1));\n    printf("[regulator] %x:%x\\n", SOC_PRCM_DCDC_LDO_MODE, readl(SOC_PRCM_DCDC_LDO_MODE));\n    printf("[regulator] %x:%x\\n", SOC_PRCM_RTC_LDO_CTRL, readl(SOC_PRCM_RTC_LDO_CTRL));\n    printf("[regulator] %x:%x\\n", SOC_PRCM_EXT_LDO_CTRL, readl(SOC_PRCM_EXT_LDO_CTRL));\n    printf("[regulator] %x:%x\\n", SOC_PRCM_TOP_LDO_CTRL, readl(SOC_PRCM_TOP_LDO_CTRL));\n    printf("[regulator] %x:%x\\n", SOC_PRCM_AON_LDO_CTRL, readl(SOC_PRCM_AON_LDO_CTRL));\n    printf("[regulator] %x:%x\\n", SOC_PRCM_APP_LDO_CTRL, readl(SOC_PRCM_APP_LDO_CTRL));\n    printf("[regulator] %x:%x\\n", SOC_PRCM_DSP_LDO_CTRL, readl(SOC_PRCM_DSP_LDO_CTRL));\n    return 0;\n}\n\nstatic int cmd_set_able(int argc, const char **argv)\n{\n    int ret;\n    int id = SOC_ID_MAX;\n    unsigned int flag = 0;\n    struct regulator_dev regulator;\n    if (argv[1])\n        id = (int)*argv[1] - 48;\n    if (argv[2])\n        flag = (int)*argv[2] - 48;\n    printf("[regulator] set regulator_en[%d]:%x, flage:%d\\n", id, REGULATOR_GET(SOC_REGULATOR, id), flag);\n    hal_regulator_get(REGULATOR_GET(SOC_REGULATOR, id), &regulator);\n    printf("[regulator] set_able regulator_en\\n");\n    hal_regulator_set_able(&regulator, flag);\n    printf("[regulator] set_regulator[%d]able_status:%d\\n", id, flag);\n    hal_regulator_regs_check();\n    return 0;\n}\nFINSH_FUNCTION_EXPORT_CMD(cmd_set_able, hal_regulator_set_current_able, regulator hal APIs tests)\n\nstatic int cmd_get_voltage_ext(int argc, const char **argv)\n{\n    int ret;\n    int id = SOC_ID_MAX;\n    unsigned int flag = 0;\n    struct regulator_dev regulator;\n    if (argv[1])\n        id = (int)*argv[1] - 48;\n    if (argv[2])\n        flag = (int)*argv[2] - 48;\n    printf("[regulator] get regulator:%x\\n", REGULATOR_GET(SOC_REGULATOR, id));\n    hal_regulator_get(REGULATOR_GET(SOC_REGULATOR, id), &regulator);\n    printf("[regulator] cat check_dedc_status\\n");\n    hal_regulator_get_voltage_ext(&regulator, &ret, flag);\n    printf("[regulator] get_regulator[%d]status[%d]voltage:%d\\n", id, flag, ret);\n    hal_regulator_regs_check();\n    return 0;\n}\nFINSH_FUNCTION_EXPORT_CMD(cmd_get_voltage_ext, hal_regulator_get_voltage, regulator hal APIs tests)\n\nstatic int cmd_set_voltage_ext(int argc, const char **argv)\n{\n    int ret[4] = {0};\n    int ret1;\n    int id = SOC_ID_MAX;\n    unsigned int flag = 0;\n    struct regulator_dev regulator;\n    if (argv[1])\n        id = (int)*argv[1] - 48;\n    if (argv[2])\n        flag = (int)*argv[2] - 48;\n    if (argv[3])\n        ret[0] = ((int)*argv[3] - 48) * 1000;\n    if (argv[4])\n        ret[1] = ((int)*argv[4] - 48) * 100;\n    if (argv[5])\n        ret[2] = ((int)*argv[5] - 48) * 10;\n    if (argv[6])\n        ret[3] = ((int)*argv[6] - 48) * 1;\n    ret1 = (ret[0] + ret[1] + ret[2] + ret[3]) * 1000;\n    printf("[regulator] set regulator:%x\\n", REGULATOR_GET(SOC_REGULATOR, id));\n    hal_regulator_get(REGULATOR_GET(SOC_REGULATOR, id), &regulator);\n    printf("[regulator] set_regulator[%d]status[%d]voltage:%d\\n", id, flag, ret1);\n    hal_regulator_set_voltage_ext(&regulator, ret1, flag);\n    printf("[regulator] finishe-set_regulator[%d]status[%d]voltage:%d\\n", id, flag, ret1);\n    hal_regulator_regs_check();\n    return 0;\n}\n\nFINSH_FUNCTION_EXPORT_CMD(cmd_set_voltage_ext, hal_regulator_set_voltage, regulator hal APIs tests)\n'})}),"\n",(0,l.jsx)(n.h3,{id:"power-\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",children:"power \u6a21\u5757\u4f7f\u7528\u8303\u4f8b"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c",children:'#include <stdio.h>\n#include <stdint.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include <sunxi_hal_power.h>\n#include <hal_cmd.h>\n#include <hal_log.h>\n\nstatic int cmd_test_power_get_bat(int argc, const char **argv)\n{\n    int ret;\n    struct power_dev rdev;\n    printf("[power] get power\\n");\n    hal_power_get(&rdev);\n\n    printf("[power] get bat cap\\n");\n    ret = hal_power_get_bat_cap(&rdev);\n    printf("[power] bat cap:%d\\n", ret);\n\n    printf("[power] get_coulumb_counter\\n");\n    ret = hal_power_get_coulumb_counter(&rdev);\n    printf("[power] coulumb_counter:%d\\n", ret);\n\n    printf("[power] get bat_present\\n");\n    pr_err("pmu_bat_unused:%d\\n", rdev.config->pmu_bat_unused);\n    pr_err("pmu_version:%d\\n", rdev.config->pmu_version);\n    ret = hal_power_get_bat_present(&rdev);\n    printf("[power] bat_present:%d\\n", ret);\n\n    printf("[power] get online\\n");\n    ret = hal_power_get_bat_online(&rdev);\n    printf("[power] bat online:%d\\n", ret);\n\n    printf("[power] get status\\n");\n    ret = hal_power_get_bat_status(&rdev);\n    printf("[power] bat status:%d\\n", ret);\n\n    printf("[power] get bat health\\n");\n    ret = hal_power_get_bat_health(&rdev);\n    printf("[power] bat health:%d\\n", ret);\n\n    printf("[power] get vbat\\n");\n    ret = hal_power_get_vbat(&rdev);\n    printf("[power] bat vbat:%d\\n", ret);\n\n    printf("[power] get ibat\\n");\n    ret = hal_power_get_ibat(&rdev);\n    printf("[power] bat ibat:%d\\n", ret);\n\n    printf("[power] get disibat\\n");\n    ret = hal_power_get_disibat(&rdev);\n    printf("[power] bat disibat:%d\\n", ret);\n\n    printf("[power] get temp\\n");\n    ret = hal_power_get_temp(&rdev);\n    printf("[power] bat temp:%d\\n", ret);\n\n    printf("[power] bat get test finish\\n");\n    return 0;\n}\nFINSH_FUNCTION_EXPORT_CMD(cmd_test_power_get_bat, test_power_get_bat, power hal APIs tests)\n\nstatic int cmd_test_power_set_bat(int argc, const char **argv)\n{\n    int ret;\n    struct power_dev rdev;\n    int cur = strtol(argv[1], NULL, 0);\n    int vol = strtol(argv[2], NULL, 0);\n\n    printf("[power] set bat power:cur:%d vol:%d\\n", cur, vol);\n    hal_power_get(&rdev);\n\n    printf("[power] set bat cur:%d\\n", cur);\n    ret = hal_power_set_chg_cur(&rdev, cur);\n    printf("[power] chg_cur:%d\\n", ret);\n\n    printf("[power] set bat vol:%d\\n", vol);\n    ret = hal_power_set_chg_vol(&rdev, vol);\n    printf("[power] _chg_vol:%d\\n", ret);\n\n    printf("[power] bat set test finish\\n");\n    return 0;\n}\nFINSH_FUNCTION_EXPORT_CMD(cmd_test_power_set_bat, test_power_set_bat, power hal APIs tests)\n\nstatic int cmd_test_power_get_usb(int argc, const char **argv)\n{\n    int ret;\n    struct power_dev rdev;\n    printf("[power] get power\\n");\n    hal_power_get(&rdev);\n\n    printf("[power] get usb_status\\n");\n    ret = hal_power_get_usb_status(&rdev);\n    printf("[power] usb_status:%d\\n", ret);\n\n    printf("[power] usb_ihold\\n");\n    ret = hal_power_get_usb_ihold(&rdev);\n    printf("[power] usb_ihold:%d\\n", ret);\n\n    printf("[power] get usb_vhold\\n");\n    ret = hal_power_get_usb_vhold(&rdev);\n    printf("[power] usb_vhold:%d\\n", ret);\n\n    printf("[power] get cc_status\\n");\n    ret = hal_power_get_cc_status(&rdev);\n    printf("[power] cc_status:%d\\n", ret);\n\n    printf("[power] usb get test finish\\n");\n    return 0;\n}\nFINSH_FUNCTION_EXPORT_CMD(cmd_test_power_get_usb, test_power_get_usb, power hal APIs tests)\n\nstatic int cmd_test_power_set_usb(int argc, const char **argv)\n{\n    int ret;\n    struct power_dev rdev;\n    int cur = strtol(argv[1], NULL, 0);\n    int vol = strtol(argv[2], NULL, 0);\n\n    printf("[power] set usb power:cur:%d vol:%d\\n", cur, vol);\n    hal_power_get(&rdev);\n\n    printf("[power] set usb_ihold:%d\\n", cur);\n    ret = hal_power_set_usb_ihold(&rdev, cur);\n    printf("[power] usb_ihold:%d\\n", ret);\n\n    printf("[power] set usb_vhold:%d\\n", vol);\n    ret = hal_power_set_usb_vhold(&rdev, vol);\n    printf("[power] usb_vhold:%d\\n", ret);\n\n    printf("[power] usb set test finish\\n");\n    return 0;\n}\nFINSH_FUNCTION_EXPORT_CMD(cmd_test_power_set_usb, test_power_set_usb, power hal APIs tests)\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(_,{...e})}):_(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>s});var l=r(7294);const t={},i=l.createContext(t);function s(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);