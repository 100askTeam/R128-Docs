"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9794],{6338:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>_});var s=i(5893),r=i(1151);const l={},c="CSI",d={id:"developer-guide/part2/chapter2",title:"CSI",description:"\u4ecb\u7ecdsunxi \u5e73\u53f0RTOS \u4e0aCSI_JPEG \u9a71\u52a8hal \u7684\u4e00\u822c\u4f7f\u7528\u65b9\u6cd5\u53ca\u8c03\u8bd5\u63a5\u53e3\uff0c\u4e3a\u5f00\u53d1\u4e0e\u8c03\u8bd5\u63d0\u4f9b\u53c2\u8003\u3002",source:"@site/docs/developer-guide/part2/chapter2.md",sourceDirName:"developer-guide/part2",slug:"/developer-guide/part2/chapter2",permalink:"/developer-guide/part2/chapter2",draft:!1,unlisted:!1,editUrl:"https://github.com/100askTeam/R128-Docs/tree/main/docs/developer-guide/part2/chapter2.md",tags:[],version:"current",frontMatter:{},sidebar:"classpartoneSidebar",previous:{title:"MSGBOX",permalink:"/developer-guide/part2/chapter19"},next:{title:"PWM",permalink:"/developer-guide/part2/chapter20"}},t={},_=[{value:"\u6a21\u5757\u4ecb\u7ecd",id:"\u6a21\u5757\u4ecb\u7ecd",level:2},{value:"SENSOR -&gt; CSI \u901a\u8def",id:"sensor---csi-\u901a\u8def",level:3},{value:"CSI -&gt; JPEG \u901a\u8def",id:"csi---jpeg-\u901a\u8def",level:3},{value:"\u7f16\u7801\u683c\u5f0f",id:"\u7f16\u7801\u683c\u5f0f",level:4},{value:"\u7f16\u7801\u6a21\u5f0f",id:"\u7f16\u7801\u6a21\u5f0f",level:4},{value:"ONLINE \u6a21\u5f0f",id:"online-\u6a21\u5f0f",level:5},{value:"OFFLINE \u6a21\u5f0f",id:"offline-\u6a21\u5f0f",level:5},{value:"\u6a21\u5757\u914d\u7f6e",id:"\u6a21\u5757\u914d\u7f6e",level:2},{value:"\u6e90\u7801\u7ed3\u6784",id:"\u6e90\u7801\u7ed3\u6784",level:2},{value:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",id:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",level:2},{value:"\u6570\u636e\u7ed3\u6784",id:"\u6570\u636e\u7ed3\u6784",level:3},{value:"<code>csi_jpeg_fmt</code>",id:"csi_jpeg_fmt",level:4},{value:"<code>csi_ipeg_mem</code>",id:"csi_ipeg_mem",level:4},{value:"\u6a21\u5757\u52a0\u8f7d\u521d\u59cb\u5316",id:"\u6a21\u5757\u52a0\u8f7d\u521d\u59cb\u5316",level:3},{value:"\u6a21\u5757\u53bb\u521d\u59cb\u5316",id:"\u6a21\u5757\u53bb\u521d\u59cb\u5316",level:3},{value:"\u914d\u7f6e\u53c2\u6570",id:"\u914d\u7f6e\u53c2\u6570",level:3},{value:"\u7533\u8bf7\u56fe\u50cfbuffer",id:"\u7533\u8bf7\u56fe\u50cfbuffer",level:3},{value:"\u91ca\u653e\u56fe\u50cfbuffer",id:"\u91ca\u653e\u56fe\u50cfbuffer",level:3},{value:"\u914d\u7f6e\u6d41\u5f00\u5173",id:"\u914d\u7f6e\u6d41\u5f00\u5173",level:3},{value:"CSI buffer \u51fa\u5217",id:"csi-buffer-\u51fa\u5217",level:3},{value:"CSI buffer \u5165\u961f",id:"csi-buffer-\u5165\u961f",level:3},{value:"JPEG buffer \u51fa\u5217",id:"jpeg-buffer-\u51fa\u5217",level:3},{value:"JPEG buffer \u5165\u961f",id:"jpeg-buffer-\u5165\u961f",level:3},{value:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",id:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",level:2},{value:"online \u6a21\u5f0f",id:"online-\u6a21\u5f0f-1",level:3},{value:"offline \u6a21\u5f0f",id:"offline-\u6a21\u5f0f-1",level:3}];function a(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"csi",children:"CSI"}),"\n",(0,s.jsx)(e.p,{children:"\u4ecb\u7ecdsunxi \u5e73\u53f0RTOS \u4e0aCSI_JPEG \u9a71\u52a8hal \u7684\u4e00\u822c\u4f7f\u7528\u65b9\u6cd5\u53ca\u8c03\u8bd5\u63a5\u53e3\uff0c\u4e3a\u5f00\u53d1\u4e0e\u8c03\u8bd5\u63d0\u4f9b\u53c2\u8003\u3002"}),"\n",(0,s.jsx)(e.h2,{id:"\u6a21\u5757\u4ecb\u7ecd",children:"\u6a21\u5757\u4ecb\u7ecd"}),"\n",(0,s.jsx)(e.h3,{id:"sensor---csi-\u901a\u8def",children:"SENSOR -> CSI \u901a\u8def"}),"\n",(0,s.jsx)(e.p,{children:"CSI \uff08CMOS sensor interface\uff09\u63a5\u53e3\u65f6\u5e8f\u4e0a\u53ef\u652f\u6301\u72ec\u7acb SYNC \u548c\u5d4c\u5165 SYNC(CCIR656)\u3002\u652f\u6301\u63a5\u6536 YUV422 \u6216 YUV420 \u6570\u636e\u3002"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter2/image1.jpg",alt:"image1"})}),"\n",(0,s.jsx)(e.p,{children:"VSYNC \u548cHSYNC \u7684\u6709\u6548\u7535\u5e73\u53ef\u4ee5\u662f\u6b63\u6781\u6027\uff0c\u4e5f\u53ef\u4ee5\u662f\u8d1f\u6781\u6027\u3002\u5728\u914d\u7f6e\u65f6\uff0c\u9700\u8981\u4fdd\u8bc1\u6444\u50cf\u5934\u548c CSI \u5185\u90e8\u914d\u7f6e\u4fdd\u6301\u4e00\u81f4\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u6700\u5e38\u89c1\u7684 YUV422 \u683c\u5f0f\u8f93\u5165\u540e\uff0c\u5185\u90e8\u53ea\u80fd\u5904\u7406\u6210 YUV420 \u683c\u5f0f\uff0c\u5e76\u8f93\u51fa\u5230 memory \u5b58\u4ee5 NV12\u5e03\u5c40\u5f62\u5f0f\u3002"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter2/image2.jpg",alt:"image2"})}),"\n",(0,s.jsx)(e.h3,{id:"csi---jpeg-\u901a\u8def",children:"CSI -> JPEG \u901a\u8def"}),"\n",(0,s.jsx)(e.h4,{id:"\u7f16\u7801\u683c\u5f0f",children:"\u7f16\u7801\u683c\u5f0f"}),"\n",(0,s.jsx)(e.p,{children:"JPEG \u6a21\u5757\u53ea\u652f\u6301 YUV420 \u683c\u5f0f\u7684\u7f16\u7801\uff0c\u56e0\u6b64 CSI \u6355\u83b7\u7684\u6570\u636e\u8f93\u51fa\u7ed9 JPEG \u6a21\u5757\u7f16\u7801\u7684\u56fe\u50cf\u683c\u5f0f\u5fc5\u987b\u662f YUV420\u3002\u82e5 CSI \u8f93\u5165 JPEG \u6a21\u5757\u662f JPEG \u7801\u6d41\uff0cJPEG \u6a21\u5757\u4e5f\u80fd\u6b63\u5e38\u5c06\u5176\u8f93\u51fa\u3002"}),"\n",(0,s.jsx)(e.h4,{id:"\u7f16\u7801\u6a21\u5f0f",children:"\u7f16\u7801\u6a21\u5f0f"}),"\n",(0,s.jsx)(e.p,{children:"JPEG \u6a21\u5757\u652f\u6301 online \u53ca offline \u6a21\u5f0f\u7f16\u7801\u3002"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"online \u6a21\u5f0f\u5373\u5728\u7ebf\u6a21\u5f0f\uff0cCSI \u6bcf\u63a5\u6536\u5230 16 \u884c\u6570\u636e\u5c31\u81ea\u52a8\u8fdb\u884c JPEG \u7f16\u7801\uff0c\u5f53\u524d\u5e27\u56fe\u50cf\u63a5\u6536\u5b8c\uff0c\u7f16\u7801\u4e5f\u968f\u5373\u5b8c\u6210\u3002\u8be5\u6a21\u5f0f CSI \u4e0d\u4f1a\u5c06\u63a5\u6536\u7684\u539f\u59cb\u56fe\u50cf\u6570\u636e\u4fdd\u5b58\u8d77\u6765\uff0c\u53ea\u8f93\u51fa JPEG \u7f16\u7801\u540e\u7684\u6570\u636e\u3002\u7f16\u7801\u6570\u636e\u8f93\u51fa\u7684\u65b9\u5f0f\u53c8\u6709\uff1a\u6574\u5e27\u6a21\u5f0f\u548c\u5206\u5757\u6a21\u5f0f\u3002"}),"\n",(0,s.jsx)(e.li,{children:"offline \u6a21\u5f0f\u5373\u79bb\u7ebf\u6a21\u5f0f\uff0cCSI \u63a5\u6536\u5230\u7684\u6570\u636e\u4f1a\u5148\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u5f85\u4e00\u5e27\u5b8c\u6574\u6570\u636e\u5168\u90e8\u5b58\u50a8\u5b8c\u6210\u540e\uff0c\u7531\u8f6f\u4ef6\u542f\u52a8 JPEG \u7f16\u7801\u3002\u6240\u4ee5\u6b64\u65f6 JPEG \u4e0d\u662f\u5b9e\u65f6\u5904\u7406\uff0c\u53ef\u4ee5\u5bf9\u4efb\u4f55\u5df2\u7ecf\u4fdd\u5b58\u597d\u7684 YUV420 \u56fe\u50cf\u6570\u636e\u8fdb\u884c\u7f16\u7801\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.h5,{id:"online-\u6a21\u5f0f",children:"ONLINE \u6a21\u5f0f"}),"\n",(0,s.jsx)(e.p,{children:"Online \u6a21\u5f0f\u7684\u901a\u8def\u6846\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff1a"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter2/image3.jpg",alt:"image3"})}),"\n",(0,s.jsx)(e.p,{children:"Sensor(\u6444\u50cf\u5934) \u8f93\u51fa YUV422 \u683c\u5f0f\u6570\u636e\u5230 CSI\uff0cCSI \u63a5\u6536\u5230 YUV422 \u540e\u5904\u7406\u6210 YUV420 \u683c\u5f0f\uff0c\u6bcf\u63a5\u6536\u5230 16 \u884c\u6570\u636e\u540e\uff0c\u786c\u4ef6\u4f1a\u81ea\u52a8\u542f\u52a8 JPEG encoder \u8fdb\u884c\u4e00\u6b21\u7f16\u7801\u64cd\u4f5c\uff0c\u7f16\u7801\u8f93\u51fa\u7684\u7801\u6d41\u901a\u8fc7\u603b\u7ebf\u76f4\u63a5\u5199\u5230\u8bbe\u5b9a\u597d\u7684\u5185\u5b58\u4e2d\uff0c\u6545\u53ef\u8ba4\u4e3a Online \u6a21\u5f0f\u4e0b\u56fe\u50cf\u7684\u63a5\u6536\u548c\u7f16\u7801\u662f\u540c\u65f6\u8fdb\u884c\u7684\u3002\u5728\u4e00\u5e27\u6570\u636e\u63a5\u6536\u5b8c\u5e76\u7f16\u7801\u7ed3\u675f\u540e\uff0cJPEG encoder \u4f1a\u4ea7\u751f ve finish(\u7f16\u7801\u5b8c\u6210) \u4e2d\u65ad\u3002\u56e0\u6b64\uff0c\u5bf9\u56fe\u50cf\u5206\u8fa8\u7387\u7684\u8981\u6c42\u662f\u884c\u5217\u6570\u4e3a 16 \u7684\u6574\u6570\u500d\uff0c\u652f\u6301\u7684\u6700\u5c0f\u5206\u8fa8\u7387\u4e3a 32*32\u3002"}),"\n",(0,s.jsx)(e.p,{children:"Online \u5206\u5757\u6a21\u5f0f\u4e0e\u6574\u5e27\u6a21\u5f0f\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5206\u5757\u6a21\u5f0f\u53ef\u4ee5\u5728 JPEG \u7f16\u7801\u8f93\u51fa\u6570\u636e\u91cf\u8fbe\u5230\u8bbe\u5b9a\u503c (\u4f8b\u5982 2KB/4KB) \u540e\u4ea7\u751f\u4e2d\u65ad\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u4e00\u5e27\u7f16\u7801\u8fc7\u7a0b\u4e2d\u5faa\u73af\u4f7f\u7528\u7f16\u7801\u8f93\u51fa\u7a7a\u95f4\uff0c\u4f8b\u5982\u53ea\u5206\u914d 8KB\u7684\u7f16\u7801\u8f93\u51fa\u7a7a\u95f4\uff0c\u800c\u4e00\u5e27\u56fe\u50cf\u7f16\u7801\u6570\u636e\u6709 20KB\uff0c\u5219\u5728\u7b2c\u4e00\u6b21\u5199\u6ee1 8KB \u540e\uff0cJPEG \u5c06\u4f1a\u4ece\u8fd9 8KB\u7684\u9996\u5730\u5740\u5f00\u59cb\u5b58\u50a8\uff0c\u5faa\u73af\u4f7f\u7528\uff0c\u6545\u9700\u8981\u8f6f\u4ef6\u914d\u5408\u5c06\u4e4b\u524d\u7684\u6570\u636e\u8bfb\u8d70\uff0c\u5426\u5219\u4e4b\u524d\u7684\u6570\u636e\u4f1a\u88ab\u8986\u76d6\u3002"}),"\n",(0,s.jsx)(e.h5,{id:"offline-\u6a21\u5f0f",children:"OFFLINE \u6a21\u5f0f"}),"\n",(0,s.jsx)(e.p,{children:"Offline \u6a21\u5f0f\u7684\u901a\u8def\u6846\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff1a"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/developer-guide/part2/chapter2/image4.jpg",alt:"image4"})}),"\n",(0,s.jsx)(e.p,{children:"Offline \u6a21\u5f0f\u4e0b\uff0cCSI \u4f1a\u5c06 YUV420 \u7684\u539f\u59cb\u56fe\u50cf\u6570\u636e\u5b58\u50a8\u5230 YUV memory \u4e2d\uff0c\u5b58\u653e\u683c\u5f0f\u4e3aNV12\u3002\u4e00\u5e27\u56fe\u50cf\u5168\u90e8\u5b58\u5b8c\u540e\uff0c\u4ea7\u751f\u5199\u56de\u4e2d\u65ad (wb finish)\uff0c\u7136\u540e\u7531\u8f6f\u4ef6\u542f\u52a8 JPEG \u5f00\u59cb\u7f16\u7801\uff0c JPEG \u7f16\u7801\u5668\u4f1a\u8bfb\u53d6 YUV memory \u4e2d\u7684\u539f\u59cb\u6570\u636e\u9001\u7ed9 Encoder \u8fdb\u884c\u7f16\u7801\uff0c\u7f16\u7801\u540e\u7684\u6570\u636e\u5199\u5230JPEG memory \u4e2d\u3002"}),"\n",(0,s.jsx)(e.h2,{id:"\u6a21\u5757\u914d\u7f6e",children:"\u6a21\u5757\u914d\u7f6e"}),"\n",(0,s.jsx)(e.p,{children:"\u5176menuconfig \u7684\u914d\u7f6e\u5982\u4e0b\uff08\u4ee5\u9009\u62e9GC0308 \u6444\u50cf\u5934\u4e3a\u4f8b\uff09\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"Drivers Options ---\x3e\n    soc related device drivers ---\x3e\n        CSI Devices ---\x3e\n            [*] enable csi driver\n            [*] enable csi camera driver\n            [*] csi camera choice ---\x3e\n                --- csi camera choice\n                [*] csi camera GC0308\n            [*] enable jpeg encoder\n            [*] enable csi demo test command  // csi_jpeg\u6a21\u5757\u6d4b\u8bd5\u7528\u4f8b\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u6e90\u7801\u7ed3\u6784",children:"\u6e90\u7801\u7ed3\u6784"}),"\n",(0,s.jsxs)(e.p,{children:["\u9a71\u52a8\u4f4d\u4e8e ",(0,s.jsx)(e.code,{children:"rtos-hal/hal/source/drivers/hal/source/csi"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"csi/\n\u251c\u2500\u2500 csi_camera/         ;csi driver\n\u2502   \u251c\u2500\u2500 csi.c\n\u2502   \u251c\u2500\u2500 csi.h\n\u2502   \u251c\u2500\u2500 csi_reg/\n\u2502   \u2502   \u251c\u2500\u2500 csi_reg.c\n\u2502   \u2502   \u2514\u2500\u2500 csi_reg.h\n\u2502   \u2514\u2500\u2500 sensor/         ;cmos sensor driver\n\u2502   \u251c\u2500\u2500 drv_gc0308.c\n\u2502   \u251c\u2500\u2500 sensor_helper.c\n\u2502   \u2514\u2500\u2500 sensor_helper.h\n\u251c\u2500\u2500 hal_csi_jpeg.c      ;csi_jpeg\u6a21\u5757\u9a71\u52a8\u5b9e\u73b0\u4e3b\u4f53\n\u251c\u2500\u2500 jpeg/               ;jpeg driver\n\u2502   \u251c\u2500\u2500 hal_jpeg.c\n\u2502   \u251c\u2500\u2500 hal_jpeg.h\n\u2502   \u251c\u2500\u2500 jpegenc.c\n\u2502   \u251c\u2500\u2500 jpegenc.h\n\u2502   \u251c\u2500\u2500 jpeglib.c\n\u2502   \u251c\u2500\u2500 jpeglib.h\n\u2502   \u251c\u2500\u2500 jpeg_marker.h\n\u2502   \u2514\u2500\u2500 jpeg_reg/\n\u2502   \u251c\u2500\u2500 jpeg_reg.c\n\u2502   \u2514\u2500\u2500 jpeg_reg.h\n\u2514\u2500\u2500 utility\n    \u251c\u2500\u2500 cj_board_cfg.h\n    \u251c\u2500\u2500 cj_platform_cfg.h\n    \u2514\u2500\u2500 sensor/\n        \u251c\u2500\u2500 camera_sensor.h\n        \u2514\u2500\u2500 drv_gc0308.h\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",children:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e"}),"\n",(0,s.jsx)(e.h3,{id:"\u6570\u636e\u7ed3\u6784",children:"\u6570\u636e\u7ed3\u6784"}),"\n",(0,s.jsx)(e.h4,{id:"csi_jpeg_fmt",children:(0,s.jsx)(e.code,{children:"csi_jpeg_fmt"})}),"\n",(0,s.jsx)(e.p,{children:"\u4f5c\u7528\uff1a\u7528\u4e8e\u63cf\u8ff0csi_jpeg \u6a21\u5757\u7684\u5c5e\u6027\u53c2\u6570"}),"\n",(0,s.jsx)(e.p,{children:"\u6210\u5458\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"line_mode\uff1aJPEG \u7684\u5de5\u4f5c\u6a21\u5f0f\u3002"}),"\n",(0,s.jsx)(e.li,{children:"output_mode\uff1aCSI_JPEG \u7684\u8f93\u51fa\u56fe\u50cf\u683c\u5f0f\u3002"}),"\n",(0,s.jsx)(e.li,{children:"cb\uff1aCSI/JPEG \u7684\u786c\u4ef6\u4e2d\u65ad\u7684\u56de\u8c03\u51fd\u6570\u3002\u53ef\u4ee5\u7528\u505a\u5b9e\u73b0JPEG \u5206\u5757\u6a21\u5f0f\u7684\u6570\u636e\u63d0\u53d6\u529f\u80fd\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"struct csi_jpeg_fmt {\n    unsigned int width;\n    unsigned int height;\n    enum line_mode_t line_mode;\n    enum pix_output_fmt_mode_t output_mode;\n    CapStatusCb cb;\n    unsigned char fps; //reserve\n}\uff1b\n\n// \u6210\u5458line_mode\u7ed3\u6784\u4f53\nenum line_mode_t {\n    OFFLINE_MODE = 0,\n    ONLINE_MODE,\n};\n\n// \u6210\u5458output_mode\u7ed3\u6784\u4f53\nenum pix_output_fmt_mode_t {\n    PIX_FMT_OUT_NV12 = 0x1,\n    PIX_FMT_OUT_JPEG = 0x2,\n    PIX_FMT_OUT_MAX = 0x3,\n};\n"})}),"\n",(0,s.jsx)(e.h4,{id:"csi_ipeg_mem",children:(0,s.jsx)(e.code,{children:"csi_ipeg_mem"})}),"\n",(0,s.jsx)(e.p,{children:"\u4f5c\u7528\uff1a\u7528\u4e8e\u63cf\u8ff0 CSI/JPEG \u6a21\u5757\u6240\u7533\u8bf7 buffer \u76f8\u5173\u7684\u5c5e\u6027\u4fe1\u606f"}),"\n",(0,s.jsx)(e.p,{children:"\u6210\u5458\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"buf : \u6240\u7533\u8bf7\u7684 buffer\u3002"}),"\n",(0,s.jsx)(e.li,{children:"mpart_info : JPEG \u5206\u5757\u6a21\u5f0f\u7684\u5757\u5c5e\u6027\u4fe1\u606f\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"struct csi_ipeg_mem {\n    unsigned char index;\n    struct csi_ipeg_buf buf;\n    jpeg_mpartbuffinfo mpart_info;\n    struct list_head list;\n};\n\n// \u6210\u5458buf\u7ed3\u6784\u4f53\nstruct csi_ipeg_buf {\n    unsigned int size;\n    void *addr;\n};\n\n// \u6210\u5458mpart_info\u7ed3\u6784\u4f53\ntypedef struct {\n    uint8_t buff_index;   /* Indicate which buffer the currently encoded part jpeg is stored in */\n    uint32_t buff_offset; /* Indicate the offset of the current part of jpeg in the buffer */\n    uint8_t tail;         /* Indicates whether it is the last part of a jpeg image */\n    uint32_t size;        /* Indicate the size of the current part of jpeg encoding */\n} jpeg_mpartbuffinfo;\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u6a21\u5757\u52a0\u8f7d\u521d\u59cb\u5316",children:"\u6a21\u5757\u52a0\u8f7d\u521d\u59cb\u5316"}),"\n",(0,s.jsx)(e.p,{children:"csi_jpeg \u6a21\u5757\u7684\u52a0\u8f7d\u51fd\u6570\uff0c\u4e3b\u8981\u662fCSI/JPEG \u6a21\u5757\u7684\u521d\u59cb\u5316\u3001\u7533\u8bf7\u4e2d\u65ad\u548cclk \u521d\u59cb\u5316\u7b49"}),"\n",(0,s.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"HAL_Status hal_csi_jpeg_probe(void)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,s.jsx)(e.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\u6a21\u5757\u53bb\u521d\u59cb\u5316",children:"\u6a21\u5757\u53bb\u521d\u59cb\u5316"}),"\n",(0,s.jsx)(e.p,{children:"csi_jpeg \u6a21\u5757\u7684\u79fb\u9664\u51fd\u6570\uff0c\u4e3b\u8981\u662fCSI/JPEG \u6a21\u5757\u7684\u53cd\u521d\u59cb\u5316\u3001\u6ce8\u9500\u4e2d\u65ad\u548cclk \u53cd\u521d\u59cb\u5316\u7b49\u3002"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"HAL_Status hal_csi_jpeg_remove(void)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,s.jsx)(e.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\u914d\u7f6e\u53c2\u6570",children:"\u914d\u7f6e\u53c2\u6570"}),"\n",(0,s.jsx)(e.p,{children:"\u8bbe\u7f6ecsi_jpeg \u6a21\u5757\u7684\u5c5e\u6027\u53c2\u6570\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"void hal_csi_jpeg_set_fmt(struct csi_jpeg_fmt *intput_fmt)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"intput_fmt\uff1a\u6307\u5411csi_jpeg_fmt \u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u914d\u7f6e\u53c2\u6570\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\u7533\u8bf7\u56fe\u50cfbuffer",children:"\u7533\u8bf7\u56fe\u50cfbuffer"}),"\n",(0,s.jsx)(e.p,{children:"CSI/JPEG \u6a21\u5757\u83b7\u53d6\u5b58\u653e\u56fe\u50cf\u6570\u636e\u7684buffer\u3002\u591a\u4e2a\u7f13\u5b58\u53ef\u4ee5\u7528\u4e8e\u5efa\u7acbFIFO\uff0c\u6765\u63d0\u9ad8\u89c6\u9891\u91c7\u96c6\u7684\u6548\u7387\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"int hal_csi_jpeg_reqbuf(unsigned int count)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"count: buffer \u6570\u76ee"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,s.jsx)(e.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\u91ca\u653e\u56fe\u50cfbuffer",children:"\u91ca\u653e\u56fe\u50cfbuffer"}),"\n",(0,s.jsx)(e.p,{children:"CSI/JPEG \u6a21\u5757\u91ca\u653e\u5b58\u653e\u56fe\u50cf\u6570\u636e\u7684buffer\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"int hal_csi_jpeg_freebuf(void)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,s.jsx)(e.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\u914d\u7f6e\u6d41\u5f00\u5173",children:"\u914d\u7f6e\u6d41\u5f00\u5173"}),"\n",(0,s.jsx)(e.p,{children:"csi_jpeg \u6a21\u5757\u7684\u5f00\u6d41/\u5173\u6d41\u51fd\u6570\uff0c\u4e3b\u8981\u662fCSI/JPEG \u6a21\u5757\u7684\u914d\u7f6e\u548c\u63a7\u5236CSI \u91c7\u96c6\u529f\u80fd\u7b49\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"void hal_csi_jpeg_s_stream(unsigned int on)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"on\uff1a\u201c\u975e0\u201d \u503c\u4ee3\u8868\u5f00\u542f\uff0c\u201c0\u201d \u503c\u4ee3\u8868\u5173\u95ed"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"csi-buffer-\u51fa\u5217",children:"CSI buffer \u51fa\u5217"}),"\n",(0,s.jsx)(e.p,{children:"\u5c06CSI driver \u5df2\u7ecf\u586b\u5145\u597d\u6570\u636e\u7684 buffer \u51fa\u5217\uff0c\u4f9b\u5e94\u7528\u4f7f\u7528\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"unsigned int hal_csi_dqbuf(struct csi_ipeg_mem *csi_mem, unsigned int timeout_msec)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"csi_mem\uff1aCSI buffer\uff0c\u6307\u5411csi_ipeg_mem \u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u914d\u7f6e\u53c2\u6570\u3002"}),"\n",(0,s.jsx)(e.li,{children:"timeout_msec\uff1a\u5355\u4f4dms\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u6b63\u6570\u4ee3\u8868\u6210\u529f\uff0c\u8fd4\u56decsi_mem"}),"\n",(0,s.jsx)(e.li,{children:"\u8d1f\u6570\u4ee3\u8868\u5931\u8d25"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"csi-buffer-\u5165\u961f",children:"CSI buffer \u5165\u961f"}),"\n",(0,s.jsx)(e.p,{children:"\u5c06 User \u7a7a\u95f4\u5df2\u7ecf\u5904\u7406\u8fc7\u7684buffer\uff0c\u91cd\u65b0\u5165\u961f\uff0c\u79fb\u4ea4\u7ed9CSI driver\uff0c\u7b49\u5f85\u586b\u5145\u6570\u636e\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"void hal_csi_qbuf(void)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"jpeg-buffer-\u51fa\u5217",children:"JPEG buffer \u51fa\u5217"}),"\n",(0,s.jsx)(e.p,{children:"\u5c06 JPEG driver \u5df2\u7ecf\u586b\u5145\u597d\u6570\u636e\u7684 buffer \u51fa\u5217\uff0c\u4f9b\u5e94\u7528\u4f7f\u7528\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"unsigned int hal_jpeg_dqbuf(struct csi_ipeg_mem *jpeg_mem, unsigned int timeout_msec)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"jpeg_mem\uff1aJPEG buffer\uff0c\u6307\u5411csi_ipeg_mem \u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u914d\u7f6e\u53c2\u6570\u3002"}),"\n",(0,s.jsx)(e.li,{children:"timeout_msec\uff1a\u5355\u4f4dms\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u6b63\u6570\u4ee3\u8868\u6210\u529f\uff0c\u8fd4\u56decsi_mem"}),"\n",(0,s.jsx)(e.li,{children:"\u8d1f\u6570\u4ee3\u8868\u5931\u8d25"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"jpeg-buffer-\u5165\u961f",children:"JPEG buffer \u5165\u961f"}),"\n",(0,s.jsx)(e.p,{children:"\u5c06User \u7a7a\u95f4\u5df2\u7ecf\u5904\u7406\u8fc7\u7684buffer\uff0c\u91cd\u65b0\u5165\u961f\uff0c\u79fb\u4ea4\u7ed9JPEG driver\uff0c\u7b49\u5f85\u586b\u5145\u6570\u636e\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"void hal_jpeg_qbuf(void)\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u65e0"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",children:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b"}),"\n",(0,s.jsx)(e.h3,{id:"online-\u6a21\u5f0f-1",children:"online \u6a21\u5f0f"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include <string.h>\n#include <unistd.h>\n#include "FreeRTOS/_os_semaphore.h"\n#include "FreeRTOS/_os_time.h"\n#include "sunxi_hal_twi.h"\n#include <fcntl.h>\n#include <hal_cmd.h>\n#include <hal_log.h>\n#include <hal_thread.h>\n#include "hal_csi_jpeg.h"\n#include "jpegenc.h"\n#include "cj_platform_cfg.h"\n\n/* Macro JPEG_MPART_ENABLE defined in jpegenc.h */\n#if JPEG_MPART_ENABLE\n#define JPEG_MPART_SIZE         (50*1024)\n#endif\n\nstatic int read_whole_jpg(struct csi_ipeg_mem *jpeg_mem, int order)\n{\n    FILE* fd;\n    long long res;\n    void *addr;\n    int size;\n    char name[128];\n\n    hal_log_info("%s line: %d addr = 0x%08x size = %d\\n", __func__, __LINE__,\n                jpeg_mem->buf.addr, jpeg_mem->buf.size);\n\n    sprintf(name, "/data/test_%d.jpg", order);\n    fd = fopen(name, "ab");\n    if (fd < 0) {\n        hal_log_info("open /data/test.jpg error %d\\n", fd);\n        return -1;\n    }\n    addr = jpeg_mem->buf.addr - JPEG_HEADER_LEN;\n    size = jpeg_mem->buf.size + JPEG_HEADER_LEN;\n\n    res = fwrite(addr, size, 1, fd);\n    if (res < 0) {\n        hal_log_info("write fail(%d), line%d..\\n", res, __LINE__);\n        fclose(fd);\n        return -1;\n    }\n    hal_log_info("write JPEG image ok\\n");\n\n    fclose(fd);\n\n    return 0;\n}\n\nstatic int read_part_jpg(void *addr, int size, int order)\n{\n    FILE* fd;\n    long long res;\n    char name[128];\n\n    hal_log_info("%s line: %d addr = 0x%08x size = %d\\n", __func__, __LINE__, addr, size);\n\n    sprintf(name, "/data/test_%d.jpg", order);\n    fd = fopen(name, "ab");\n    if (fd < 0) {\n        hal_log_info("open /data/test.jpg error %d\\n", fd);\n        return -1;\n    }\n\n    res = fwrite(addr, size, 1, fd);\n    if (res < 0) {\n        hal_log_info("write fail(%d), line%d..\\n", res, __LINE__);\n        fclose(fd);\n        return -1;\n    }\n    hal_log_info("write JPEG image ok\\n");\n\n    fclose(fd);\n\n    return 0;\n}\n\n#if JPEG_MPART_ENABLE\nstatic uint8_t* gmpartaddr[3];\nstatic uint32_t gmpartsize[3];\nstatic void jpeg_mpart_cb(struct csi_ipeg_mem *jpeg_mem)\n{\n    static uint32_t offset = 0;\n    static int index = 0;\n    hal_dcache_clean_invalidate((unsigned long)jpeg_mem->buf.addr +\n            jpeg_mem->mpart_info.buff_offset, jpeg_mem->mpart_info.size); /* necessary operation */\n    memcpy(gmpartaddr[index] + offset, jpeg_mem->buf.addr + jpeg_mem->mpart_info.buff_offset,\n            jpeg_mem->mpart_info.size);\n    offset += jpeg_mem->mpart_info.size;\n    if (jpeg_mem->mpart_info.tail) { /*  encode one jpeg finish */\n        gmpartsize[index] = offset;\n        offset = 0;\n        index++;\n        if (index > 3)\n            index = 0;\n    }\n}\n#endif\n\nstatic void main_test()\n{\n    struct csi_jpeg_fmt fmt;\n    unsigned int count, i;\n    struct csi_ipeg_mem *csi_mem;\n    struct csi_ipeg_mem *jpeg_mem[3];\n    unsigned int test_count;\n    unsigned int timeout_msec;\n    unsigned int j = 0;\n\n    fmt.width = 640;\n    fmt.height = 480;\n    fmt.line_mode = ONLINE_MODE;\n    fmt.output_mode = PIX_FMT_OUT_MAX;\n#if JPEG_MPART_ENABLE\n    fmt.cb = &jpeg_mpart_cb;\n#endif\n    hal_csi_jpeg_set_fmt(&fmt);\n\n    count = 3;\n\n    if (hal_csi_jpeg_reqbuf(count) != 0) {\n        return;\n    }\n\n    test_count = 3;\n\n    hal_csi_jpeg_s_stream(1);\n\n    hal_log_info("csi stream on!");\n\n    timeout_msec = 2000;\n\n#if JPEG_MPART_ENABLE\n    for (i = 0; i < count; i++) {\n        gmpartaddr[i] = malloc(JPEG_MPART_SIZE);\n        hal_log_info("jpeg pic addr = %x\\n", gmpartaddr[i]);\n        memset(gmpartaddr[i], 0 , JPEG_MPART_SIZE);\n    }\n#endif\n\n    while (test_count-- > 0) {\n        jpeg_mem[j] = hal_jpeg_dqbuf(jpeg_mem[j], timeout_msec);\n        hal_jpeg_qbuf();\n        j++;\n        if (j > count)\n            j = 0;\n    }\n    hal_disable_irq(CSI_JPEG_IRQn);\n\n#if JPEG_MPART_ENABLE\n    for (i = 0; i < count; i++) {\n        read_part_jpg(jpeg_mem[i]->buf.addr - JPEG_HEADER_LEN, JPEG_HEADER_LEN, i);\n        read_part_jpg(gmpartaddr[i], gmpartsize[i], i);\n        free(gmpartaddr[i]);\n    }\n#else\n    for (i = 0; i < count; i++)\n        read_whole_jpg(jpeg_mem[i], i);\n#endif\n\n    hal_csi_jpeg_s_stream(0);\n    hal_csi_jpeg_freebuf();\n    hal_log_info("csi stream off!!\\n");\n\n}\n\nint cmd_csi_jpeg_online_test(int argc, const char **argv)\n{\n    hal_log_info("csi jpeg demo started\\n");\n    hal_csi_jpeg_probe();\n\n    main_test();\n\n    hal_csi_jpeg_remove();\n    hal_log_info("csi jpeg demo over\\n");\n\n    return 0;\n}\n\nFINSH_FUNCTION_EXPORT_CMD(cmd_csi_jpeg_online_test, hal_csi_jpeg_online, csi jpeg online encode test)\n'})}),"\n",(0,s.jsx)(e.h3,{id:"offline-\u6a21\u5f0f-1",children:"offline \u6a21\u5f0f"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include <string.h>\n#include <unistd.h>\n#include "FreeRTOS/_os_semaphore.h"\n#include "FreeRTOS/_os_time.h"\n#include "sunxi_hal_twi.h"\n#include <fcntl.h>\n#include <hal_cmd.h>\n#include <hal_log.h>\n#include <hal_thread.h>\n#include "hal_csi_jpeg.h"\n#include "jpegenc.h"\n\nstatic int out_fmt = 0;\n#define CSI_JPEG_IRQn   109  // rv\n//#define CSI_JPEG_IRQn 93  // arm\n\nstatic int read_frame(struct csi_ipeg_mem *csi_mem)\n{\n    FILE* fd;\n    long long res;\n\n    hal_disable_irq(CSI_JPEG_IRQn);  // when write bin, close irq, r/w too slow\n    hal_log_info("%s line: %d addr = 0x%08x size = %d\\n", __func__, __LINE__,\n                csi_mem->buf.addr, csi_mem->buf.size);\n\n    fd = fopen("/data/nv12.bin", "ab");\n    if (fd < 0) {\n        hal_log_info("open /data/nv12.bin error %d\\n", fd);\n        return -1;\n    }\n\n    res = fwrite(csi_mem->buf.addr, csi_mem->buf.size, 1, fd);\n    if (res < 0) {\n        hal_log_info("write fail(%d), line%d..\\n", res, __LINE__);\n        fclose(fd);\n        return -1;\n    }\n    hal_log_info("write YUV image ok\\n");\n\n    fclose(fd);\n\n    hal_enable_irq(CSI_JPEG_IRQn);  // after write bin, open irq, r/w too slow\n    return 0;\n}\n\nstatic int read_jpg(struct csi_ipeg_mem *jpeg_mem)\n{\n    FILE* fd;\n    long long res;\n    void *addr;\n    unsigned int size;\n    char name[128];\n\n    hal_disable_irq(CSI_JPEG_IRQn);  // cfm when write bin, close irq\n    hal_log_info("%s line: %d addr = 0x%08x size = %d\\n", __func__, __LINE__,\n                jpeg_mem->buf.addr, jpeg_mem->buf.size);\n\n    fd = fopen("/data/test.jpg", "ab");\n    if (fd < 0) {\n        hal_log_info("open /data/test_online.jpg error %d\\n", fd);\n        return -1;\n    }\n\n    addr = jpeg_mem->buf.addr - JPEG_HEADER_LEN;\n    size = jpeg_mem->buf.size + JPEG_HEADER_LEN;\n\n    res = fwrite(addr, size, 1, fd);\n    if (res < 0) {\n        hal_log_info("write fail(%d), line%d..\\n", res, __LINE__);\n        fclose(fd);\n        return -1;\n    }\n    hal_log_info("write JPEG image ok\\n");\n\n    fclose(fd);\n    hal_enable_irq(CSI_JPEG_IRQn);  // cfm after write bin, open irq\n\n    return 0;\n}\n\nstatic void main_test()\n{\n    struct csi_jpeg_fmt fmt;\n    unsigned int count;\n    struct csi_ipeg_mem *csi_mem;\n    struct csi_ipeg_mem *jpeg_mem;\n    unsigned int test_count;\n    unsigned int timeout_msec;\n\n    fmt.width = 640;\n    fmt.height = 480;\n    fmt.line_mode = OFFLINE_MODE;\n    fmt.output_mode = PIX_FMT_OUT_MAX;\n    hal_csi_jpeg_set_fmt(&fmt);\n\n    count = 3;\n\n    if (hal_csi_jpeg_reqbuf(count) != 0) {\n        return ;\n    }\n\n    hal_csi_jpeg_s_stream(1);\n    hal_log_info("csi stream on!");\n\n    test_count = 200;\n    timeout_msec = 2000;  // recommend 2s, 10s for pm test\n\n    if (!out_fmt) {\n        while (test_count-- > 0) {\n            hal_log_info("test count = %d\\n", test_count);\n            csi_mem = hal_csi_dqbuf(csi_mem, timeout_msec);\n            if (test_count == 1)\n                read_frame(csi_mem);\n            hal_csi_qbuf();\n        }\n    } else {\n        while (test_count-- > 0) {\n            hal_log_info("test count = %d\\n", test_count);\n            jpeg_mem = hal_jpeg_dqbuf(jpeg_mem, timeout_msec);\n            if (test_count == 1)\n                read_jpg(jpeg_mem);\n            hal_jpeg_qbuf();\n        }\n    }\n\n    hal_csi_jpeg_s_stream(0);\n    hal_csi_jpeg_freebuf();\n    hal_log_info("csi stream off!!\\n");\n\n}\n\nstruct rt_thread *thread;\n\nstatic void csi_thread(void *data)\n{\n    hal_log_info("csi jpeg demo started\\n");\n    hal_csi_jpeg_probe();\n\n    main_test();\n\n    hal_csi_jpeg_remove();\n    hal_log_info("csi jpeg demo over\\n");\n\n    kthread_stop(thread);\n\n    return 0;\n}\n\nint cmd_csi_jpeg_offline_test(int argc, const char **argv)\n{\n    int ret;\n    if (argc < 2)\n    {\n        hal_log_info("Usage: hal_csi_jpeg_offline num. num: 0 is nv12, 1 is jpeg\\n");\n    } else {\n        out_fmt = strtol(argv[1], NULL, 0);\n    }\n\n    thread = kthread_create((void *)csi_thread, NULL, "csi_thread", 409600, HAL_THREAD_PRIORITY_SYS);\n    kthread_start(thread);\n\n    return 0;\n}\n\nFINSH_FUNCTION_EXPORT_CMD(cmd_csi_jpeg_offline_test, hal_csi_jpeg_offline, csi jpeg offline encode test)\n'})})]})}function h(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},1151:(n,e,i)=>{i.d(e,{Z:()=>d,a:()=>c});var s=i(7294);const r={},l=s.createContext(r);function c(n){const e=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);