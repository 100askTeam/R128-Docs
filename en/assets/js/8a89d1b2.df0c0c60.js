"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7094],{6848:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>a});var i=t(5893),r=t(1151);const l={},s="MSGBOX",d={id:"developer-guide/part2/chapter19",title:"MSGBOX",description:"msgbox \u7528\u6765\u5b9e\u73b0\u591a CPU \u4e4b\u95f4\u901a\u8baf\uff0c\u5728\u4e00\u4e9b IC \u5185\u90e8\u53ef\u80fd\u540c\u65f6\u5b58\u5728\u591a\u79cd\u6838\u5fc3\u7528\u6765\u5b9e\u73b0\u591a\u79cd\u4e0d\u540c\u529f\u80fd\uff0c\u8fd9\u4e9b\u4e0d\u540c\u6838\u5fc3\u8fd0\u884c\u4e0d\u540c\u67b6\u6784\u3001\u4e0d\u540c\u7cfb\u7edf\uff0c\u9700\u8981\u901a\u8fc7 MSGBOX \u7528\u6765\u5b9e\u73b0\u8fd9\u4e9b\u4e0d\u540c\u7cfb\u7edf\u95f4\u901a\u8baf\u3002",source:"@site/docs/developer-guide/part2/chapter19.md",sourceDirName:"developer-guide/part2",slug:"/developer-guide/part2/chapter19",permalink:"/en/developer-guide/part2/chapter19",draft:!1,unlisted:!1,editUrl:"https://github.com/100askTeam/R128-Docs/tree/main/docs/developer-guide/part2/chapter19.md",tags:[],version:"current",frontMatter:{},sidebar:"classpartoneSidebar",previous:{title:"MMC",permalink:"/en/developer-guide/part2/chapter18"},next:{title:"CSI",permalink:"/en/developer-guide/part2/chapter2"}},c={},a=[{value:"\u6a21\u5757\u4ecb\u7ecd",id:"\u6a21\u5757\u4ecb\u7ecd",level:2},{value:"\u6a21\u5757\u914d\u7f6e",id:"\u6a21\u5757\u914d\u7f6e",level:2},{value:"\u6e90\u7801\u7ed3\u6784",id:"\u6e90\u7801\u7ed3\u6784",level:2},{value:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",id:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",level:2},{value:"\u521d\u59cb\u5316\u63a5\u53e3",id:"\u521d\u59cb\u5316\u63a5\u53e3",level:3},{value:"\u901a\u9053\u7533\u8bf7\u63a5\u53e3",id:"\u901a\u9053\u7533\u8bf7\u63a5\u53e3",level:3},{value:"\u6570\u636e\u53d1\u9001\u63a5\u53e3",id:"\u6570\u636e\u53d1\u9001\u63a5\u53e3",level:3},{value:"\u901a\u9053\u91ca\u653e\u63a5\u53e3",id:"\u901a\u9053\u91ca\u653e\u63a5\u53e3",level:3},{value:"MSGBOX \u7533\u8bf7\u6d41\u7a0b",id:"msgbox-\u7533\u8bf7\u6d41\u7a0b",level:3},{value:"MSGBOX \u63a5\u6536\u6d41\u7a0b",id:"msgbox-\u63a5\u6536\u6d41\u7a0b",level:3},{value:"MSGBOX \u53d1\u9001\u6d41\u7a0b",id:"msgbox-\u53d1\u9001\u6d41\u7a0b",level:3},{value:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",id:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"msgbox",children:"MSGBOX"}),"\n",(0,i.jsx)(n.p,{children:"msgbox \u7528\u6765\u5b9e\u73b0\u591a CPU \u4e4b\u95f4\u901a\u8baf\uff0c\u5728\u4e00\u4e9b IC \u5185\u90e8\u53ef\u80fd\u540c\u65f6\u5b58\u5728\u591a\u79cd\u6838\u5fc3\u7528\u6765\u5b9e\u73b0\u591a\u79cd\u4e0d\u540c\u529f\u80fd\uff0c\u8fd9\u4e9b\u4e0d\u540c\u6838\u5fc3\u8fd0\u884c\u4e0d\u540c\u67b6\u6784\u3001\u4e0d\u540c\u7cfb\u7edf\uff0c\u9700\u8981\u901a\u8fc7 MSGBOX \u7528\u6765\u5b9e\u73b0\u8fd9\u4e9b\u4e0d\u540c\u7cfb\u7edf\u95f4\u901a\u8baf\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"\u6a21\u5757\u4ecb\u7ecd",children:"\u6a21\u5757\u4ecb\u7ecd"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"msgbox \u4e3a\u4e00\u4e2a\u53cc\u7aef fifo \u7ed3\u6784\uff0ccpu0 \u4ece\u4e00\u7aef\u5199\uff0ccpu1 \u4ece\u4e00\u7aef\u8bfb\u3002"}),"\n",(0,i.jsx)(n.li,{children:"rpmsg \u4e3a linux \u7528\u6765\u5b9e\u73b0\u901a\u8baf\u7684\u4e00\u79cd\u6846\u67b6"}),"\n",(0,i.jsx)(n.li,{children:"msgbox \u4e3a\u7247\u4e0a\u5904\u7406\u5668\u4e4b\u95f4\u63d0\u4f9b\u4e86\u4e2d\u65ad\u901a\u8baf\u673a\u5236"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u5bf9\u4e8e R128 \u5e73\u53f0\uff0cCPU Remote ID\u5982\u4e0b"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"CPU"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Remote ID"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ARM M33 Star"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"RISC-V C906"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"1"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"HIFI5 DSP"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"2"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"\u6a21\u5757\u914d\u7f6e",children:"\u6a21\u5757\u914d\u7f6e"}),"\n",(0,i.jsx)(n.p,{children:"\u914d\u7f6e\u8def\u5f84\u5982\u4e0b:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Kernel Setup ---\x3e\n    Drivers Setup ---\x3e\n        SoC HAL Drivers ---\x3e\n            msgbox devices ---\x3e\n                [*] enable msgbox driver\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u6e90\u7801\u7ed3\u6784",children:"\u6e90\u7801\u7ed3\u6784"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"msgbox/\n    \u251c\u2500\u2500 msgbox_amp            // msgbox AMP \u5b9e\u73b0\n    \u2502   \u251c\u2500\u2500 Makefile\n    \u2502   \u2514\u2500\u2500 msgbox_amp.c        \n    \u251c\u2500\u2500 platform              // \u5e73\u53f0\u5bc4\u5b58\u5668\u5b9a\u4e49\n    \u2502   \u251c\u2500\u2500 msgbox-sun20iw2.h\n    \u2514\u2500\u2500 platform-msgbox.h     // \u516c\u5171\u5934\u6587\u4ef6\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e",children:"\u6a21\u5757\u63a5\u53e3\u8bf4\u660e"}),"\n",(0,i.jsx)(n.p,{children:"\u5934\u6587\u4ef6"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"#include <hal_msgbox.h>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u521d\u59cb\u5316\u63a5\u53e3",children:"\u521d\u59cb\u5316\u63a5\u53e3"}),"\n",(0,i.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"int32_t hal_msgbox_init(void);\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u65e0"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,i.jsx)(n.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u901a\u9053\u7533\u8bf7\u63a5\u53e3",children:"\u901a\u9053\u7533\u8bf7\u63a5\u53e3"}),"\n",(0,i.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"uint32_t hal_msgbox_alloc_channel(struct msg_endpoint *edp, int32_t remote, int32_t read, int32_t write);\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"edp\uff1amsgbox\u7684\u7aef\u70b9"}),"\n",(0,i.jsx)(n.li,{children:"remote\uff1a\u8fdc\u7aef\u6838\u5fc3id"}),"\n",(0,i.jsx)(n.li,{children:"read\uff1a\u8bfb\u901a\u9053"}),"\n",(0,i.jsx)(n.li,{children:"write\uff1a\u5199\u901a\u9053"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,i.jsx)(n.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u6570\u636e\u53d1\u9001\u63a5\u53e3",children:"\u6570\u636e\u53d1\u9001\u63a5\u53e3"}),"\n",(0,i.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"uint32_t hal_msgbox_channel_send(struct msg_endpoint *edp, uint8_t *bf, uint32_t len);\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"edp\uff1amsgbox\u7684\u7aef\u70b9"}),"\n",(0,i.jsx)(n.li,{children:"bf\uff1a\u6570\u636ebuffer"}),"\n",(0,i.jsx)(n.li,{children:"len\uff1abuffer\u957f\u5ea6"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,i.jsx)(n.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u901a\u9053\u91ca\u653e\u63a5\u53e3",children:"\u901a\u9053\u91ca\u653e\u63a5\u53e3"}),"\n",(0,i.jsx)(n.p,{children:"\u51fd\u6570\u539f\u578b\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"void hal_msgbox_free_channel(struct msg_endpoint *edp);\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u53c2\u6570\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"edp\uff1amsgbox\u7684\u7aef\u70b9"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"0\uff1a\u6210\u529f"}),"\n",(0,i.jsx)(n.li,{children:"\u8d1f\u6570\uff1a\u5931\u8d25"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"msgbox-\u7533\u8bf7\u6d41\u7a0b",children:"MSGBOX \u7533\u8bf7\u6d41\u7a0b"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"\u4f7f\u7528hal_msgbox_alloc_channel\u63a5\u53e3\u7533\u8bf7 msgbox \u901a\u9053"}),"\n",(0,i.jsx)(n.li,{children:"\u586b\u5145msg_endpoint\u63a5\u6536\u56de\u8c03\uff0c\u8fd9\u4e2a\u4f1a\u5728 msgbox \u7684\u4e2d\u65ad\u51fd\u6570\u91cc\u8c03\u7528"}),"\n",(0,i.jsx)(n.li,{children:"\u901a\u8fc7hal_msgbox_channel_send\u8fdb\u884c\u6570\u636e\u53d1\u9001"}),"\n",(0,i.jsx)(n.li,{children:"\u63a5\u6536\u901a\u8fc7\u4e2d\u65ad\u7684\u65b9\u5f0f\u8fdb\u884c\u63a5\u6536\uff0c\u4f1a\u8c03\u7528msg_endpoint\u7684\u56de\u8c03\uff0c\u65e0\u9700\u4e3b\u52a8\u8c03\u7528"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"msgbox-\u63a5\u6536\u6d41\u7a0b",children:"MSGBOX \u63a5\u6536\u6d41\u7a0b"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"\u5728\u63a5\u6536\u51fd\u6570\u91cc\u4f1a\u9996\u5148\u904d\u5386\u6240\u6709\u7684msg_endpoint\uff0c\u5224\u65ad\u5f53\u524d\u7ec8\u7aef\u662f\u5426\u6709\u4e2d\u65ad\u53d1\u9001"}),"\n",(0,i.jsx)(n.li,{children:"irq_msgbox_channel_handler\u91cc\u4f1a\u8bfb\u53d6\u5f53\u524dmsg_endpoint\u7684\u5bc4\u5b58\u5668\uff0c\u6765\u5224\u65ad\u662f\u5426\u6709\u4e2d\u65ad\uff0c\u5982\u679c\u6709\uff0c\u5219\u8bfb\u53d6\u6570\u636e"}),"\n",(0,i.jsx)(n.li,{children:"\u9000\u51fa\u4e2d\u65ad"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"msgbox-\u53d1\u9001\u6d41\u7a0b",children:"MSGBOX \u53d1\u9001\u6d41\u7a0b"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"\u8c03\u7528hal_msgbox_channel_send\u63a5\u53e3\u8fdb\u884c\u6570\u636e\u53d1\u9001"}),"\n",(0,i.jsx)(n.li,{children:"msgbox_channel_send_data\u4f1a\u5224\u65ad\u662f\u8fdc\u7aef\u5904\u7406\u5668\u662f\u54ea\u4e2a\uff0c\u5e76\u4e14\u8ba1\u7b97 local->remote \u7684\u7cfb\u6570 N \u662f\u591a\u5c11\uff0c\u8fd9\u4e2a\u7cfb\u6570\u56de\u5b58\u653e\u5728 to_coef_n \u7684\u8868\u683c\u91cc"}),"\n",(0,i.jsx)(n.li,{children:"\u8ba1\u7b97\u5b8c\u6210\u540e\u5f80\u8fdc\u7aef\u7684 msgbox \u7684 fifo \u4e2d\u5199\u6570\u636e"}),"\n",(0,i.jsx)(n.li,{children:"\u53d1\u9001\u5b8c\u6210"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b",children:"\u6a21\u5757\u4f7f\u7528\u8303\u4f8b"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:'#include <FreeRTOS.h>\n#include <queue.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdint.h>\n#include <unistd.h>\n#include <string.h>\n#include <awlog.h>\n#include <hal_msgbox.h>\n\n#include <console.h>\n\n#define RECEIVE_QUEUE_LENGTH 16\n#define RECEIVE_QUEUE_WAIT_MS 100\n\nstruct msgbox_demo {\n    int remote_id;\n    int read_ch;\n    int write_ch;\n    QueueHandle_t recv_queue;\n};\n\nstatic void print_help_msg(void)\n{\n    printf("\\n");\n    printf("USAGE:\\n");\n    printf("  hal_msgbox <REQUIRED_ARGUMENTS> [OPTIONS]\\n");\n    printf("\\n");\n    printf("REQUIRED_ARGUMENTS:\\n");\n    printf("  -E REMOTE_ID: specify remote id\\n");\n    printf("  -R READ_CH  : specify read channel\\n");\n    printf("  -W WRITE_CH : specify write channel\\n");\n    printf("OPTIONS:\\n");\n    printf("  -s MESSAGE  : send MESSAGE\\n");\n    printf("  -r          : receive messages\\n");\n    printf("  -t TIMEOUT  : exit in TIMEOUT seconds when receive\\n");\n    printf("e.g. (communicate with remote 0, use read channel 3 and write channel 3):\\n");\n    printf("  hal_msgbox -E 0 -R 3 -W 3 -s \\"hello\\" : send string \\"hello\\"\\n");\n    printf("  hal_msgbox -E 0 -R 3 -W 3 -r           : receive messages (default in 10 seconds)\\n");\n    printf("  hal_msgbox -E 0 -R 3 -W 3 -r -t 20     : receive messages in 20 seconds\\n");\n    printf("\\n");\n}\n\nstatic int recv_callback(unsigned long data, void *private_data)\n{\n    BaseType_t taskwoken = pdFALSE;\n    printf("Receive callback (data: 0x%lx)\\n", data);\n    struct msgbox_demo *demo = private_data;\n    BaseType_t ret = xQueueSendFromISR(demo->recv_queue, &data, &taskwoken);\n    if (ret == errQUEUE_FULL) {\n        printf("recv_queue is full\\n");\n        return -1;\n    }\n    if (ret == pdPASS) {\n        portYIELD_FROM_ISR(taskwoken);\n    }\n    return 0;\n}\n\nstatic int cmd_hal_msgbox(int argc, char *argv[])\n{\n    int ret = 0;\n    int c;\n\n    struct msgbox_demo demo= {\n        .remote_id = -1,\n        .read_ch = -1,\n        .write_ch = -1,\n        .recv_queue = NULL,\n    };\n    struct msg_endpoint ept;\n\n    TickType_t start_ticks, current_ticks;\n    int do_send = 0;\n    const char *data_send= NULL;\n    int do_recv = 0;\n    int timeout_sec = 10;\n    uint32_t data_recv;\n\n    if (argc <= 1) {\n        print_help_msg();\n        ret = -1;\n        goto out;\n    }\n\n    while ((c = getopt(argc, argv, "hs:rt:E:W:R:")) != -1) {\n        switch (c) {\n        case \'h\' :\n            print_help_msg();\n            ret = 0;\n            goto out;\n        case \'E\':\n            demo.remote_id = atoi(optarg);\n            break;\n        case \'R\':\n            demo.read_ch = atoi(optarg);\n            break;\n        case \'W\':\n            demo.write_ch = atoi(optarg);\n            break;\n        case \'s\':\n            do_send = 1;\n            data_send = optarg;\n            break;\n        case \'r\':\n            do_recv = 1;\n            break;\n        case \'t\':\n            timeout_sec = atoi(optarg);\n            break;\n        default:\n            print_help_msg();\n            ret = -1;\n            goto out;\n        }\n    }\n\n    if (demo.remote_id < 0 || demo.read_ch < 0 || demo.write_ch < 0) {\n        printf("Error. Please specify remote id, read channel and write channel\\n");\n        print_help_msg();\n        ret = -1;\n        goto out;\n    }\n\n    printf("remote id: %d, write channel: %d, read channel: %d\\n",\n            demo.remote_id, demo.write_ch, demo.read_ch);\n\n    if (do_recv) {\n        demo.recv_queue = xQueueCreate(RECEIVE_QUEUE_LENGTH, sizeof(uint32_t));\n        if (!demo.recv_queue) {\n            printf("Failed to create receive queue\\n");\n            ret = -1;\n            goto out;\n        }\n        ept.rec = (void *)recv_callback;\n        ept.private = &demo;\n    }\n\n    ret = hal_msgbox_alloc_channel(&ept, demo.remote_id, demo.read_ch, demo.write_ch);\n    if (ret != 0) {\n        printf("Failed to allocate msgbox channel\\n");\n        goto delete_recv_queue;\n    }\n\n    if (do_send) {\n        ret = hal_msgbox_channel_send(&ept, (unsigned char *)data_send, strlen(data_send));\n        if (ret != 0) {\n            printf("Failed to send message\\n");\n            goto free_channel;\n        }\n    }\n\n    if (do_recv) {\n        printf("hal_msgbox will exit in %d seconds\\n", timeout_sec);\n        start_ticks = xTaskGetTickCount();\n        printf("start_ticks: %u\\n", start_ticks);\n\n        while (1) {\n            if (pdTRUE == xQueueReceive(demo.recv_queue, &data_recv,\n                        RECEIVE_QUEUE_WAIT_MS / portTICK_PERIOD_MS)) {\n                printf("Received from queue: 0x%x\\n", data_recv);\n            }\n            current_ticks = xTaskGetTickCount();\n            if ((current_ticks - start_ticks) * portTICK_PERIOD_MS\n                    >= timeout_sec * 1000) {\n                printf("current_ticks: %u\\n", current_ticks);\n                break;\n            }\n        }\n    }\n\n    printf("hal_msgbox exited\\n");\n    ret = 0;\n\nfree_channel:\n    hal_msgbox_free_channel(&ept);\ndelete_recv_queue:\n    if (do_recv) {\n        vQueueDelete(demo.recv_queue);\n    }\nout:\n    return ret;\n}\n\nFINSH_FUNCTION_EXPORT_CMD(cmd_hal_msgbox, hal_msgbox, hal msgbox);\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>s});var i=t(7294);const r={},l=i.createContext(r);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);