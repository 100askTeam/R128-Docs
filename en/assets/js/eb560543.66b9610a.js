"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8945],{6324:(x,n,e)=>{e.r(n),e.d(n,{assets:()=>E,contentTitle:()=>_,default:()=>C,frontMatter:()=>F,metadata:()=>s,toc:()=>r});var t=e(5893),i=e(1151);const F={},_="\u9a71\u52a8 OLED \u5c4f",s={id:"demo/part1/chapter8",title:"\u9a71\u52a8 OLED \u5c4f",description:"| \u672c\u6587\u6848\u4f8b\u4ee3\u7801     | \u4e0b\u8f7d\u5730\u5740                               |",source:"@site/docs/demo/part1/chapter8.md",sourceDirName:"demo/part1",slug:"/demo/part1/chapter8",permalink:"/en/demo/part1/chapter8",draft:!1,unlisted:!1,editUrl:"https://github.com/100askTeam/R128-Docs/tree/main/docs/demo/part1/chapter8.md",tags:[],version:"current",frontMatter:{},sidebar:"classparttwoSidebar",previous:{title:"\u83b7\u53d6\u771f\u968f\u673a\u6570",permalink:"/en/demo/part1/chapter7"},next:{title:"R128\u4f7f\u7528SPI LCD",permalink:"/en/demo/part1/chapter9"}},E={},r=[{value:"\u8f7d\u5165\u65b9\u6848",id:"\u8f7d\u5165\u65b9\u6848",level:2},{value:"\u8bbe\u7f6e TWI \u9a71\u52a8",id:"\u8bbe\u7f6e-twi-\u9a71\u52a8",level:2},{value:"\u914d\u7f6e TWI \u5f15\u811a",id:"\u914d\u7f6e-twi-\u5f15\u811a",level:2},{value:"\u7f16\u5199\u7a0b\u5e8f",id:"\u7f16\u5199\u7a0b\u5e8f",level:2},{value:"\u7f16\u5199 OLED \u9a71\u52a8",id:"\u7f16\u5199-oled-\u9a71\u52a8",level:3},{value:"\u7f16\u5199\u4e3b\u7a0b\u5e8f",id:"\u7f16\u5199\u4e3b\u7a0b\u5e8f",level:3},{value:"\u7ed3\u679c",id:"\u7ed3\u679c",level:2},{value:"\u9644\u5f55",id:"\u9644\u5f55",level:2}];function D(x){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...x.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"\u9a71\u52a8-oled-\u5c4f",children:"\u9a71\u52a8 OLED \u5c4f"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"\u672c\u6587\u6848\u4f8b\u4ee3\u7801"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"\u4e0b\u8f7d\u5730\u5740"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"OLED\u9a71\u52a8\u6848\u4f8b\u4ee3\u7801"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.a,{href:"https://www.aw-ol.com/downloads?cat=24",children:"https://www.aw-ol.com/downloads?cat=24"})})]})})]}),"\n",(0,t.jsx)(n.p,{children:"OLED\uff0c\u5373\u6709\u673a\u53d1\u5149\u4e8c\u6781\u7ba1\uff08 Organic Light Emitting Diode\uff09\u3002 OLED \u7531\u4e8e\u540c\u65f6\u5177\u5907\u81ea\u53d1\u5149\uff0c\u4e0d\u9700\u80cc \u5149\u6e90\u3001\u5bf9\u6bd4\u5ea6\u9ad8\u3001\u539a\u5ea6\u8584\u3001\u89c6\u89d2\u5e7f\u3001\u53cd\u5e94\u901f\u5ea6\u5feb\u3001\u53ef\u7528\u4e8e\u6320\u66f2\u6027\u9762\u677f\u3001\u4f7f\u7528\u6e29\u5ea6\u8303\u56f4\u5e7f\u3001\u6784\u9020\u53ca \u5236\u7a0b\u8f83\u7b80\u5355\u7b49\u4f18\u5f02\u4e4b\u7279\u6027\uff0c\u88ab\u8ba4\u4e3a\u662f\u4e0b\u4e00\u4ee3\u7684\u5e73\u9762\u663e\u793a\u5668\u65b0\u5174\u5e94\u7528\u6280\u672f\u3002"}),"\n",(0,t.jsx)(n.p,{children:"LCD \u90fd\u9700\u8981\u80cc\u5149\uff0c\u800c OLED \u4e0d\u9700\u8981\uff0c\u56e0\u4e3a\u5b83\u662f\u81ea\u53d1\u5149\u7684\u3002\u8fd9\u6837\u540c\u6837\u7684\u663e\u793a OLED \u6548\u679c\u8981\u6765\u5f97\u597d\u4e00 \u4e9b\u3002\u4ee5\u76ee\u524d\u7684\u6280\u672f\uff0cOLED \u7684\u5c3a\u5bf8\u8fd8\u96be\u4ee5\u5927\u578b\u5316\uff0c\u4f46\u662f\u5206\u8fa8\u7387\u786e\u53ef\u4ee5\u505a\u5230\u5f88\u9ad8\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5728\u6b64\u6211\u4eec\u4f7f\u7528\u7684 \u662f0.96\u5bf8OLED\u663e\u793a\u5c4f\uff0c\u8be5\u5c4f\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"0.96 \u5bf8 OLED \u6709\u9ec4\u84dd\uff0c\u767d\uff0c\u84dd\u4e09\u79cd\u989c\u8272\u53ef\u9009\uff1b\u5176\u4e2d\u9ec4\u84dd\u662f\u5c4f\u4e0a 1/4 \u90e8\u5206\u4e3a\u9ec4\u5149\uff0c\u4e0b 3/4 \u4e3a\u84dd\uff1b \u800c\u4e14\u662f\u56fa\u5b9a\u533a\u57df\u663e\u793a\u56fa\u5b9a\u989c\u8272\uff0c\u989c\u8272\u548c\u663e\u793a\u533a\u57df\u5747\u4e0d\u80fd\u4fee\u6539\uff1b\u767d\u5149\u5219\u4e3a\u7eaf\u767d\uff0c\u4e5f\u5c31\u662f\u9ed1\u5e95\u767d\u5b57\uff1b \u84dd\u8272\u5219\u4e3a\u7eaf\u84dd\uff0c\u4e5f\u5c31\u662f\u9ed1\u5e95\u84dd\u5b57\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u5206\u8fa8\u7387\u4e3a 128*64"}),"\n",(0,t.jsx)(n.li,{children:"\u591a\u79cd\u63a5\u53e3\u65b9\u5f0f\uff1bOLED \u88f8\u5c4f\u603b\u5171\u79cd\u63a5\u53e3\u5305\u62ec\uff1a6800\u30018080 \u4e24\u79cd\u5e76\u884c\u63a5\u53e3\u65b9\u5f0f\u30013 \u7ebf\u6216 4 \u7ebf\u7684 \u4e32\u884c SPI \u63a5\u53e3\u65b9\u5f0f\u3001 IIC \u63a5\u53e3\u65b9\u5f0f\uff08\u53ea\u9700\u8981 2 \u6839\u7ebf\u5c31\u53ef\u4ee5\u63a7\u5236 OLED \u4e86\uff01\uff09\uff0c\u8fd9\u4e94\u79cd\u63a5\u53e3\u662f\u901a\u8fc7\u5c4f\u4e0a\u7684 BS0~BS2 \u6765\u914d\u7f6e\u7684\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u672c\u6b21\u4f7f\u7528\u7684\u662f\u56db\u9488\u7684IIC \u6a21\u5757\uff0c\u5982\u4e0b\u56fe\uff1a"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter8/image1.png",alt:""})}),"\n",(0,t.jsx)(n.p,{children:"\u5f15\u811a\u914d\u7f6e\u5982\u4e0b"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"R128 Devkit"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"OLED"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"PA23"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"SCL"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"PA24"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"SDA"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"GND"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"GND"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"3V3"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"VCC"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"\u8f7d\u5165\u65b9\u6848",children:"\u8f7d\u5165\u65b9\u6848"}),"\n",(0,t.jsxs)(n.p,{children:["\u6211\u4eec\u4f7f\u7528\u7684\u5f00\u53d1\u677f\u662f R128-Devkit\uff0c\u9700\u8981\u5f00\u53d1 C906 \u6838\u5fc3\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6240\u4ee5\u8f7d\u5165\u65b9\u6848\u9009\u62e9 ",(0,t.jsx)(n.code,{children:"r128s2_module_c906"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ source envsetup.sh \n$ lunch_rtos 1\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter8/image2.png",alt:""}),")"]}),"\n",(0,t.jsx)(n.h2,{id:"\u8bbe\u7f6e-twi-\u9a71\u52a8",children:"\u8bbe\u7f6e TWI \u9a71\u52a8"}),"\n",(0,t.jsxs)(n.p,{children:["\u8fd0\u884c ",(0,t.jsx)(n.code,{children:"mrtos_menuconfig"})," \u8fdb\u5165\u914d\u7f6e\u9875\u9762\u3002\u524d\u5f80\u4e0b\u5217\u5730\u5740\u627e\u5230 ",(0,t.jsx)(n.code,{children:"TWI Devices"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Drivers Options  ---\x3e\n    soc related device drivers  ---\x3e\n            TWI Devices ---\x3e\n            -*- enable twi driver\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter8/image3.png",alt:""})}),"\n",(0,t.jsx)(n.h2,{id:"\u914d\u7f6e-twi-\u5f15\u811a",children:"\u914d\u7f6e TWI \u5f15\u811a"}),"\n",(0,t.jsxs)(n.p,{children:["\u6253\u5f00\u4f60\u559c\u6b22\u7684\u7f16\u8f91\u5668\uff0c\u4fee\u6539\u6587\u4ef6\uff1a",(0,t.jsx)(n.code,{children:"board/r128s2/module/configs/sys_config.fex"})]}),"\n",(0,t.jsxs)(n.p,{children:["\u589e\u52a0 TWI0 \u7684\u914d\u7f6e\uff0c\u53c2\u8003\u624b\u518c\u53ef\u77e5 PA23\uff0cPA24 \u7684 TWI0 \u590d\u7528\u4e3a ",(0,t.jsx)(n.code,{children:"6"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"[twi0]\ntwi0_sck        = port:PA23<6><1><default><default>\ntwi0_sda        = port:PA24<6><1><default><default>\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter8/image4.png",alt:""})}),"\n",(0,t.jsx)(n.h2,{id:"\u7f16\u5199\u7a0b\u5e8f",children:"\u7f16\u5199\u7a0b\u5e8f"}),"\n",(0,t.jsxs)(n.p,{children:["\u6253\u5f00\u4f60\u559c\u6b22\u7684\u7f16\u8f91\u5668\uff0c\u65b0\u589e\u6587\u4ef6\uff1a",(0,t.jsx)(n.code,{children:"lichee/rtos/projects/r128s2/module_c906/src/oled.c"})," \u7528\u4e8e\u7f16\u5199 OLED \u7684\u9a71\u52a8\u3002"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter8/image5.png",alt:""})}),"\n",(0,t.jsx)(n.h3,{id:"\u7f16\u5199-oled-\u9a71\u52a8",children:"\u7f16\u5199 OLED \u9a71\u52a8"}),"\n",(0,t.jsx)(n.p,{children:"\u4f7f\u7528\u4e00\u4e2a\u5b8f\u50a8\u5b58 TWI \u7684\u5730\u5740\u548c\u4f7f\u7528\u7684 TWI \u7aef\u53e3\uff0c\u5e76\u5b9a\u4e49\u663e\u5b58\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"#define OLED_IIC_ADDR 0x3c\n#define OLED_IIC_PORT 0\n\nuint8_t OLED_GRAM[144][8]; /* \u663e\u5b58 */\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u57fa\u7840\u64cd\u4f5c\u9a71\u52a8 TWI \u901a\u8baf\u51fd\u6570\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"#define OLED_CMD 0 /*\u5199\u547d\u4ee4 */\n#define OLED_DATA 1 /* \u5199\u6570\u636e */\n\nvoid OLED_WR_Byte(uint8_t dat, uint8_t mode)\n{\n    twi_msg_t msg;\n    twi_port_t port = OLED_IIC_PORT;\n\n    uint8_t buf[2];\n\n    if (mode)\n        buf[0] = 0x40;\n    else\n        buf[0] = 0x00;\n    buf[1] = dat;\n\n    msg.flags = 0;\n    msg.addr = OLED_IIC_ADDR;\n    msg.len = 2;\n    msg.buf = buf;\n    hal_twi_control(port, I2C_RDWR, &msg);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u663e\u793a\u5f00\u5173"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_ColorTurn(uint8_t i)\n{\n    if (i == 0) {\n        OLED_WR_Byte(0xA6, OLED_CMD); /* \u6b63\u5e38\u663e\u793a */\n    }\n    if (i == 1) {\n        OLED_WR_Byte(0xA7, OLED_CMD); /* \u53cd\u8272\u663e\u793a */\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u53cd\u663e\u8bbe\u7f6e"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_DisplayTurn(uint8_t i)\n{\n    if (i == 0) {\n        OLED_WR_Byte(0xC8, OLED_CMD); /* \u6b63\u5e38\u663e\u793a */\n        OLED_WR_Byte(0xA1, OLED_CMD);\n    }\n    if (i == 1) {\n        OLED_WR_Byte(0xC0, OLED_CMD); /* \u53cd\u8f6c\u663e\u793a */\n        OLED_WR_Byte(0xA0, OLED_CMD);\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u5237\u65b0\u5c4f\u5e55"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_Refresh(void)\n{\n    for (int i = 0; i < 8; i++) {\n        OLED_WR_Byte(0xb0 + i, OLED_CMD); //\u8bbe\u7f6e\u884c\u8d77\u59cb\u5730\u5740\n        OLED_WR_Byte(0x00, OLED_CMD); //\u8bbe\u7f6e\u4f4e\u5217\u8d77\u59cb\u5730\u5740\n        OLED_WR_Byte(0x10, OLED_CMD); //\u8bbe\u7f6e\u9ad8\u5217\u8d77\u59cb\u5730\u5740\n        OLED_WR_Byte(0x78, OLED_DATA);\n        OLED_WR_Byte(0x40, OLED_DATA);\n        for (int n = 0; n < 128; n++) {\n            OLED_WR_Byte(OLED_GRAM[n][i], OLED_DATA);\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u6e05\u5c4f"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_Clear(void)\n{\n    for (int i = 0; i < 8; i++) {\n        OLED_WR_Byte(0xb0 + i, OLED_CMD); //\u8bbe\u7f6e\u9875\u5730\u5740\uff080~7\uff09\n        OLED_WR_Byte(0x00, OLED_CMD); //\u8bbe\u7f6e\u663e\u793a\u4f4d\u7f6e\u2014\u5217\u4f4e\u5730\u5740\n        OLED_WR_Byte(0x10, OLED_CMD); //\u8bbe\u7f6e\u663e\u793a\u4f4d\u7f6e\u2014\u5217\u9ad8\u5730\u5740\n        for (int n = 0; n < 128; n++)\n            OLED_GRAM[n][i] = 0;\n        OLED_Refresh(); //\u5237\u65b0GRAM\u5185\u5bb9\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u753b\u70b9"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_DrawPoint(uint8_t x, uint8_t y, uint8_t t)\n{\n    uint8_t i, m, n;\n    i = y / 8;\n    m = y % 8;\n    n = 1 << m;\n    if (t) {\n        OLED_GRAM[x][i] |= n;\n    }\n    else {\n        OLED_GRAM[x][i] = ~OLED_GRAM[x][i];\n        OLED_GRAM[x][i] |= n;\n        OLED_GRAM[x][i] = ~OLED_GRAM[x][i];\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u753b\u7ebf"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_DrawLine(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, uint8_t mode)\n{\n    int xerr = 0, yerr = 0, delta_x, delta_y, distance;\n    int incx, incy, uRow, uCol;\n    delta_x = x2 - x1; //\u8ba1\u7b97\u5750\u6807\u589e\u91cf\n    delta_y = y2 - y1;\n    uRow = x1; //\u753b\u7ebf\u8d77\u70b9\u5750\u6807\n    uCol = y1;\n    if (delta_x > 0)\n        incx = 1; //\u8bbe\u7f6e\u5355\u6b65\u65b9\u5411\n    else if (delta_x == 0)\n        incx = 0; //\u5782\u76f4\u7ebf\n    else {\n        incx = -1;\n        delta_x = -delta_x;\n    }\n    if (delta_y > 0)\n        incy = 1;\n    else if (delta_y == 0)\n        incy = 0; //\u6c34\u5e73\u7ebf\n    else {\n        incy = -1;\n        delta_y = -delta_x;\n    }\n    if (delta_x > delta_y)\n        distance = delta_x; //\u9009\u53d6\u57fa\u672c\u589e\u91cf\u5750\u6807\u8f74\n    else\n        distance = delta_y;\n    for (uint16_t t = 0; t < distance + 1; t++) {\n        OLED_DrawPoint(uRow, uCol, mode); //\u753b\u70b9\n        xerr += delta_x;\n        yerr += delta_y;\n        if (xerr > distance) {\n            xerr -= distance;\n            uRow += incx;\n        }\n        if (yerr > distance) {\n            yerr -= distance;\n            uCol += incy;\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u753b\u56ed"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_DrawCircle(uint8_t x, uint8_t y, uint8_t r)\n{\n    int a, b, num;\n    a = 0;\n    b = r;\n    while (2 * b * b >= r * r) {\n        OLED_DrawPoint(x + a, y - b, 1);\n        OLED_DrawPoint(x - a, y - b, 1);\n        OLED_DrawPoint(x - a, y + b, 1);\n        OLED_DrawPoint(x + a, y + b, 1);\n\n        OLED_DrawPoint(x + b, y + a, 1);\n        OLED_DrawPoint(x + b, y - a, 1);\n        OLED_DrawPoint(x - b, y - a, 1);\n        OLED_DrawPoint(x - b, y + a, 1);\n\n        a++;\n        num = (a * a + b * b) - r * r; //\u8ba1\u7b97\u753b\u7684\u70b9\u79bb\u5706\u5fc3\u7684\u8ddd\u79bb\n        if (num > 0) {\n            b--;\n            a--;\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u663e\u793a\u5b57\u7b26"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_ShowChar(uint8_t x, uint8_t y, uint8_t chr, uint8_t size1, uint8_t mode)\n{\n    uint8_t temp, size2, chr1;\n    uint8_t x0 = x, y0 = y;\n    if (size1 == 8)\n        size2 = 6;\n    else\n        size2 = (size1 / 8 + ((size1 % 8) ? 1 : 0)) * (size1 / 2); //\u5f97\u5230\u5b57\u4f53\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u70b9\u9635\u96c6\u6240\u5360\u7684\u5b57\u8282\u6570\n    chr1 = chr - ' '; //\u8ba1\u7b97\u504f\u79fb\u540e\u7684\u503c\n    for (uint8_t i = 0; i < size2; i++) {\n        if (size1 == 8) {\n            temp = asc2_0806[chr1][i];\n        } //\u8c03\u75280806\u5b57\u4f53\n        else if (size1 == 12) {\n            temp = asc2_1206[chr1][i];\n        } //\u8c03\u75281206\u5b57\u4f53\n        else if (size1 == 16) {\n            temp = asc2_1608[chr1][i];\n        } //\u8c03\u75281608\u5b57\u4f53\n        else if (size1 == 24) {\n            temp = asc2_2412[chr1][i];\n        } //\u8c03\u75282412\u5b57\u4f53\n        else\n            return;\n        for (uint8_t m = 0; m < 8; m++) {\n            if (temp & 0x01)\n                OLED_DrawPoint(x, y, mode);\n            else\n                OLED_DrawPoint(x, y, !mode);\n            temp >>= 1;\n            y++;\n        }\n        x++;\n        if ((size1 != 8) && ((x - x0) == size1 / 2)) {\n            x = x0;\n            y0 = y0 + 8;\n        }\n        y = y0;\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u663e\u793a\u5b57\u7b26\u4e32"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_ShowString(uint8_t x, uint8_t y, uint8_t* chr, uint8_t size1, uint8_t mode)\n{\n    while ((*chr >= ' ') && (*chr <= '~')) //\u5224\u65ad\u662f\u4e0d\u662f\u975e\u6cd5\u5b57\u7b26!\n    {\n        OLED_ShowChar(x, y, *chr, size1, mode);\n        if (size1 == 8)\n            x += 6;\n        else\n            x += size1 / 2;\n        chr++;\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u663e\u793a\u6570\u5b57"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_ShowNum(uint8_t x, uint8_t y, uint32_t num, uint8_t len, uint8_t size1, uint8_t mode)\n{\n    uint8_t temp, m = 0;\n    if (size1 == 8)\n        m = 2;\n    for (uint8_t t = 0; t < len; t++) {\n        temp = (num / OLED_Pow(10, len - t - 1)) % 10;\n        if (temp == 0) {\n            OLED_ShowChar(x + (size1 / 2 + m) * t, y, '0', size1, mode);\n        }\n        else {\n            OLED_ShowChar(x + (size1 / 2 + m) * t, y, temp + '0', size1, mode);\n        }\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u914d\u7f6e\u4f4d\u7f6e"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_Set_Pos(uint8_t x, uint8_t y)\n{\n    OLED_WR_Byte(0xb0 + y, OLED_CMD);\n    OLED_WR_Byte(((x & 0xf0) >> 4) | 0x10, OLED_CMD);\n    OLED_WR_Byte((x & 0x0f), OLED_CMD);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7f16\u5199 OLED \u7684\u9a71\u52a8\u51fd\u6570\uff1a\u521d\u59cb\u5316\u5c4f\u5e55"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"void OLED_Init(void)\n{\n    hal_twi_init(OLED_IIC_PORT); //-- init TWI\n\n    OLED_WR_Byte(0xAE, OLED_CMD);//--turn off oled panel\n    OLED_WR_Byte(0x00, OLED_CMD);//---set low column address\n    OLED_WR_Byte(0x10, OLED_CMD);//---set high column address\n    OLED_WR_Byte(0x40, OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)\n    OLED_WR_Byte(0x81, OLED_CMD);//--set contrast control register\n    OLED_WR_Byte(0xCF, OLED_CMD); // Set SEG Output Current Brightness\n    OLED_WR_Byte(0xA1, OLED_CMD);//--Set SEG/Column Mapping     0xa0\u5de6\u53f3\u53cd\u7f6e 0xa1\u6b63\u5e38\n    OLED_WR_Byte(0xC8, OLED_CMD);//Set COM/Row Scan Direction   0xc0\u4e0a\u4e0b\u53cd\u7f6e 0xc8\u6b63\u5e38\n    OLED_WR_Byte(0xA6, OLED_CMD);//--set normal display\n    OLED_WR_Byte(0xA8, OLED_CMD);//--set multiplex ratio(1 to 64)\n    OLED_WR_Byte(0x3f, OLED_CMD);//--1/64 duty\n    OLED_WR_Byte(0xD3, OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)\n    OLED_WR_Byte(0x00, OLED_CMD);//-not offset\n    OLED_WR_Byte(0xd5, OLED_CMD);//--set display clock divide ratio/oscillator frequency\n    OLED_WR_Byte(0x80, OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec\n    OLED_WR_Byte(0xD9, OLED_CMD);//--set pre-charge period\n    OLED_WR_Byte(0xF1, OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock\n    OLED_WR_Byte(0xDA, OLED_CMD);//--set com pins hardware configuration\n    OLED_WR_Byte(0x12, OLED_CMD);\n    OLED_WR_Byte(0xDB, OLED_CMD);//--set vcomh\n    OLED_WR_Byte(0x40, OLED_CMD);//Set VCOM Deselect Level\n    OLED_WR_Byte(0x20, OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)\n    OLED_WR_Byte(0x02, OLED_CMD);//\n    OLED_WR_Byte(0x8D, OLED_CMD);//--set Charge Pump enable/disable\n    OLED_WR_Byte(0x14, OLED_CMD);//--set(0x10) disable\n    OLED_WR_Byte(0xA4, OLED_CMD);// Disable Entire Display On (0xa4/0xa5)\n    OLED_WR_Byte(0xA6, OLED_CMD);// Disable Inverse Display On (0xa6/a7)\n    OLED_Clear();\n    OLED_WR_Byte(0xAF, OLED_CMD); /*display ON*/  \n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u6211\u4eec\u628a\u8fd9\u4e9b\u9a71\u52a8\u653e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u91cc\uff0c\u547d\u540d\u4e3a ",(0,t.jsx)(n.code,{children:"oled.c"}),"\uff0c\u5b8c\u6574\u5185\u5bb9\u5982\u4e0b\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"#include <sunxi_hal_twi.h>\n\n#include \"oledfont.h\"\n\n#define OLED_IIC_ADDR 0x3c\n#define OLED_IIC_PORT 0\n\n#define OLED_CMD 0 /*\u5199\u547d\u4ee4 */\n#define OLED_DATA 1 /* \u5199\u6570\u636e */\n\nuint8_t OLED_GRAM[144][8]; /* \u663e\u5b58 */\n\nvoid OLED_WR_Byte(uint8_t dat, uint8_t mode)\n{\n    twi_msg_t msg;\n    twi_port_t port = OLED_IIC_PORT;\n\n    uint8_t buf[2];\n\n    if (mode)\n        buf[0] = 0x40;\n    else\n        buf[0] = 0x00;\n    buf[1] = dat;\n\n    msg.flags = 0;\n    msg.addr = OLED_IIC_ADDR;\n    msg.len = 2;\n    msg.buf = buf;\n    hal_twi_control(port, I2C_RDWR, &msg);\n}\n\nuint32_t OLED_Pow(uint8_t m, uint8_t n)\n{\n    uint32_t result = 1;\n    while (n--)\n        result *= m;\n    return result;\n}\n\nvoid OLED_ColorTurn(uint8_t i)\n{\n    if (i == 0) {\n        OLED_WR_Byte(0xA6, OLED_CMD); /* \u6b63\u5e38\u663e\u793a */\n    }\n    if (i == 1) {\n        OLED_WR_Byte(0xA7, OLED_CMD); /* \u53cd\u8272\u663e\u793a */\n    }\n}\n\nvoid OLED_DisplayTurn(uint8_t i)\n{\n    if (i == 0) {\n        OLED_WR_Byte(0xC8, OLED_CMD); /* \u6b63\u5e38\u663e\u793a */\n        OLED_WR_Byte(0xA1, OLED_CMD);\n    }\n    if (i == 1) {\n        OLED_WR_Byte(0xC0, OLED_CMD); /* \u53cd\u8f6c\u663e\u793a */\n        OLED_WR_Byte(0xA0, OLED_CMD);\n    }\n}\n\nvoid OLED_Refresh(void)\n{\n    for (int i = 0; i < 8; i++) {\n        OLED_WR_Byte(0xb0 + i, OLED_CMD); //\u8bbe\u7f6e\u884c\u8d77\u59cb\u5730\u5740\n        OLED_WR_Byte(0x00, OLED_CMD); //\u8bbe\u7f6e\u4f4e\u5217\u8d77\u59cb\u5730\u5740\n        OLED_WR_Byte(0x10, OLED_CMD); //\u8bbe\u7f6e\u9ad8\u5217\u8d77\u59cb\u5730\u5740\n        OLED_WR_Byte(0x78, OLED_DATA);\n        OLED_WR_Byte(0x40, OLED_DATA);\n        for (int n = 0; n < 128; n++) {\n            OLED_WR_Byte(OLED_GRAM[n][i], OLED_DATA);\n        }\n    }\n}\n\nvoid OLED_Clear(void)\n{\n    for (int i = 0; i < 8; i++) {\n        OLED_WR_Byte(0xb0 + i, OLED_CMD); //\u8bbe\u7f6e\u9875\u5730\u5740\uff080~7\uff09\n        OLED_WR_Byte(0x00, OLED_CMD); //\u8bbe\u7f6e\u663e\u793a\u4f4d\u7f6e\u2014\u5217\u4f4e\u5730\u5740\n        OLED_WR_Byte(0x10, OLED_CMD); //\u8bbe\u7f6e\u663e\u793a\u4f4d\u7f6e\u2014\u5217\u9ad8\u5730\u5740\n        for (int n = 0; n < 128; n++)\n            OLED_GRAM[n][i] = 0;\n        OLED_Refresh(); //\u5237\u65b0GRAM\u5185\u5bb9\n    }\n}\n\nvoid OLED_DrawPoint(uint8_t x, uint8_t y, uint8_t t)\n{\n    uint8_t i, m, n;\n    i = y / 8;\n    m = y % 8;\n    n = 1 << m;\n    if (t) {\n        OLED_GRAM[x][i] |= n;\n    }\n    else {\n        OLED_GRAM[x][i] = ~OLED_GRAM[x][i];\n        OLED_GRAM[x][i] |= n;\n        OLED_GRAM[x][i] = ~OLED_GRAM[x][i];\n    }\n}\n\nvoid OLED_DrawLine(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, uint8_t mode)\n{\n    int xerr = 0, yerr = 0, delta_x, delta_y, distance;\n    int incx, incy, uRow, uCol;\n    delta_x = x2 - x1; //\u8ba1\u7b97\u5750\u6807\u589e\u91cf\n    delta_y = y2 - y1;\n    uRow = x1; //\u753b\u7ebf\u8d77\u70b9\u5750\u6807\n    uCol = y1;\n    if (delta_x > 0)\n        incx = 1; //\u8bbe\u7f6e\u5355\u6b65\u65b9\u5411\n    else if (delta_x == 0)\n        incx = 0; //\u5782\u76f4\u7ebf\n    else {\n        incx = -1;\n        delta_x = -delta_x;\n    }\n    if (delta_y > 0)\n        incy = 1;\n    else if (delta_y == 0)\n        incy = 0; //\u6c34\u5e73\u7ebf\n    else {\n        incy = -1;\n        delta_y = -delta_x;\n    }\n    if (delta_x > delta_y)\n        distance = delta_x; //\u9009\u53d6\u57fa\u672c\u589e\u91cf\u5750\u6807\u8f74\n    else\n        distance = delta_y;\n    for (uint16_t t = 0; t < distance + 1; t++) {\n        OLED_DrawPoint(uRow, uCol, mode); //\u753b\u70b9\n        xerr += delta_x;\n        yerr += delta_y;\n        if (xerr > distance) {\n            xerr -= distance;\n            uRow += incx;\n        }\n        if (yerr > distance) {\n            yerr -= distance;\n            uCol += incy;\n        }\n    }\n}\n\nvoid OLED_DrawCircle(uint8_t x, uint8_t y, uint8_t r)\n{\n    int a, b, num;\n    a = 0;\n    b = r;\n    while (2 * b * b >= r * r) {\n        OLED_DrawPoint(x + a, y - b, 1);\n        OLED_DrawPoint(x - a, y - b, 1);\n        OLED_DrawPoint(x - a, y + b, 1);\n        OLED_DrawPoint(x + a, y + b, 1);\n\n        OLED_DrawPoint(x + b, y + a, 1);\n        OLED_DrawPoint(x + b, y - a, 1);\n        OLED_DrawPoint(x - b, y - a, 1);\n        OLED_DrawPoint(x - b, y + a, 1);\n\n        a++;\n        num = (a * a + b * b) - r * r; //\u8ba1\u7b97\u753b\u7684\u70b9\u79bb\u5706\u5fc3\u7684\u8ddd\u79bb\n        if (num > 0) {\n            b--;\n            a--;\n        }\n    }\n}\n\nvoid OLED_ShowChar(uint8_t x, uint8_t y, uint8_t chr, uint8_t size1, uint8_t mode)\n{\n    uint8_t temp, size2, chr1;\n    uint8_t x0 = x, y0 = y;\n    if (size1 == 8)\n        size2 = 6;\n    else\n        size2 = (size1 / 8 + ((size1 % 8) ? 1 : 0)) * (size1 / 2); //\u5f97\u5230\u5b57\u4f53\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u70b9\u9635\u96c6\u6240\u5360\u7684\u5b57\u8282\u6570\n    chr1 = chr - ' '; //\u8ba1\u7b97\u504f\u79fb\u540e\u7684\u503c\n    for (uint8_t i = 0; i < size2; i++) {\n        if (size1 == 8) {\n            temp = asc2_0806[chr1][i];\n        } //\u8c03\u75280806\u5b57\u4f53\n        else if (size1 == 12) {\n            temp = asc2_1206[chr1][i];\n        } //\u8c03\u75281206\u5b57\u4f53\n        else if (size1 == 16) {\n            temp = asc2_1608[chr1][i];\n        } //\u8c03\u75281608\u5b57\u4f53\n        else if (size1 == 24) {\n            temp = asc2_2412[chr1][i];\n        } //\u8c03\u75282412\u5b57\u4f53\n        else\n            return;\n        for (uint8_t m = 0; m < 8; m++) {\n            if (temp & 0x01)\n                OLED_DrawPoint(x, y, mode);\n            else\n                OLED_DrawPoint(x, y, !mode);\n            temp >>= 1;\n            y++;\n        }\n        x++;\n        if ((size1 != 8) && ((x - x0) == size1 / 2)) {\n            x = x0;\n            y0 = y0 + 8;\n        }\n        y = y0;\n    }\n}\n\nvoid OLED_ShowString(uint8_t x, uint8_t y, uint8_t* chr, uint8_t size1, uint8_t mode)\n{\n    while ((*chr >= ' ') && (*chr <= '~')) //\u5224\u65ad\u662f\u4e0d\u662f\u975e\u6cd5\u5b57\u7b26!\n    {\n        OLED_ShowChar(x, y, *chr, size1, mode);\n        if (size1 == 8)\n            x += 6;\n        else\n            x += size1 / 2;\n        chr++;\n    }\n}\n\nvoid OLED_ShowNum(uint8_t x, uint8_t y, uint32_t num, uint8_t len, uint8_t size1, uint8_t mode)\n{\n    uint8_t temp, m = 0;\n    if (size1 == 8)\n        m = 2;\n    for (uint8_t t = 0; t < len; t++) {\n        temp = (num / OLED_Pow(10, len - t - 1)) % 10;\n        if (temp == 0) {\n            OLED_ShowChar(x + (size1 / 2 + m) * t, y, '0', size1, mode);\n        }\n        else {\n            OLED_ShowChar(x + (size1 / 2 + m) * t, y, temp + '0', size1, mode);\n        }\n    }\n}\n\nvoid OLED_Set_Pos(uint8_t x, uint8_t y)\n{\n    OLED_WR_Byte(0xb0 + y, OLED_CMD);\n    OLED_WR_Byte(((x & 0xf0) >> 4) | 0x10, OLED_CMD);\n    OLED_WR_Byte((x & 0x0f), OLED_CMD);\n}\n\nvoid OLED_Init(void)\n{\n    hal_twi_init(OLED_IIC_PORT); //-- init TWI\n\n    OLED_WR_Byte(0xAE, OLED_CMD);//--turn off oled panel\n    OLED_WR_Byte(0x00, OLED_CMD);//---set low column address\n    OLED_WR_Byte(0x10, OLED_CMD);//---set high column address\n    OLED_WR_Byte(0x40, OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)\n    OLED_WR_Byte(0x81, OLED_CMD);//--set contrast control register\n    OLED_WR_Byte(0xCF, OLED_CMD); // Set SEG Output Current Brightness\n    OLED_WR_Byte(0xA1, OLED_CMD);//--Set SEG/Column Mapping     0xa0\u5de6\u53f3\u53cd\u7f6e 0xa1\u6b63\u5e38\n    OLED_WR_Byte(0xC8, OLED_CMD);//Set COM/Row Scan Direction   0xc0\u4e0a\u4e0b\u53cd\u7f6e 0xc8\u6b63\u5e38\n    OLED_WR_Byte(0xA6, OLED_CMD);//--set normal display\n    OLED_WR_Byte(0xA8, OLED_CMD);//--set multiplex ratio(1 to 64)\n    OLED_WR_Byte(0x3f, OLED_CMD);//--1/64 duty\n    OLED_WR_Byte(0xD3, OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)\n    OLED_WR_Byte(0x00, OLED_CMD);//-not offset\n    OLED_WR_Byte(0xd5, OLED_CMD);//--set display clock divide ratio/oscillator frequency\n    OLED_WR_Byte(0x80, OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec\n    OLED_WR_Byte(0xD9, OLED_CMD);//--set pre-charge period\n    OLED_WR_Byte(0xF1, OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock\n    OLED_WR_Byte(0xDA, OLED_CMD);//--set com pins hardware configuration\n    OLED_WR_Byte(0x12, OLED_CMD);\n    OLED_WR_Byte(0xDB, OLED_CMD);//--set vcomh\n    OLED_WR_Byte(0x40, OLED_CMD);//Set VCOM Deselect Level\n    OLED_WR_Byte(0x20, OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)\n    OLED_WR_Byte(0x02, OLED_CMD);//\n    OLED_WR_Byte(0x8D, OLED_CMD);//--set Charge Pump enable/disable\n    OLED_WR_Byte(0x14, OLED_CMD);//--set(0x10) disable\n    OLED_WR_Byte(0xA4, OLED_CMD);// Disable Entire Display On (0xa4/0xa5)\n    OLED_WR_Byte(0xA6, OLED_CMD);// Disable Inverse Display On (0xa6/a7)\n    OLED_Clear();\n    OLED_WR_Byte(0xAF, OLED_CMD); /*display ON*/  \n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u540c\u65f6\u63d0\u4f9b\u5bf9\u5e94\u7684\u5934\u6587\u4ef6 ",(0,t.jsx)(n.code,{children:"oled.h"}),"\uff0c",(0,t.jsx)(n.code,{children:"oledfont.h"})," \u7531\u4e8e\u8f83\u5927\uff0c\u89c1\u6587\u7ae0\u672b\u5c3e\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"#ifndef __OLED_H\n#define __OLED_H\n\n/* \u53d1\u9001\u4e00\u4e2a\u5b57\u8282 \n * mode:\u6570\u636e/\u547d\u4ee4\u6807\u5fd7 0,\u8868\u793a\u547d\u4ee4;1,\u8868\u793a\u6570\u636e;\n */\nvoid OLED_WR_Byte(uint8_t dat, uint8_t mode);\n\n/* Pow \u51fd\u6570 */\nuint32_t OLED_Pow(uint8_t m, uint8_t n);\n\n/* \u53cd\u663e\u51fd\u6570 */\nvoid OLED_ColorTurn(uint8_t i);\n\n/* \u5c4f\u5e55\u65cb\u8f6c180\u5ea6 */\nvoid OLED_DisplayTurn(uint8_t i);\n\n/* \u66f4\u65b0\u663e\u5b58\u5230OLED */\nvoid OLED_Refresh(void);\n\n/* OLED \u6e05\u5c4f */\nvoid OLED_Clear(void);\n\n/* \u753b\u70b9 \n * x: 0~127\n * y: 0~63\n * t: 1 \u586b\u5145 0,\u6e05\u7a7a \n */\nvoid OLED_DrawPoint(uint8_t x, uint8_t y, uint8_t t);\n\n/* \u753b\u7ebf\n * x1, y1: \u8d77\u70b9\u5750\u6807\n * x2, y2: \u7ed3\u675f\u5750\u6807\n */\nvoid OLED_DrawLine(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, uint8_t mode);\n\n/* \u753b\u5706\n * x, y: \u5706\u5fc3\u5750\u6807\n * r: \u5706\u7684\u534a\u5f84\n */\n\nvoid OLED_DrawCircle(uint8_t x, uint8_t y, uint8_t r);\n\n/* \u5728\u6307\u5b9a\u4f4d\u7f6e\u663e\u793a\u4e00\u4e2a\u5b57\u7b26,\u5305\u62ec\u90e8\u5206\u5b57\u7b26\n * x: 0 ~ 127\n * y: 0 ~ 63\n * size1: \u9009\u62e9\u5b57\u4f53 6x8/6x12/8x16/12x24\n * mode: 0,\u53cd\u8272\u663e\u793a; 1,\u6b63\u5e38\u663e\u793a\n */\nvoid OLED_ShowChar(uint8_t x, uint8_t y, uint8_t chr, uint8_t size1, uint8_t mode);\n\n/* \u663e\u793a\u5b57\u7b26\u4e32\n * x: 0 ~ 127\n * y: 0 ~ 63\n * *chr: \u5b57\u7b26\u4e32\u8d77\u59cb\u5730\u5740 \n * size1: \u9009\u62e9\u5b57\u4f53 6x8/6x12/8x16/12x24\n * mode: 0,\u53cd\u8272\u663e\u793a; 1,\u6b63\u5e38\u663e\u793a\n */\nvoid OLED_ShowString(uint8_t x, uint8_t y, uint8_t* chr, uint8_t size1, uint8_t mode);\n\n/* \u663e\u793a\u6570\u5b57\n * x: 0 ~ 127\n * y: 0 ~ 63\n * num: \u8981\u663e\u793a\u7684\u6570\u5b57 \n * len: \u6570\u5b57\u7684\u4f4d\u6570\n * size1: \u9009\u62e9\u5b57\u4f53 6x8/6x12/8x16/12x24\n * mode: 0,\u53cd\u8272\u663e\u793a; 1,\u6b63\u5e38\u663e\u793a\n */\nvoid OLED_ShowNum(uint8_t x, uint8_t y, uint32_t num, uint8_t len, uint8_t size1, uint8_t mode);\n\n/* \u521d\u59cb\u5316 OLED */\nvoid OLED_Init(void);\n\n#endif\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u7136\u540e\u628a ",(0,t.jsx)(n.code,{children:"oled.c"})," \u52a0\u5165\u7f16\u8bd1\uff0c\u4fee\u6539 ",(0,t.jsx)(n.code,{children:"lichee/rtos/projects/r128s2/module_c906/Makefile"}),"\u52a0\u5165"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"obj-y += src/oled.o\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter8/image6.png",alt:""})}),"\n",(0,t.jsx)(n.h3,{id:"\u7f16\u5199\u4e3b\u7a0b\u5e8f",children:"\u7f16\u5199\u4e3b\u7a0b\u5e8f"}),"\n",(0,t.jsxs)(n.p,{children:["\u6253\u5f00\u4f60\u559c\u6b22\u7684\u7f16\u8f91\u5668\uff0c\u4fee\u6539\u6587\u4ef6\uff1a",(0,t.jsx)(n.code,{children:"lichee/rtos/projects/r128s2/module_c906/src/main.c"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter8/image7.png",alt:""})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'OLED_Init();\n\nOLED_ShowString(12, 16, "====AWOL====", 16, 1);\nOLED_ShowString(20, 32, "2023/08/24", 16, 1);\n\nOLED_Refresh();\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u521d\u59cb\u5316 OLED\uff0c\u7136\u540e\u663e\u793a\u5b57\u7b26\u4e32\u3002"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter8/image8.png",alt:""})}),"\n",(0,t.jsx)(n.h2,{id:"\u7ed3\u679c",children:"\u7ed3\u679c"}),"\n",(0,t.jsx)(n.p,{children:"\u9a71\u52a8\u4e86 OLED \u5c4f"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"http://photos.100ask.net/aw-r128-docs/rtos/demo/part1/chapter8/image9.png",alt:""})}),"\n",(0,t.jsx)(n.h2,{id:"\u9644\u5f55",children:"\u9644\u5f55"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"oledfont.h"}),"\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'#ifndef __OLEDFONT_H\n#define __OLEDFONT_H\nconst unsigned char asc2_0806[][6] = {\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // sp\n    { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 }, // !\n    { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 }, // "\n    { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 }, // #\n    { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 }, // $\n    { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 }, // %\n    { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 }, // &\n    { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 }, // \'\n    { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 }, // (\n    { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 }, // )\n    { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 }, // *\n    { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 }, // +\n    { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 }, // ,\n    { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 }, // -\n    { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 }, // .\n    { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 }, // /\n    { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E }, // 0\n    { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 }, // 1\n    { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 }, // 2\n    { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 }, // 3\n    { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 }, // 4\n    { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 }, // 5\n    { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 }, // 6\n    { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 }, // 7\n    { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 }, // 8\n    { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E }, // 9\n    { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 }, // :\n    { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 }, // ;\n    { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 }, // <\n    { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 }, // =\n    { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 }, // >\n    { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 }, // ?\n    { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E }, // @\n    { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C }, // A\n    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 }, // B\n    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 }, // C\n    { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C }, // D\n    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 }, // E\n    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 }, // F\n    { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A }, // G\n    { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F }, // H\n    { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 }, // I\n    { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 }, // J\n    { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 }, // K\n    { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 }, // L\n    { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F }, // M\n    { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F }, // N\n    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E }, // O\n    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 }, // P\n    { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E }, // Q\n    { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 }, // R\n    { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 }, // S\n    { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 }, // T\n    { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F }, // U\n    { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F }, // V\n    { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F }, // W\n    { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 }, // X\n    { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 }, // Y\n    { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 }, // Z\n    { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 }, // [\n    { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 }, // 55\n    { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 }, // ]\n    { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 }, // ^\n    { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 }, // _\n    { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 }, // \'\n    { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 }, // a\n    { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 }, // b\n    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 }, // c\n    { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F }, // d\n    { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 }, // e\n    { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 }, // f\n    { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C }, // g\n    { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 }, // h\n    { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 }, // i\n    { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 }, // j\n    { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 }, // k\n    { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 }, // l\n    { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 }, // m\n    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 }, // n\n    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 }, // o\n    { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 }, // p\n    { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC }, // q\n    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 }, // r\n    { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 }, // s\n    { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 }, // t\n    { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C }, // u\n    { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C }, // v\n    { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C }, // w\n    { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 }, // x\n    { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C }, // y\n    { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 }, // z\n    { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }, // horiz lines\n};\n//12*12 ASCII\u5b57\u7b26\u96c6\u70b9\u9635\nconst unsigned char asc2_1206[95][12] = {\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*" ",0*/\n    { 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00 }, /*"!",1*/\n    { 0x00, 0x0C, 0x02, 0x0C, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*""",2*/\n    { 0x90, 0xD0, 0xBC, 0xD0, 0xBC, 0x90, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00 }, /*"#",3*/\n    { 0x18, 0x24, 0xFE, 0x44, 0x8C, 0x00, 0x03, 0x02, 0x07, 0x02, 0x01, 0x00 }, /*"$",4*/\n    { 0x18, 0x24, 0xD8, 0xB0, 0x4C, 0x80, 0x00, 0x03, 0x00, 0x01, 0x02, 0x01 }, /*"%",5*/\n    { 0xC0, 0x38, 0xE4, 0x38, 0xE0, 0x00, 0x01, 0x02, 0x02, 0x01, 0x02, 0x02 }, /*"&",6*/\n    { 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"\'",7*/\n    { 0x00, 0x00, 0x00, 0xF8, 0x04, 0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x04 }, /*"(",8*/\n    { 0x00, 0x02, 0x04, 0xF8, 0x00, 0x00, 0x00, 0x04, 0x02, 0x01, 0x00, 0x00 }, /*")",9*/\n    { 0x90, 0x60, 0xF8, 0x60, 0x90, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 }, /*"*",10*/\n    { 0x20, 0x20, 0xFC, 0x20, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00 }, /*"+",11*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00 }, /*",",12*/\n    { 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"-",13*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00 }, /*".",14*/\n    { 0x00, 0x80, 0x60, 0x1C, 0x02, 0x00, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00 }, /*"/",15*/\n    { 0xF8, 0x04, 0x04, 0x04, 0xF8, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00 }, /*"0",16*/\n    { 0x00, 0x08, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x02, 0x00, 0x00 }, /*"1",17*/\n    { 0x18, 0x84, 0x44, 0x24, 0x18, 0x00, 0x03, 0x02, 0x02, 0x02, 0x02, 0x00 }, /*"2",18*/\n    { 0x08, 0x04, 0x24, 0x24, 0xD8, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00 }, /*"3",19*/\n    { 0x40, 0xB0, 0x88, 0xFC, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x00 }, /*"4",20*/\n    { 0x3C, 0x24, 0x24, 0x24, 0xC4, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00 }, /*"5",21*/\n    { 0xF8, 0x24, 0x24, 0x2C, 0xC0, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00 }, /*"6",22*/\n    { 0x0C, 0x04, 0xE4, 0x1C, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00 }, /*"7",23*/\n    { 0xD8, 0x24, 0x24, 0x24, 0xD8, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00 }, /*"8",24*/\n    { 0x38, 0x44, 0x44, 0x44, 0xF8, 0x00, 0x00, 0x03, 0x02, 0x02, 0x01, 0x00 }, /*"9",25*/\n    { 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00 }, /*":",26*/\n    { 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00 }, /*";",27*/\n    { 0x00, 0x20, 0x50, 0x88, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02 }, /*"<",28*/\n    { 0x90, 0x90, 0x90, 0x90, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"=",29*/\n    { 0x00, 0x02, 0x04, 0x88, 0x50, 0x20, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00 }, /*">",30*/\n    { 0x18, 0x04, 0xC4, 0x24, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00 }, /*"?",31*/\n    { 0xF8, 0x04, 0xE4, 0x94, 0xF8, 0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x00 }, /*"@",32*/\n    { 0x00, 0xE0, 0x9C, 0xF0, 0x80, 0x00, 0x02, 0x03, 0x00, 0x00, 0x03, 0x02 }, /*"A",33*/\n    { 0x04, 0xFC, 0x24, 0x24, 0xD8, 0x00, 0x02, 0x03, 0x02, 0x02, 0x01, 0x00 }, /*"B",34*/\n    { 0xF8, 0x04, 0x04, 0x04, 0x0C, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00 }, /*"C",35*/\n    { 0x04, 0xFC, 0x04, 0x04, 0xF8, 0x00, 0x02, 0x03, 0x02, 0x02, 0x01, 0x00 }, /*"D",36*/\n    { 0x04, 0xFC, 0x24, 0x74, 0x0C, 0x00, 0x02, 0x03, 0x02, 0x02, 0x03, 0x00 }, /*"E",37*/\n    { 0x04, 0xFC, 0x24, 0x74, 0x0C, 0x00, 0x02, 0x03, 0x02, 0x00, 0x00, 0x00 }, /*"F",38*/\n    { 0xF0, 0x08, 0x04, 0x44, 0xCC, 0x40, 0x00, 0x01, 0x02, 0x02, 0x01, 0x00 }, /*"G",39*/\n    { 0x04, 0xFC, 0x20, 0x20, 0xFC, 0x04, 0x02, 0x03, 0x00, 0x00, 0x03, 0x02 }, /*"H",40*/\n    { 0x04, 0x04, 0xFC, 0x04, 0x04, 0x00, 0x02, 0x02, 0x03, 0x02, 0x02, 0x00 }, /*"I",41*/\n    { 0x00, 0x04, 0x04, 0xFC, 0x04, 0x04, 0x06, 0x04, 0x04, 0x03, 0x00, 0x00 }, /*"J",42*/\n    { 0x04, 0xFC, 0x24, 0xD0, 0x0C, 0x04, 0x02, 0x03, 0x02, 0x00, 0x03, 0x02 }, /*"K",43*/\n    { 0x04, 0xFC, 0x04, 0x00, 0x00, 0x00, 0x02, 0x03, 0x02, 0x02, 0x02, 0x03 }, /*"L",44*/\n    { 0xFC, 0x3C, 0xC0, 0x3C, 0xFC, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00 }, /*"M",45*/\n    { 0x04, 0xFC, 0x30, 0xC4, 0xFC, 0x04, 0x02, 0x03, 0x02, 0x00, 0x03, 0x00 }, /*"N",46*/\n    { 0xF8, 0x04, 0x04, 0x04, 0xF8, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00 }, /*"O",47*/\n    { 0x04, 0xFC, 0x24, 0x24, 0x18, 0x00, 0x02, 0x03, 0x02, 0x00, 0x00, 0x00 }, /*"P",48*/\n    { 0xF8, 0x84, 0x84, 0x04, 0xF8, 0x00, 0x01, 0x02, 0x02, 0x07, 0x05, 0x00 }, /*"Q",49*/\n    { 0x04, 0xFC, 0x24, 0x64, 0x98, 0x00, 0x02, 0x03, 0x02, 0x00, 0x03, 0x02 }, /*"R",50*/\n    { 0x18, 0x24, 0x24, 0x44, 0x8C, 0x00, 0x03, 0x02, 0x02, 0x02, 0x01, 0x00 }, /*"S",51*/\n    { 0x0C, 0x04, 0xFC, 0x04, 0x0C, 0x00, 0x00, 0x02, 0x03, 0x02, 0x00, 0x00 }, /*"T",52*/\n    { 0x04, 0xFC, 0x00, 0x00, 0xFC, 0x04, 0x00, 0x01, 0x02, 0x02, 0x01, 0x00 }, /*"U",53*/\n    { 0x04, 0x7C, 0x80, 0xE0, 0x1C, 0x04, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00 }, /*"V",54*/\n    { 0x1C, 0xE0, 0x3C, 0xE0, 0x1C, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00 }, /*"W",55*/\n    { 0x04, 0x9C, 0x60, 0x9C, 0x04, 0x00, 0x02, 0x03, 0x00, 0x03, 0x02, 0x00 }, /*"X",56*/\n    { 0x04, 0x1C, 0xE0, 0x1C, 0x04, 0x00, 0x00, 0x02, 0x03, 0x02, 0x00, 0x00 }, /*"Y",57*/\n    { 0x0C, 0x84, 0x64, 0x1C, 0x04, 0x00, 0x02, 0x03, 0x02, 0x02, 0x03, 0x00 }, /*"Z",58*/\n    { 0x00, 0x00, 0xFE, 0x02, 0x02, 0x00, 0x00, 0x00, 0x07, 0x04, 0x04, 0x00 }, /*"[",59*/\n    { 0x00, 0x0E, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00 }, /*"\\",60*/\n    { 0x00, 0x02, 0x02, 0xFE, 0x00, 0x00, 0x00, 0x04, 0x04, 0x07, 0x00, 0x00 }, /*"]",61*/\n    { 0x00, 0x04, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"^",62*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08 }, /*"_",63*/\n    { 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"`",64*/\n    { 0x00, 0x40, 0xA0, 0xA0, 0xC0, 0x00, 0x00, 0x01, 0x02, 0x02, 0x03, 0x02 }, /*"a",65*/\n    { 0x04, 0xFC, 0x20, 0x20, 0xC0, 0x00, 0x00, 0x03, 0x02, 0x02, 0x01, 0x00 }, /*"b",66*/\n    { 0x00, 0xC0, 0x20, 0x20, 0x60, 0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x00 }, /*"c",67*/\n    { 0x00, 0xC0, 0x20, 0x24, 0xFC, 0x00, 0x00, 0x01, 0x02, 0x02, 0x03, 0x02 }, /*"d",68*/\n    { 0x00, 0xC0, 0xA0, 0xA0, 0xC0, 0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x00 }, /*"e",69*/\n    { 0x00, 0x20, 0xF8, 0x24, 0x24, 0x04, 0x00, 0x02, 0x03, 0x02, 0x02, 0x00 }, /*"f",70*/\n    { 0x00, 0x40, 0xA0, 0xA0, 0x60, 0x20, 0x00, 0x07, 0x0A, 0x0A, 0x0A, 0x04 }, /*"g",71*/\n    { 0x04, 0xFC, 0x20, 0x20, 0xC0, 0x00, 0x02, 0x03, 0x02, 0x00, 0x03, 0x02 }, /*"h",72*/\n    { 0x00, 0x20, 0xE4, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x02, 0x00, 0x00 }, /*"i",73*/\n    { 0x00, 0x00, 0x20, 0xE4, 0x00, 0x00, 0x08, 0x08, 0x08, 0x07, 0x00, 0x00 }, /*"j",74*/\n    { 0x04, 0xFC, 0x80, 0xE0, 0x20, 0x20, 0x02, 0x03, 0x02, 0x00, 0x03, 0x02 }, /*"k",75*/\n    { 0x04, 0x04, 0xFC, 0x00, 0x00, 0x00, 0x02, 0x02, 0x03, 0x02, 0x02, 0x00 }, /*"l",76*/\n    { 0xE0, 0x20, 0xE0, 0x20, 0xC0, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00 }, /*"m",77*/\n    { 0x20, 0xE0, 0x20, 0x20, 0xC0, 0x00, 0x02, 0x03, 0x02, 0x00, 0x03, 0x02 }, /*"n",78*/\n    { 0x00, 0xC0, 0x20, 0x20, 0xC0, 0x00, 0x00, 0x01, 0x02, 0x02, 0x01, 0x00 }, /*"o",79*/\n    { 0x20, 0xE0, 0x20, 0x20, 0xC0, 0x00, 0x08, 0x0F, 0x0A, 0x02, 0x01, 0x00 }, /*"p",80*/\n    { 0x00, 0xC0, 0x20, 0x20, 0xE0, 0x00, 0x00, 0x01, 0x02, 0x0A, 0x0F, 0x08 }, /*"q",81*/\n    { 0x20, 0xE0, 0x40, 0x20, 0x20, 0x00, 0x02, 0x03, 0x02, 0x00, 0x00, 0x00 }, /*"r",82*/\n    { 0x00, 0x60, 0xA0, 0xA0, 0x20, 0x00, 0x00, 0x02, 0x02, 0x02, 0x03, 0x00 }, /*"s",83*/\n    { 0x00, 0x20, 0xF8, 0x20, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x02, 0x00 }, /*"t",84*/\n    { 0x20, 0xE0, 0x00, 0x20, 0xE0, 0x00, 0x00, 0x01, 0x02, 0x02, 0x03, 0x02 }, /*"u",85*/\n    { 0x20, 0xE0, 0x20, 0x80, 0x60, 0x20, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00 }, /*"v",86*/\n    { 0x60, 0x80, 0xE0, 0x80, 0x60, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00 }, /*"w",87*/\n    { 0x20, 0x60, 0x80, 0x60, 0x20, 0x00, 0x02, 0x03, 0x00, 0x03, 0x02, 0x00 }, /*"x",88*/\n    { 0x20, 0xE0, 0x20, 0x80, 0x60, 0x20, 0x08, 0x08, 0x07, 0x01, 0x00, 0x00 }, /*"y",89*/\n    { 0x00, 0x20, 0xA0, 0x60, 0x20, 0x00, 0x00, 0x02, 0x03, 0x02, 0x02, 0x00 }, /*"z",90*/\n    { 0x00, 0x00, 0x20, 0xDE, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x04, 0x00 }, /*"{",91*/\n    { 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00 }, /*"|",92*/\n    { 0x00, 0x02, 0xDE, 0x20, 0x00, 0x00, 0x00, 0x04, 0x07, 0x00, 0x00, 0x00 }, /*"}",93*/\n    { 0x02, 0x01, 0x02, 0x04, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"~",94*/\n};\n//16*16 ASCII\u5b57\u7b26\u96c6\u70b9\u9635\nconst unsigned char asc2_1608[][16] = {\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*" ",0*/\n    { 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x30, 0x00, 0x00, 0x00 }, /*"!",1*/\n    { 0x00, 0x10, 0x0C, 0x06, 0x10, 0x0C, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*""",2*/\n    { 0x40, 0xC0, 0x78, 0x40, 0xC0, 0x78, 0x40, 0x00, 0x04, 0x3F, 0x04, 0x04, 0x3F, 0x04, 0x04, 0x00 }, /*"#",3*/\n    { 0x00, 0x70, 0x88, 0xFC, 0x08, 0x30, 0x00, 0x00, 0x00, 0x18, 0x20, 0xFF, 0x21, 0x1E, 0x00, 0x00 }, /*"$",4*/\n    { 0xF0, 0x08, 0xF0, 0x00, 0xE0, 0x18, 0x00, 0x00, 0x00, 0x21, 0x1C, 0x03, 0x1E, 0x21, 0x1E, 0x00 }, /*"%",5*/\n    { 0x00, 0xF0, 0x08, 0x88, 0x70, 0x00, 0x00, 0x00, 0x1E, 0x21, 0x23, 0x24, 0x19, 0x27, 0x21, 0x10 }, /*"&",6*/\n    { 0x10, 0x16, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"\'",7*/\n    { 0x00, 0x00, 0x00, 0xE0, 0x18, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x18, 0x20, 0x40, 0x00 }, /*"(",8*/\n    { 0x00, 0x02, 0x04, 0x18, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x18, 0x07, 0x00, 0x00, 0x00 }, /*")",9*/\n    { 0x40, 0x40, 0x80, 0xF0, 0x80, 0x40, 0x40, 0x00, 0x02, 0x02, 0x01, 0x0F, 0x01, 0x02, 0x02, 0x00 }, /*"*",10*/\n    { 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x1F, 0x01, 0x01, 0x01, 0x00 }, /*"+",11*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xB0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*",",12*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 }, /*"-",13*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*".",14*/\n    { 0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x18, 0x04, 0x00, 0x60, 0x18, 0x06, 0x01, 0x00, 0x00, 0x00 }, /*"/",15*/\n    { 0x00, 0xE0, 0x10, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x00, 0x0F, 0x10, 0x20, 0x20, 0x10, 0x0F, 0x00 }, /*"0",16*/\n    { 0x00, 0x10, 0x10, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00 }, /*"1",17*/\n    { 0x00, 0x70, 0x08, 0x08, 0x08, 0x88, 0x70, 0x00, 0x00, 0x30, 0x28, 0x24, 0x22, 0x21, 0x30, 0x00 }, /*"2",18*/\n    { 0x00, 0x30, 0x08, 0x88, 0x88, 0x48, 0x30, 0x00, 0x00, 0x18, 0x20, 0x20, 0x20, 0x11, 0x0E, 0x00 }, /*"3",19*/\n    { 0x00, 0x00, 0xC0, 0x20, 0x10, 0xF8, 0x00, 0x00, 0x00, 0x07, 0x04, 0x24, 0x24, 0x3F, 0x24, 0x00 }, /*"4",20*/\n    { 0x00, 0xF8, 0x08, 0x88, 0x88, 0x08, 0x08, 0x00, 0x00, 0x19, 0x21, 0x20, 0x20, 0x11, 0x0E, 0x00 }, /*"5",21*/\n    { 0x00, 0xE0, 0x10, 0x88, 0x88, 0x18, 0x00, 0x00, 0x00, 0x0F, 0x11, 0x20, 0x20, 0x11, 0x0E, 0x00 }, /*"6",22*/\n    { 0x00, 0x38, 0x08, 0x08, 0xC8, 0x38, 0x08, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00 }, /*"7",23*/\n    { 0x00, 0x70, 0x88, 0x08, 0x08, 0x88, 0x70, 0x00, 0x00, 0x1C, 0x22, 0x21, 0x21, 0x22, 0x1C, 0x00 }, /*"8",24*/\n    { 0x00, 0xE0, 0x10, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x00, 0x00, 0x31, 0x22, 0x22, 0x11, 0x0F, 0x00 }, /*"9",25*/\n    { 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00 }, /*":",26*/\n    { 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x00, 0x00, 0x00, 0x00 }, /*";",27*/\n    { 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x00, 0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00 }, /*"<",28*/\n    { 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00 }, /*"=",29*/\n    { 0x00, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00 }, /*">",30*/\n    { 0x00, 0x70, 0x48, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x30, 0x36, 0x01, 0x00, 0x00 }, /*"?",31*/\n    { 0xC0, 0x30, 0xC8, 0x28, 0xE8, 0x10, 0xE0, 0x00, 0x07, 0x18, 0x27, 0x24, 0x23, 0x14, 0x0B, 0x00 }, /*"@",32*/\n    { 0x00, 0x00, 0xC0, 0x38, 0xE0, 0x00, 0x00, 0x00, 0x20, 0x3C, 0x23, 0x02, 0x02, 0x27, 0x38, 0x20 }, /*"A",33*/\n    { 0x08, 0xF8, 0x88, 0x88, 0x88, 0x70, 0x00, 0x00, 0x20, 0x3F, 0x20, 0x20, 0x20, 0x11, 0x0E, 0x00 }, /*"B",34*/\n    { 0xC0, 0x30, 0x08, 0x08, 0x08, 0x08, 0x38, 0x00, 0x07, 0x18, 0x20, 0x20, 0x20, 0x10, 0x08, 0x00 }, /*"C",35*/\n    { 0x08, 0xF8, 0x08, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x20, 0x3F, 0x20, 0x20, 0x20, 0x10, 0x0F, 0x00 }, /*"D",36*/\n    { 0x08, 0xF8, 0x88, 0x88, 0xE8, 0x08, 0x10, 0x00, 0x20, 0x3F, 0x20, 0x20, 0x23, 0x20, 0x18, 0x00 }, /*"E",37*/\n    { 0x08, 0xF8, 0x88, 0x88, 0xE8, 0x08, 0x10, 0x00, 0x20, 0x3F, 0x20, 0x00, 0x03, 0x00, 0x00, 0x00 }, /*"F",38*/\n    { 0xC0, 0x30, 0x08, 0x08, 0x08, 0x38, 0x00, 0x00, 0x07, 0x18, 0x20, 0x20, 0x22, 0x1E, 0x02, 0x00 }, /*"G",39*/\n    { 0x08, 0xF8, 0x08, 0x00, 0x00, 0x08, 0xF8, 0x08, 0x20, 0x3F, 0x21, 0x01, 0x01, 0x21, 0x3F, 0x20 }, /*"H",40*/\n    { 0x00, 0x08, 0x08, 0xF8, 0x08, 0x08, 0x00, 0x00, 0x00, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00 }, /*"I",41*/\n    { 0x00, 0x00, 0x08, 0x08, 0xF8, 0x08, 0x08, 0x00, 0xC0, 0x80, 0x80, 0x80, 0x7F, 0x00, 0x00, 0x00 }, /*"J",42*/\n    { 0x08, 0xF8, 0x88, 0xC0, 0x28, 0x18, 0x08, 0x00, 0x20, 0x3F, 0x20, 0x01, 0x26, 0x38, 0x20, 0x00 }, /*"K",43*/\n    { 0x08, 0xF8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x3F, 0x20, 0x20, 0x20, 0x20, 0x30, 0x00 }, /*"L",44*/\n    { 0x08, 0xF8, 0xF8, 0x00, 0xF8, 0xF8, 0x08, 0x00, 0x20, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x20, 0x00 }, /*"M",45*/\n    { 0x08, 0xF8, 0x30, 0xC0, 0x00, 0x08, 0xF8, 0x08, 0x20, 0x3F, 0x20, 0x00, 0x07, 0x18, 0x3F, 0x00 }, /*"N",46*/\n    { 0xE0, 0x10, 0x08, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x0F, 0x10, 0x20, 0x20, 0x20, 0x10, 0x0F, 0x00 }, /*"O",47*/\n    { 0x08, 0xF8, 0x08, 0x08, 0x08, 0x08, 0xF0, 0x00, 0x20, 0x3F, 0x21, 0x01, 0x01, 0x01, 0x00, 0x00 }, /*"P",48*/\n    { 0xE0, 0x10, 0x08, 0x08, 0x08, 0x10, 0xE0, 0x00, 0x0F, 0x18, 0x24, 0x24, 0x38, 0x50, 0x4F, 0x00 }, /*"Q",49*/\n    { 0x08, 0xF8, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00, 0x20, 0x3F, 0x20, 0x00, 0x03, 0x0C, 0x30, 0x20 }, /*"R",50*/\n    { 0x00, 0x70, 0x88, 0x08, 0x08, 0x08, 0x38, 0x00, 0x00, 0x38, 0x20, 0x21, 0x21, 0x22, 0x1C, 0x00 }, /*"S",51*/\n    { 0x18, 0x08, 0x08, 0xF8, 0x08, 0x08, 0x18, 0x00, 0x00, 0x00, 0x20, 0x3F, 0x20, 0x00, 0x00, 0x00 }, /*"T",52*/\n    { 0x08, 0xF8, 0x08, 0x00, 0x00, 0x08, 0xF8, 0x08, 0x00, 0x1F, 0x20, 0x20, 0x20, 0x20, 0x1F, 0x00 }, /*"U",53*/\n    { 0x08, 0x78, 0x88, 0x00, 0x00, 0xC8, 0x38, 0x08, 0x00, 0x00, 0x07, 0x38, 0x0E, 0x01, 0x00, 0x00 }, /*"V",54*/\n    { 0xF8, 0x08, 0x00, 0xF8, 0x00, 0x08, 0xF8, 0x00, 0x03, 0x3C, 0x07, 0x00, 0x07, 0x3C, 0x03, 0x00 }, /*"W",55*/\n    { 0x08, 0x18, 0x68, 0x80, 0x80, 0x68, 0x18, 0x08, 0x20, 0x30, 0x2C, 0x03, 0x03, 0x2C, 0x30, 0x20 }, /*"X",56*/\n    { 0x08, 0x38, 0xC8, 0x00, 0xC8, 0x38, 0x08, 0x00, 0x00, 0x00, 0x20, 0x3F, 0x20, 0x00, 0x00, 0x00 }, /*"Y",57*/\n    { 0x10, 0x08, 0x08, 0x08, 0xC8, 0x38, 0x08, 0x00, 0x20, 0x38, 0x26, 0x21, 0x20, 0x20, 0x18, 0x00 }, /*"Z",58*/\n    { 0x00, 0x00, 0x00, 0xFE, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x40, 0x40, 0x40, 0x00 }, /*"[",59*/\n    { 0x00, 0x0C, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x38, 0xC0, 0x00 }, /*"\\",60*/\n    { 0x00, 0x02, 0x02, 0x02, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x7F, 0x00, 0x00, 0x00 }, /*"]",61*/\n    { 0x00, 0x00, 0x04, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"^",62*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 }, /*"_",63*/\n    { 0x00, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"`",64*/\n    { 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x19, 0x24, 0x22, 0x22, 0x22, 0x3F, 0x20 }, /*"a",65*/\n    { 0x08, 0xF8, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x11, 0x20, 0x20, 0x11, 0x0E, 0x00 }, /*"b",66*/\n    { 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x0E, 0x11, 0x20, 0x20, 0x20, 0x11, 0x00 }, /*"c",67*/\n    { 0x00, 0x00, 0x00, 0x80, 0x80, 0x88, 0xF8, 0x00, 0x00, 0x0E, 0x11, 0x20, 0x20, 0x10, 0x3F, 0x20 }, /*"d",68*/\n    { 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x1F, 0x22, 0x22, 0x22, 0x22, 0x13, 0x00 }, /*"e",69*/\n    { 0x00, 0x80, 0x80, 0xF0, 0x88, 0x88, 0x88, 0x18, 0x00, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00 }, /*"f",70*/\n    { 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x6B, 0x94, 0x94, 0x94, 0x93, 0x60, 0x00 }, /*"g",71*/\n    { 0x08, 0xF8, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x20, 0x3F, 0x21, 0x00, 0x00, 0x20, 0x3F, 0x20 }, /*"h",72*/\n    { 0x00, 0x80, 0x98, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00 }, /*"i",73*/\n    { 0x00, 0x00, 0x00, 0x80, 0x98, 0x98, 0x00, 0x00, 0x00, 0xC0, 0x80, 0x80, 0x80, 0x7F, 0x00, 0x00 }, /*"j",74*/\n    { 0x08, 0xF8, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x20, 0x3F, 0x24, 0x02, 0x2D, 0x30, 0x20, 0x00 }, /*"k",75*/\n    { 0x00, 0x08, 0x08, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x00, 0x00 }, /*"l",76*/\n    { 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x20, 0x3F, 0x20, 0x00, 0x3F, 0x20, 0x00, 0x3F }, /*"m",77*/\n    { 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x20, 0x3F, 0x21, 0x00, 0x00, 0x20, 0x3F, 0x20 }, /*"n",78*/\n    { 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x1F, 0x20, 0x20, 0x20, 0x20, 0x1F, 0x00 }, /*"o",79*/\n    { 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xA1, 0x20, 0x20, 0x11, 0x0E, 0x00 }, /*"p",80*/\n    { 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x0E, 0x11, 0x20, 0x20, 0xA0, 0xFF, 0x80 }, /*"q",81*/\n    { 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00, 0x20, 0x20, 0x3F, 0x21, 0x20, 0x00, 0x01, 0x00 }, /*"r",82*/\n    { 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x33, 0x24, 0x24, 0x24, 0x24, 0x19, 0x00 }, /*"s",83*/\n    { 0x00, 0x80, 0x80, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x20, 0x20, 0x00, 0x00 }, /*"t",84*/\n    { 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x1F, 0x20, 0x20, 0x20, 0x10, 0x3F, 0x20 }, /*"u",85*/\n    { 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x01, 0x0E, 0x30, 0x08, 0x06, 0x01, 0x00 }, /*"v",86*/\n    { 0x80, 0x80, 0x00, 0x80, 0x00, 0x80, 0x80, 0x80, 0x0F, 0x30, 0x0C, 0x03, 0x0C, 0x30, 0x0F, 0x00 }, /*"w",87*/\n    { 0x00, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x20, 0x31, 0x2E, 0x0E, 0x31, 0x20, 0x00 }, /*"x",88*/\n    { 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x81, 0x8E, 0x70, 0x18, 0x06, 0x01, 0x00 }, /*"y",89*/\n    { 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x21, 0x30, 0x2C, 0x22, 0x21, 0x30, 0x00 }, /*"z",90*/\n    { 0x00, 0x00, 0x00, 0x00, 0x80, 0x7C, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x40, 0x40 }, /*"{",91*/\n    { 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00 }, /*"|",92*/\n    { 0x00, 0x02, 0x02, 0x7C, 0x80, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x3F, 0x00, 0x00, 0x00, 0x00 }, /*"}",93*/\n    { 0x00, 0x06, 0x01, 0x01, 0x02, 0x02, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"~",94*/\n};\n//24*24 ASICII\u5b57\u7b26\u96c6\u70b9\u9635\nconst unsigned char asc2_2412[][36] = {\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*" ",0*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00 }, /*"!",1*/\n    { 0x00, 0x00, 0x80, 0x60, 0x30, 0x1C, 0x8C, 0x60, 0x30, 0x1C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*""",2*/\n    { 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x86, 0xE6, 0x9F, 0x86, 0x86, 0x86, 0x86, 0xE6, 0x9F, 0x86, 0x00, 0x00, 0x01, 0x1F, 0x01, 0x01, 0x01, 0x01, 0x01, 0x1F, 0x01, 0x01, 0x00 }, /*"#",3*/\n    { 0x00, 0x00, 0x80, 0xC0, 0x60, 0x20, 0xF8, 0x20, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0C, 0x18, 0xFF, 0x70, 0xE1, 0x81, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x10, 0x10, 0x7F, 0x10, 0x0F, 0x07, 0x00, 0x00 }, /*"$",4*/\n    { 0x80, 0x60, 0x20, 0x60, 0x80, 0x00, 0x00, 0x00, 0xE0, 0x20, 0x00, 0x00, 0x0F, 0x30, 0x20, 0x30, 0x9F, 0x70, 0xDC, 0x37, 0x10, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x03, 0x00, 0x07, 0x18, 0x10, 0x18, 0x07, 0x00 }, /*"%",5*/\n    { 0x00, 0x00, 0xC0, 0x20, 0x20, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0x1F, 0x38, 0xE8, 0x87, 0x03, 0xC4, 0x3C, 0x04, 0x00, 0x00, 0x07, 0x0F, 0x18, 0x10, 0x10, 0x0B, 0x07, 0x0D, 0x10, 0x10, 0x08, 0x00 }, /*"&",6*/\n    { 0x00, 0x80, 0x8C, 0x4C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"\'",7*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0x30, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x18, 0x20, 0x40, 0x00 }, /*"(",8*/\n    { 0x00, 0x04, 0x08, 0x30, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x18, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*")",9*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x66, 0x66, 0x3C, 0x18, 0xFF, 0x18, 0x3C, 0x66, 0x66, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"*",10*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"+",11*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x8C, 0x4C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*",",12*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"-",13*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*".",14*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x38, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x70, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x38, 0x0E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"/",15*/\n    { 0x00, 0x00, 0x80, 0xC0, 0x60, 0x20, 0x20, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x01, 0x07, 0x0E, 0x18, 0x10, 0x10, 0x18, 0x0E, 0x07, 0x01, 0x00 }, /*"0",16*/\n    { 0x00, 0x00, 0x80, 0x80, 0x80, 0xC0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x00, 0x00 }, /*"1",17*/\n    { 0x00, 0x80, 0x40, 0x20, 0x20, 0x20, 0x20, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x80, 0x40, 0x20, 0x38, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x1C, 0x1A, 0x19, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0x00, 0x00 }, /*"2",18*/\n    { 0x00, 0x80, 0xC0, 0x20, 0x20, 0x20, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x10, 0x10, 0x18, 0x2F, 0xE7, 0x80, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x10, 0x10, 0x10, 0x10, 0x18, 0x0F, 0x07, 0x00, 0x00 }, /*"3",19*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xB0, 0x88, 0x86, 0x81, 0x80, 0xFF, 0xFF, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x00 }, /*"4",20*/\n    { 0x00, 0x00, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x10, 0x08, 0x08, 0x08, 0x18, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x07, 0x0B, 0x10, 0x10, 0x10, 0x10, 0x1C, 0x0F, 0x03, 0x00, 0x00 }, /*"5",21*/\n    { 0x00, 0x00, 0x80, 0xC0, 0x40, 0x20, 0x20, 0x20, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x21, 0x10, 0x08, 0x08, 0x08, 0x18, 0xF0, 0xE0, 0x00, 0x00, 0x01, 0x07, 0x0C, 0x18, 0x10, 0x10, 0x10, 0x08, 0x0F, 0x03, 0x00 }, /*"6",22*/\n    { 0x00, 0x00, 0xC0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0x60, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xE0, 0x18, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"7",23*/\n    { 0x00, 0x80, 0xC0, 0x60, 0x20, 0x20, 0x20, 0x20, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x87, 0xEF, 0x2C, 0x18, 0x18, 0x30, 0x30, 0x68, 0xCF, 0x83, 0x00, 0x00, 0x07, 0x0F, 0x08, 0x10, 0x10, 0x10, 0x10, 0x18, 0x0F, 0x07, 0x00 }, /*"8",24*/\n    { 0x00, 0x00, 0xC0, 0xC0, 0x20, 0x20, 0x20, 0x20, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x60, 0x40, 0x40, 0x40, 0x20, 0x10, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x0C, 0x1C, 0x10, 0x10, 0x10, 0x08, 0x0F, 0x03, 0x00, 0x00 }, /*"9",25*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x0E, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00 }, /*":",26*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*";",27*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x00, 0x00, 0x00, 0x10, 0x28, 0x44, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x00 }, /*"<",28*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"=",29*/\n    { 0x00, 0x00, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x82, 0x44, 0x28, 0x10, 0x00, 0x00, 0x00, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*">",30*/\n    { 0x00, 0xC0, 0x20, 0x20, 0x10, 0x10, 0x10, 0x10, 0x30, 0xE0, 0xC0, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0xF0, 0x10, 0x08, 0x0C, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"?",31*/\n    { 0x00, 0x00, 0x00, 0xC0, 0x40, 0x60, 0x20, 0x20, 0x20, 0x40, 0xC0, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0xF0, 0x0E, 0x03, 0xC1, 0xFE, 0x03, 0x80, 0x7F, 0x00, 0x01, 0x07, 0x0E, 0x08, 0x11, 0x11, 0x10, 0x11, 0x09, 0x04, 0x02 }, /*"@",32*/\n    { 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7C, 0x43, 0x40, 0x47, 0x7F, 0xF8, 0x80, 0x00, 0x00, 0x10, 0x18, 0x1F, 0x10, 0x00, 0x00, 0x00, 0x00, 0x13, 0x1F, 0x1C, 0x10 }, /*"A",33*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x20, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x18, 0x2F, 0xE7, 0x80, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x10, 0x18, 0x0F, 0x07, 0x00 }, /*"B",34*/\n    { 0x00, 0x00, 0x80, 0xC0, 0x40, 0x20, 0x20, 0x20, 0x20, 0x60, 0xE0, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x07, 0x0E, 0x18, 0x10, 0x10, 0x10, 0x08, 0x04, 0x03, 0x00 }, /*"C",35*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x20, 0x40, 0xC0, 0x80, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x18, 0x08, 0x0E, 0x07, 0x01, 0x00 }, /*"D",36*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x60, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x18, 0x06, 0x00 }, /*"E",37*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x60, 0x60, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00, 0x01, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"F",38*/\n    { 0x00, 0x00, 0x80, 0xC0, 0x60, 0x20, 0x20, 0x20, 0x40, 0xE0, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0x00, 0x00, 0x40, 0x40, 0xC0, 0xC1, 0x40, 0x40, 0x00, 0x01, 0x07, 0x0E, 0x18, 0x10, 0x10, 0x10, 0x0F, 0x0F, 0x00, 0x00 }, /*"G",39*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x00, 0x00, 0x00, 0x00, 0x20, 0xE0, 0xE0, 0x20, 0x00, 0xFF, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0xFF, 0xFF, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00, 0x00, 0x00, 0x00, 0x10, 0x1F, 0x1F, 0x10 }, /*"H",40*/\n    { 0x00, 0x00, 0x20, 0x20, 0x20, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x00, 0x00 }, /*"I",41*/\n    { 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x20, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x60, 0xE0, 0x80, 0x80, 0x80, 0xC0, 0x7F, 0x3F, 0x00, 0x00, 0x00 }, /*"J",42*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x00, 0x00, 0x20, 0xA0, 0x60, 0x20, 0x20, 0x00, 0x00, 0xFF, 0xFF, 0x30, 0x18, 0x7C, 0xE3, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00, 0x00, 0x01, 0x13, 0x1F, 0x1C, 0x18, 0x10 }, /*"K",43*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x18, 0x06, 0x00 }, /*"L",44*/\n    { 0x20, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0x20, 0x00, 0xFF, 0x01, 0x3F, 0xFE, 0xC0, 0xE0, 0x1E, 0x01, 0xFF, 0xFF, 0x00, 0x10, 0x1F, 0x10, 0x00, 0x03, 0x1F, 0x03, 0x00, 0x10, 0x1F, 0x1F, 0x10 }, /*"M",45*/\n    { 0x20, 0xE0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xE0, 0x20, 0x00, 0xFF, 0x00, 0x03, 0x07, 0x1C, 0x78, 0xE0, 0x80, 0x00, 0xFF, 0x00, 0x10, 0x1F, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1F, 0x00 }, /*"N",46*/\n    { 0x00, 0x00, 0x80, 0xC0, 0x60, 0x20, 0x20, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x01, 0x07, 0x0E, 0x18, 0x10, 0x10, 0x18, 0x0C, 0x07, 0x01, 0x00 }, /*"O",47*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x60, 0xC0, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x20, 0x20, 0x20, 0x20, 0x20, 0x30, 0x1F, 0x0F, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"P",48*/\n    { 0x00, 0x00, 0x80, 0xC0, 0x60, 0x20, 0x20, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x01, 0x07, 0x0E, 0x11, 0x11, 0x13, 0x3C, 0x7C, 0x67, 0x21, 0x00 }, /*"Q",49*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x60, 0xC0, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x10, 0x10, 0x30, 0xF0, 0xD0, 0x08, 0x0F, 0x07, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1C, 0x10, 0x10 }, /*"R",50*/\n    { 0x00, 0x80, 0xC0, 0x60, 0x20, 0x20, 0x20, 0x20, 0x40, 0x40, 0xE0, 0x00, 0x00, 0x07, 0x0F, 0x0C, 0x18, 0x18, 0x30, 0x30, 0x60, 0xE0, 0x81, 0x00, 0x00, 0x1F, 0x0C, 0x08, 0x10, 0x10, 0x10, 0x10, 0x18, 0x0F, 0x07, 0x00 }, /*"S",51*/\n    { 0x80, 0x60, 0x20, 0x20, 0x20, 0xE0, 0xE0, 0x20, 0x20, 0x20, 0x60, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00, 0x00, 0x00, 0x00 }, /*"T",52*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xE0, 0x20, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x07, 0x0F, 0x18, 0x10, 0x10, 0x10, 0x10, 0x10, 0x08, 0x07, 0x00 }, /*"U",53*/\n    { 0x20, 0x60, 0xE0, 0xE0, 0x20, 0x00, 0x00, 0x00, 0x20, 0xE0, 0x60, 0x20, 0x00, 0x00, 0x07, 0x7F, 0xF8, 0x80, 0x00, 0x80, 0x7C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1F, 0x1C, 0x07, 0x00, 0x00, 0x00, 0x00 }, /*"V",54*/\n    { 0x20, 0xE0, 0xE0, 0x20, 0x00, 0xE0, 0xE0, 0x20, 0x00, 0x20, 0xE0, 0x20, 0x00, 0x07, 0xFF, 0xF8, 0xE0, 0x1F, 0xFF, 0xFC, 0xE0, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1F, 0x03, 0x00, 0x01, 0x1F, 0x03, 0x00, 0x00, 0x00 }, /*"W",55*/\n    { 0x00, 0x20, 0x60, 0xE0, 0xA0, 0x00, 0x00, 0x20, 0xE0, 0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8F, 0x7C, 0xF8, 0xC6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x18, 0x1E, 0x13, 0x00, 0x01, 0x17, 0x1F, 0x18, 0x10, 0x00 }, /*"X",56*/\n    { 0x20, 0x60, 0xE0, 0xE0, 0x20, 0x00, 0x00, 0x00, 0x20, 0xE0, 0x60, 0x20, 0x00, 0x00, 0x01, 0x07, 0x3E, 0xF8, 0xE0, 0x18, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x00, 0x00, 0x00 }, /*"Y",57*/\n    { 0x00, 0x80, 0x60, 0x20, 0x20, 0x20, 0x20, 0xA0, 0xE0, 0xE0, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0x3E, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x10, 0x1C, 0x1F, 0x17, 0x10, 0x10, 0x10, 0x10, 0x18, 0x06, 0x00 }, /*"Z",58*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00 }, /*"[",59*/\n    { 0x00, 0x00, 0x10, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1C, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0C, 0x70, 0x80, 0x00 }, /*"\\",60*/\n    { 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7F, 0x00, 0x00, 0x00, 0x00 }, /*"]",61*/\n    { 0x00, 0x00, 0x00, 0x10, 0x08, 0x0C, 0x04, 0x0C, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"^",62*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 }, /*"_",63*/\n    { 0x00, 0x00, 0x00, 0x04, 0x04, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"`",64*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xD8, 0x44, 0x64, 0x24, 0x24, 0xFC, 0xF8, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x18, 0x10, 0x10, 0x10, 0x08, 0x1F, 0x1F, 0x10, 0x18 }, /*"a",65*/\n    { 0x00, 0x20, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x18, 0x08, 0x04, 0x04, 0x0C, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x18, 0x10, 0x10, 0x10, 0x18, 0x0F, 0x03, 0x00 }, /*"b",66*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF8, 0x18, 0x04, 0x04, 0x04, 0x3C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x0C, 0x10, 0x10, 0x10, 0x10, 0x08, 0x06, 0x00, 0x00 }, /*"c",67*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0xE0, 0xF8, 0x1C, 0x04, 0x04, 0x04, 0x08, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x18, 0x10, 0x10, 0x10, 0x08, 0x1F, 0x0F, 0x08, 0x00 }, /*"d",68*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF8, 0x48, 0x44, 0x44, 0x44, 0x4C, 0x78, 0x70, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x0C, 0x18, 0x10, 0x10, 0x10, 0x08, 0x04, 0x00 }, /*"e",69*/\n    { 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0x60, 0x20, 0x20, 0xE0, 0xC0, 0x00, 0x00, 0x04, 0x04, 0x04, 0xFF, 0xFF, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00 }, /*"f",70*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xF8, 0x8C, 0x04, 0x04, 0x8C, 0xF8, 0x74, 0x04, 0x0C, 0x00, 0x70, 0x76, 0xCF, 0x8D, 0x8D, 0x8D, 0x89, 0xC8, 0x78, 0x70, 0x00 }, /*"g",71*/\n    { 0x00, 0x20, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x08, 0x04, 0x04, 0x04, 0xFC, 0xF8, 0x00, 0x00, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00 }, /*"h",72*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x00, 0x00 }, /*"i",73*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x80, 0x80, 0xC0, 0x7F, 0x3F, 0x00, 0x00, 0x00 }, /*"j",74*/\n    { 0x00, 0x20, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0xC0, 0xF4, 0x1C, 0x04, 0x04, 0x00, 0x00, 0x00, 0x10, 0x1F, 0x1F, 0x11, 0x00, 0x03, 0x1F, 0x1C, 0x10, 0x10, 0x00 }, /*"k",75*/\n    { 0x00, 0x00, 0x20, 0x20, 0x20, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x00, 0x00 }, /*"l",76*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xFC, 0xFC, 0x08, 0x04, 0xFC, 0xFC, 0x08, 0x04, 0xFC, 0xFC, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00, 0x1F, 0x1F, 0x10, 0x00, 0x1F, 0x1F, 0x10 }, /*"m",77*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xFC, 0xFC, 0x08, 0x08, 0x04, 0x04, 0xFC, 0xF8, 0x00, 0x00, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00, 0x00, 0x10, 0x1F, 0x1F, 0x10, 0x00 }, /*"n",78*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0x18, 0x0C, 0x04, 0x04, 0x0C, 0x18, 0xF0, 0xE0, 0x00, 0x00, 0x03, 0x0F, 0x0C, 0x10, 0x10, 0x10, 0x10, 0x0C, 0x0F, 0x03, 0x00 }, /*"o",79*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xFC, 0xFC, 0x08, 0x04, 0x04, 0x04, 0x0C, 0xF8, 0xF0, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x88, 0x90, 0x10, 0x10, 0x1C, 0x0F, 0x03, 0x00 }, /*"p",80*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF8, 0x1C, 0x04, 0x04, 0x04, 0x08, 0xF8, 0xFC, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x18, 0x10, 0x10, 0x90, 0x88, 0xFF, 0xFF, 0x80, 0x00 }, /*"q",81*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0xFC, 0xFC, 0x10, 0x08, 0x04, 0x04, 0x0C, 0x0C, 0x00, 0x10, 0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00 }, /*"r",82*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x78, 0xCC, 0xC4, 0x84, 0x84, 0x84, 0x0C, 0x1C, 0x00, 0x00, 0x00, 0x1E, 0x18, 0x10, 0x10, 0x10, 0x11, 0x19, 0x0F, 0x06, 0x00 }, /*"s",83*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0xFF, 0xFF, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x10, 0x10, 0x10, 0x0C, 0x00, 0x00 }, /*"t",84*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xFC, 0xFE, 0x00, 0x00, 0x00, 0x04, 0xFC, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x18, 0x10, 0x10, 0x08, 0x1F, 0x0F, 0x08, 0x00 }, /*"u",85*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x3C, 0xFC, 0xC4, 0x00, 0x00, 0xC4, 0x3C, 0x0C, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0F, 0x1E, 0x0E, 0x01, 0x00, 0x00, 0x00 }, /*"v",86*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x3C, 0xFC, 0xC4, 0x00, 0xE4, 0x7C, 0xFC, 0x84, 0x80, 0x7C, 0x04, 0x00, 0x00, 0x07, 0x1F, 0x07, 0x00, 0x00, 0x07, 0x1F, 0x07, 0x00, 0x00 }, /*"w",87*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x1C, 0x7C, 0xE4, 0xC0, 0x34, 0x1C, 0x04, 0x04, 0x00, 0x00, 0x10, 0x10, 0x1C, 0x16, 0x01, 0x13, 0x1F, 0x1C, 0x18, 0x10, 0x00 }, /*"x",88*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x3C, 0xFC, 0xC4, 0x00, 0xC4, 0x3C, 0x04, 0x04, 0x00, 0x00, 0x00, 0xC0, 0x80, 0xC1, 0x37, 0x0E, 0x01, 0x00, 0x00, 0x00, 0x00 }, /*"y",89*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x04, 0xC4, 0xF4, 0x7C, 0x1C, 0x04, 0x00, 0x00, 0x00, 0x00, 0x10, 0x1C, 0x1F, 0x17, 0x11, 0x10, 0x10, 0x18, 0x0E, 0x00 }, /*"z",90*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0C, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x28, 0xEF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x60, 0x40, 0x00, 0x00 }, /*"{",91*/\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"|",92*/\n    { 0x00, 0x00, 0x04, 0x0C, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEF, 0x28, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"}",93*/\n    { 0x00, 0x18, 0x06, 0x02, 0x02, 0x04, 0x08, 0x10, 0x20, 0x20, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, /*"~",94*/\n};\n\n#endif\n'})})]})}function C(x={}){const{wrapper:n}={...(0,i.a)(),...x.components};return n?(0,t.jsx)(n,{...x,children:(0,t.jsx)(D,{...x})}):D(x)}},1151:(x,n,e)=>{e.d(n,{Z:()=>s,a:()=>_});var t=e(7294);const i={},F=t.createContext(i);function _(x){const n=t.useContext(F);return t.useMemo((function(){return"function"==typeof x?x(n):{...n,...x}}),[n,x])}function s(x){let n;return n=x.disableParentContext?"function"==typeof x.components?x.components(i):x.components||i:_(x.components),t.createElement(F.Provider,{value:n},x.children)}}}]);